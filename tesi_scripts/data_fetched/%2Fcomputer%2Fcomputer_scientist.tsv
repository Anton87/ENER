paragraph	sentence	mid	title	start	end	notable_types
The CAMAL (CAMbridge ALgebra system) is a computer algebra system written at Cambridge University by David Barton, Steve Bourne, and John Fitch. It was initially used for computations in celestial mechanics and general relativity.	The CAMAL (CAMbridge ALgebra system) is a computer algebra system written at Cambridge University by David Barton, Steve Bourne, and John Fitch.	/m/027rqx2	John_Fitch_(computer_scientist)	133	143	/people/person
Various Unix people, particularly Peter H. Salus, Dennis Ritchie and Berny Goodheart, lobbied Unix's various owners (AT&T, Novell, the Santa Cruz Operation) for many years to allow the book to be published officially. In 1996, the Santa Cruz Operation finally authorised the release of the twenty-year-old 6th Edition source code (along with the source code of other versions of "Ancient UNIX"), and the full code plus the 1977 version of the commentary was published by Peer-To-Peer Communications (ISBN 1-57398-013-7). The reissue includes commentary from Michael Tilson (SCO), Peter Salus, Dennis Ritchie, Ken Thompson, Peter Collinson, Greg Rose, Mike O'Dell, Berny Goodheart and Peter Reintjes.	Various Unix people, particularly Peter H. Salus, Dennis Ritchie and Berny Goodheart, lobbied Unix's various owners (AT&T, Novell, the Santa Cruz Operation) for many years to allow the book to be published officially.	/m/0325cf	Berny_Goodheart	69	84	/people/person
Various Unix people, particularly Peter H. Salus, Dennis Ritchie and Berny Goodheart, lobbied Unix's various owners (AT&T, Novell, the Santa Cruz Operation) for many years to allow the book to be published officially. In 1996, the Santa Cruz Operation finally authorised the release of the twenty-year-old 6th Edition source code (along with the source code of other versions of "Ancient UNIX"), and the full code plus the 1977 version of the commentary was published by Peer-To-Peer Communications (ISBN 1-57398-013-7). The reissue includes commentary from Michael Tilson (SCO), Peter Salus, Dennis Ritchie, Ken Thompson, Peter Collinson, Greg Rose, Mike O'Dell, Berny Goodheart and Peter Reintjes.	The reissue includes commentary from Michael Tilson (SCO), Peter Salus, Dennis Ritchie, Ken Thompson, Peter Collinson, Greg Rose, Mike O'Dell, Berny Goodheart and Peter Reintjes.	/m/0325cf	Berny_Goodheart	143	158	/people/person
Libeskind-Hadas is a coauthor of R. Libeskind-Hadas, N. Hasan, J. Cong, P. McKinley, and C. L. Liu. Fault Covering Problems in Reconfigurable VLSI Systems. Kluwer Academic Publishers, 1992., and has published 16 peer reviewed papers and 20 peer-reviewed conference proceedings.	Libeskind-Hadas is a coauthor of R. Libeskind-Hadas, N. Hasan, J. Cong, P. McKinley, and C. L. Liu.	/m/02q2vp7	Chung_Laung_Liu	89	98	/education/academic,/people/person
Zaks received his BSc degree from Technion in 1971 and MSc from Technion in 1972. In 1979 he received his PhD degree from University of Illinois at Urbana-Champaign, where his PhD supervisor was Chung Laung Liu. Since then, he has done joint work with numerous co-authors, including the prolific mathematician Paul Erd≈ës.	In 1979 he received his PhD degree from University of Illinois at Urbana-Champaign, where his PhD supervisor was Chung Laung Liu.	/m/02q2vp7	Chung_Laung_Liu	113	128	/education/academic,/people/person
In the 1990s, AI researchers developed sophisticated mathematical tools to solve specific subproblems. These tools are truly scientific, in the sense that their results are both measurable and verifiable, and they have been responsible for many of AI's recent successes. The shared mathematical language has also permitted a high level of collaboration with more established fields (like mathematics, economics or operations research). Stuart Russell and Peter Norvig describe this movement as nothing less than a "revolution" and "the victory of the neats." Critics argue that these techniques are too focused on particular problems and have failed to address the long term goal of general intelligence. There is an ongoing debate about the relevance and validity of statistical approaches in AI, exemplified in part by exchanges between Peter Norvig and Noam Chomsky.	Stuart Russell and Peter Norvig describe this movement as nothing less than a "revolution" and "the victory of the neats.	/m/02qrqn	Stuart_J._Russell	0	14	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
New statistical and mathematical approaches to AI were developed in the 1990s, using highly developed formalisms such as Bayesian nets and mathematical optimization. This general trend towards more formal methods in AI is described as "the victory of the neats" by Peter Norvig and Stuart Russell. Pamela McCorduck, in 2004: "As I write, AI enjoys a Neat hegemony, people who believe that machine intelligence, at least, is best expressed in logical, even mathematical terms." Neat solutions have been highly successful in the 21st century and are now used throughout the technology industry. These solutions, however, have mostly been applied to specific problems with specific solutions, and the problem of general intelligence remains unsolved.	This general trend towards more formal methods in AI is described as "the victory of the neats" by Peter Norvig and Stuart Russell.	/m/02qrqn	Stuart_J._Russell	116	130	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He is a Fellow and Councilor of the Association for the Advancement of Artificial Intelligence and co-author, with Stuart Russell, of Artificial Intelligence: A Modern Approach, now the leading college text in the field. He previously was head of the Computational Sciences Division (now the Intelligent Systems Division) at NASA Ames Research Center, where he oversaw a staff of 200 scientists performing NASA's research and development in autonomy and robotics, automated software engineering and data analysis, neuroengineering, collaborative systems research, and simulation-based decision-making. Before that he was Chief Scientist at Junglee, where he helped develop one of the first Internet comparison shopping services; Chief designer at Harlequin Inc.; and Senior Scientist at Sun Microsystems Laboratories.	He is a Fellow and Councilor of the Association for the Advancement of Artificial Intelligence and co-author, with Stuart Russell, of Artificial Intelligence: A Modern Approach, now the leading college text in the field.	/m/02qrqn	Stuart_J._Russell	115	129	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Artificial Intelligence: A Modern Approach (AIMA) is a college textbook on Artificial Intelligence, written by Stuart J. Russell and Peter Norvig. The third edition of the book was released 11 December 2009. It is used in over 1100 universities worldwide and has been called "the most popular artificial intelligence textbook in the world".	Artificial Intelligence: A Modern Approach (AIMA) is a college textbook on Artificial Intelligence, written by Stuart J. Russell and Peter Norvig.	/m/02qrqn	Stuart_J._Russell	111	128	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The term "strong AI" is now used to describe any artificial intelligence system that acts like it has a mind, regardless of whether a philosopher would be able to determine if it actually has a mind or not. As Russell and Norvig write: "Most AI researchers take the weak AI hypothesis for granted, and don't care about the strong AI hypothesis." AI researchers are interested in a related statement:	As Russell and Norvig write: "Most AI researchers take the weak AI hypothesis for granted, and don't care about the strong AI hypothesis.	/m/02qrqn	Stuart_J._Russell	3	10	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
One criticism of the Turing test is that it is explicitly anthropomorphic. If our ultimate goal is to create machines that are more intelligent than people, why should we insist that our machines must closely resemble people? Russell and Norvig write that "aeronautical engineering texts do not define the goal of their field as 'making machines that fly so exactly like pigeons that they can fool other pigeons.'"	Russell and Norvig write that "aeronautical engineering texts do not define the goal of their field as 'making machines that fly so exactly like pigeons that they can fool other pigeons.	/m/02qrqn	Stuart_J._Russell	0	7	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Neither of Searle's two positions are of great concern to AI research, since they do not directly answer the question "can a machine display general intelligence?" (unless it can also be shown that consciousness is necessary for intelligence). There are a few researchers who believe that consciousness is an essential element in intelligence, such as Igor Aleksander, Stan Franklin, Ron Sun, and Pentti Haikonen, although their definition of "consciousness" strays very close to "intelligence." See artificial consciousness. Turing wrote "I do not wish to give the impression that I think there is no mystery about consciousness ... ut I do not think these mysteries necessarily need to be solved before we can answer the question ." Russell and Norvig agree: "Most AI researchers take the weak AI hypothesis for granted, and don't care about the strong AI hypothesis."	" Russell and Norvig agree: "Most AI researchers take the weak AI hypothesis for granted, and don't care about the strong AI hypothesis.	/m/02qrqn	Stuart_J._Russell	2	9	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Prentice Hall is the publisher of Magruder's American Government as well as Biology by Ken Miller and Joe Levine. Their artificial intelligence series includes Artificial Intelligence: A Modern Approach by Stuart J. Russell and Peter Norvig and ANSI Common Lisp by Paul Graham. They also published the well-known computer programming book The C Programming Language by Brian Kernighan and Dennis Ritchie.	Their artificial intelligence series includes Artificial Intelligence: A Modern Approach by Stuart J. Russell and Peter Norvig and ANSI Common Lisp by Paul Graham.	/m/02qrqn	Stuart_J._Russell	92	109	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Mainstream AI researchers argue that trying to pass the Turing Test is merely a distraction from more fruitful research. Indeed, the Turing test is not an active focus of much academic or commercial effort‚Äîas Stuart Russell and Peter Norvig write: "AI researchers have devoted little attention to passing the Turing test." There are several reasons.	Indeed, the Turing test is not an active focus of much academic or commercial effort‚Äîas Stuart Russell and Peter Norvig write: "AI researchers have devoted little attention to passing the Turing test.	/m/02qrqn	Stuart_J._Russell	88	102	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The project was started as ChipTest at Carnegie Mellon University by Feng-hsiung Hsu, followed by its successor, Deep Thought. After their graduation from Carnegie Mellon, Hsu, Thomas Anantharaman, and Murray Campbell from the Deep Thought team were hired by IBM Research to continue their quest to build a chess machine that could defeat the world champion. Hsu and Campbell joined IBM in autumn 1989, with Anantharaman following later. Anantharaman subsequently left IBM for Wall Street and Arthur Joseph Hoane joined the team to perform programming tasks. Jerry Brody, a long-time employee of IBM Research, was recruited for the team in 1990. The team was managed first by Randy Moulic, followed by Chung-Jen (C J) Tan.	After their graduation from Carnegie Mellon, Hsu, Thomas Anantharaman, and Murray Campbell from the Deep Thought team were hired by IBM Research to continue their quest to build a chess machine that could defeat the world champion.	/m/02853tn	Murray_Campbell	75	90	/computer/computer_scientist,/computer/software_developer,/people/person
ChipTest was a 1985 chess playing computer built by Feng-hsiung Hsu, Thomas Anantharaman and Murray Campbell at Carnegie Mellon University. It is the predecessor of Deep Thought which in turn evolved into Deep Blue.	ChipTest was a 1985 chess playing computer built by Feng-hsiung Hsu, Thomas Anantharaman and Murray Campbell at Carnegie Mellon University.	/m/02853tn	Murray_Campbell	93	108	/computer/computer_scientist,/computer/software_developer,/people/person
HiTech was a chess machine built at Carnegie Mellon University under the direction of World Correspondence Chess Champion Dr. Hans J. Berliner, by Berliner, Carl Ebeling, Murray Campbell, and Gordon Goetsch.	HiTech was a chess machine built at Carnegie Mellon University under the direction of World Correspondence Chess Champion Dr. Hans J. Berliner, by Berliner, Carl Ebeling, Murray Campbell, and Gordon Goetsch.	/m/02853tn	Murray_Campbell	171	186	/computer/computer_scientist,/computer/software_developer,/people/person
Bernard Cafferty talk - Michel Caillaud talk - Ignazio Calvi talk - Ricardo Calvo talk - Murray Campbell talk - Daniel C√°mpora talk - Florencio Campomanes talk - Esteban Canal talk - Arianne Caoili talk - Jos√© Ra√∫l Capablanca talk - Rodolfo Tan Cardoso talk - Ruth Volgl Cardoso talk - Carl Carls talk - Magnus Carlsen talk - Pontus Carlsson talk - Horatio Caro talk - Fabiano Caruana talk - Berna Carrasco talk - Pietro Carrera talk - Hartwig Cassel talk - Vincenzo Castaldi talk - Mariano Castillo talk - Mi≈°o Cebalo talk - Bet√ºl Cemre Yƒ±ldƒ±z talk - Giovanni Cenni talk - Luigi Centurini talk - Alfonso Ceron talk - Oscar Chajes talk - Ferenc Chalupetzky talk - Edward Chamier talk - Chan Peng Kong talk - Murray Chandler talk - Chang Tung Lo talk - Pascal Charbonneau talk - Henry Charlick talk - Rudolf Charousek talk - Chantal Chaud√© de Silans talk - Russ Chauvenet talk - Valery Chekhov talk - Vitaly Chekhover talk - Chen Zude talk - Chen De talk - Bobby Cheng talk - Ivan Cheparinov talk - Alexander Cherepkov talk - Irving Chernev talk - Alexander Chernin talk - Konstantin Chernyshov talk - Andr√© Ch√©ron talk - Maia Chiburdanidze talk - Mikhail Chigorin talk - Larry Christiansen talk - Martin Christoffel talk - Vladimir Chuchelov talk - Slavko Cicak talk - Roberto Cifuentes talk - Victor Cioc√¢ltea talk - Kenneth Clayton talk - Hermann Clemenz talk - Albert Clerc talk - Viktorija ƒåmilytƒó talk - John Cochrane (chess player) talk - Philip M. Cohen talk - Erich Cohn talk - Wilhelm Cohn talk - Edgard Colle talk - John W. Collins talk - Eugene Ernest Colman talk - Adri√°n Garc√≠a Conde talk - Stuart Conquest talk - Nathaniel Cook talk - Philip Corbin talk - Deysi Cori talk - Jorge Cori talk - Anya Corke talk - Nicolaas Cortlever talk - Juan Corzo talk - John Cox (chess player) talk - Carlo Cozio talk - Spencer Crakanthorp talk - Pia Cramling talk - Robert Cr√©peaux talk - Rupert Cross talk - Oswaldo Cruz Filho talk - Walter Cruz talk - Istv√°n Csom talk - Miguel Cu√©llar talk - Pablo Cu√©llar talk - Josef Cukierman talk - John Curdo talk - Ognjen Cvitan talk - Hieronim Czarnowski talk - Moshe Czerniak talk -	Bernard Cafferty talk - Michel Caillaud talk - Ignazio Calvi talk - Ricardo Calvo talk - Murray Campbell talk - Daniel C√°mpora talk - Florencio Campomanes talk - Esteban Canal talk - Arianne Caoili talk - Jos√© Ra√∫l Capablanca talk - Rodolfo Tan Cardoso talk - Ruth Volgl Cardoso talk - Carl Carls talk - Magnus Carlsen talk - Pontus Carlsson talk - Horatio Caro talk - Fabiano Caruana talk - Berna Carrasco talk - Pietro Carrera talk - Hartwig Cassel talk - Vincenzo Castaldi talk - Mariano Castillo talk - Mi≈°o Cebalo talk - Bet√ºl Cemre Yƒ±ldƒ±z talk - Giovanni Cenni talk - Luigi Centurini talk - Alfonso Ceron talk - Oscar Chajes talk - Ferenc Chalupetzky talk - Edward Chamier talk - Chan Peng Kong talk - Murray Chandler talk - Chang Tung Lo talk - Pascal Charbonneau talk - Henry Charlick talk - Rudolf Charousek talk - Chantal Chaud√© de Silans talk - Russ Chauvenet talk - Valery Chekhov talk - Vitaly Chekhover talk - Chen Zude talk - Chen De talk - Bobby Cheng talk - Ivan Cheparinov talk - Alexander Cherepkov talk - Irving Chernev talk - Alexander Chernin talk - Konstantin Chernyshov talk - Andr√© Ch√©ron talk - Maia Chiburdanidze talk - Mikhail Chigorin talk - Larry Christiansen talk - Martin Christoffel talk - Vladimir Chuchelov talk - Slavko Cicak talk - Roberto Cifuentes talk - Victor Cioc√¢ltea talk - Kenneth Clayton talk - Hermann Clemenz talk - Albert Clerc talk - Viktorija ƒåmilytƒó talk - John Cochrane (chess player) talk - Philip M. Cohen talk - Erich Cohn talk - Wilhelm Cohn talk - Edgard Colle talk - John W. Collins talk - Eugene Ernest Colman talk - Adri√°n Garc√≠a Conde talk - Stuart Conquest talk - Nathaniel Cook talk - Philip Corbin talk - Deysi Cori talk - Jorge Cori talk - Anya Corke talk - Nicolaas Cortlever talk - Juan Corzo talk - John Cox (chess player) talk - Carlo Cozio talk - Spencer Crakanthorp talk - Pia Cramling talk - Robert Cr√©peaux talk - Rupert Cross talk - Oswaldo Cruz Filho talk - Walter Cruz talk - Istv√°n Csom talk - Miguel Cu√©llar talk - Pablo Cu√©llar talk - Josef Cukierman talk - John Curdo talk - Ognjen Cvitan talk - Hieronim Czarnowski talk - Moshe Czerniak talk -	/m/02853tn	Murray_Campbell	89	104	/computer/computer_scientist,/computer/software_developer,/people/person
Deep Thought was a computer designed to play chess. Deep Thought was initially developed at Carnegie Mellon University and later at IBM. It was second in the line of chess computers developed by Feng-hsiung Hsu, starting with ChipTest and culminating in Deep Blue. In addition to Hsu, the Deep Thought team included Thomas Anantharaman, Mike Browne, Murray Campbell and Andreas Nowatzyk. Deep Thought was easily defeated in both games of a two-game match with Garry Kasparov in 1989 as well as in a correspondence match with Michael Valvo.	In addition to Hsu, the Deep Thought team included Thomas Anantharaman, Mike Browne, Murray Campbell and Andreas Nowatzyk.	/m/02853tn	Murray_Campbell	85	100	/computer/computer_scientist,/computer/software_developer,/people/person
In 1985, Carnegie Mellon University graduate students Feng-hsiung Hsu, Anantharaman, Murray Campbell and Andreas Nowatzyk used spare chips they'd found to put together a chess-playing machine that they called ChipTest. By 1987, the machine, integrating some innovative ideas about search strategies, had become the reigning computer chess champion. A successor, Deep Thought, using two special-purpose chips, plus about 200 off-the-shelf chips, working in parallel, achieved grandmaster-level play.	In 1985, Carnegie Mellon University graduate students Feng-hsiung Hsu, Anantharaman, Murray Campbell and Andreas Nowatzyk used spare chips they'd found to put together a chess-playing machine that they called ChipTest.	/m/02853tn	Murray_Campbell	85	100	/computer/computer_scientist,/computer/software_developer,/people/person
Boing Boing started as a zine in 1988 by Mark Frauenfelder and Carla Sinclair, his wife. Issues were subtitled "The World's Greatest Neurozine". Associate editors included Gareth Branwyn, Jon Lebkowsky, and Paco Nathan. Along with Mondo 2000, Boing Boing was an influence in the development of the cyberpunk subculture. It reached a maximum circulation of 17,500 copies. Common themes include technology, futurism, science fiction, gadgets, intellectual property, Disney and left-wing politics. The last issue of the zine was #15.	Associate editors included Gareth Branwyn, Jon Lebkowsky, and Paco Nathan.	/m/027b7w7	Paco_Nathan	62	73	/base/activism/activist,/computer/computer_scientist,/people/person
One of the first web chatterbots, named Max Headcold, was written by Garner in 1995. Max served two purposes, to collect data about web chat behavior and to entertain customers of the FringeWare online bookstore. This program was eventually implemented as a Java package called JFRED, written by Paco Nathan based on the C++ FRED CGI program, and his own influences from Stanford and various corporations. Garner and Nathan took part in the world's largest online Turing test in 1998. Their JFRED program was perceived as human by 17% of the participants.	This program was eventually implemented as a Java package called JFRED, written by Paco Nathan based on the C++ FRED CGI program, and his own influences from Stanford and various corporations.	/m/027b7w7	Paco_Nathan	83	94	/base/activism/activist,/computer/computer_scientist,/people/person
The publication was co-founded by Jon Lebkowsky and Paco Nathan, with art director Monte McCarter and assistant editor Tiffany Lee Brown. The magazine's parent company, FringeWare, Inc., was the first company built on Internet community (the FringeWare email list, later referred to as the FringeWare News Network, and probably the first to use web technology when it appeared. FringeWare also had presences on The WELL and on Illuminati Online's Metaverse, which was conceived as a commercial mulituser object-oriented environment (MOO). The company, which quickly built an international reputation through the Internet and the magazine, also owned an independent Austin bookstore that was an underground culture-hub for the city of Austin. FringeWare was one of many independent businesses to disappear from Austin during the late 1990s.	The publication was co-founded by Jon Lebkowsky and Paco Nathan, with art director Monte McCarter and assistant editor Tiffany Lee Brown.	/m/027b7w7	Paco_Nathan	52	63	/base/activism/activist,/computer/computer_scientist,/people/person
The concept has enjoyed renewed popularity among practitioners of chaos magic, following the Corporate Metabolism series of articles by Paco Xander Nathan, which were published in 2001.	The concept has enjoyed renewed popularity among practitioners of chaos magic, following the Corporate Metabolism series of articles by Paco Xander Nathan, which were published in 2001.	/m/027b7w7	Paco_Nathan	136	154	/base/activism/activist,/computer/computer_scientist,/people/person
Jon Lebkowsky (born April 20, 1949) is an web consultant/developer, author, and activist who was the co-founder of FringeWare, Inc. (along with Paco Nathan). FringeWare, an early attempt at ecommerce and online community, published a popular "magalog" called FringeWare Review, and a literary zine edited by Lebkowsky called Unshaved Truths. FringeWare's email list, called the FringeWare News Network, established an international following for the organization, which also opened a store in Austin, Texas.	Jon Lebkowsky (born April 20, 1949) is an web consultant/developer, author, and activist who was the co-founder of FringeWare, Inc. (along with Paco Nathan).	/m/027b7w7	Paco_Nathan	144	155	/base/activism/activist,/computer/computer_scientist,/people/person
In the early 1990s, Scarpa produced a New York City art exhibition entitled ‚ÄúBeyond 2000,‚Äù in conjunction with San Francisco based cyber-culture magazine Mondo 2000. The exhibition was held in the spirit of the 1967 human be-in at took place at The Limelight . The exhibition was designed to showcase participatory technologies of the 21st century and is believed to be the first public debut of virtual reality to the general public. Installations included works by IBVA, Synchro-Energizers, Aerotrims and wearable technology fashion designs. The exhibition also showcased a performance of Timothy Leary‚Äôs spoken/musical guided meditation How to Operate Your Brain, performances from Dj Keoki, Dj Dmitry from Dee-Lite, virtual reality performance artist Vincent John Vincent, and the first US show of popular techno-group The Prodigy. The event later spawned ‚ÄúOverstimulation,‚Äù a 2-day multimedia arts festival highlighting the latest in technology art of the time. Pseudo Programs Inc, founded by Josh Harris, hosted this showcase which featured many emerging silicon alley artists including Emergency Broadcast Network, Judson Rosebush, G.H. Hovagimyan, Dj Spooky and featured expanded virtual reality exhibits from Virtuality and VPL Research.	Installations included works by IBVA, Synchro-Energizers, Aerotrims and wearable technology fashion designs.	/m/027b7w7	Paco_Nathan	32	36	/base/activism/activist,/computer/computer_scientist,/people/person
The name Fred was initially suggested by Karen Lindsey, and then Robby jokingly came up with an acronym, "Functional Response Emulation Device." Fred has also been implemented as a Java application by Paco Nathan called JFRED.	" Fred has also been implemented as a Java application by Paco Nathan called JFRED.	/m/027b7w7	Paco_Nathan	58	69	/base/activism/activist,/computer/computer_scientist,/people/person
E-puck mobile robot - E. T. A. Hoffmann - Eager (novel) - Eando Binder - ED-209 - Edmund H. North - Edward S. Ellis - EKF SLAM - Electrical engineering - Electrical Engineering - Electroadhesion - Electronic engineering - Electronic Stability Control - Electronics - Elektro - Elephant's trunk - Ellen Tigh - Embodied agent - Embodied cognition - Embodied cognitive science - Emergent behavior - Emergent behaviour - EMIEW - EMIEW 2 - Encrypt (film) - Energetically Autonomous Tactical Robot - Energid Technologies - Engineering - Engineering cybernetics - Enon (robot) - Ensemble averaging - Ensemble axiom - Enthiran - Entomopter - Envelope (motion) - Environmental Robots Inc. - Epigenetic robotics - Epistemic modal logic - Epson Robots - Erek King - Eric Paulos - Ernest Lenard Hall - Ernesto Morgado - Ernst Dickmanns - ESTAR - Ethics - Ethics of artificial intelligence - European Robotic Arm - EusLisp Robot Programming Language - EveR-1 - Evolution Robotics - Evolutionary algorithms - Evolutionary computation - Evolutionary developmental robotics - Evolutionary robotics - Evolver (film) - Evolving classification function - Evolving intelligent system - Expert system - Exploration problem - Extended Kalman filter - Extremal optimization	E-puck mobile robot - E. T. A. Hoffmann - Eager (novel) - Eando Binder - ED-209 - Edmund H. North - Edward S. Ellis - EKF SLAM - Electrical engineering - Electrical Engineering - Electroadhesion - Electronic engineering - Electronic Stability Control - Electronics - Elektro - Elephant's trunk - Ellen Tigh - Embodied agent - Embodied cognition - Embodied cognitive science - Emergent behavior - Emergent behaviour - EMIEW - EMIEW 2 - Encrypt (film) - Energetically Autonomous Tactical Robot - Energid Technologies - Engineering - Engineering cybernetics - Enon (robot) - Ensemble averaging - Ensemble axiom - Enthiran - Entomopter - Envelope (motion) - Environmental Robots Inc. - Epigenetic robotics - Epistemic modal logic - Epson Robots - Erek King - Eric Paulos - Ernest Lenard Hall - Ernesto Morgado - Ernst Dickmanns - ESTAR - Ethics - Ethics of artificial intelligence - European Robotic Arm - EusLisp Robot Programming Language - EveR-1 - Evolution Robotics - Evolutionary algorithms - Evolutionary computation - Evolutionary developmental robotics - Evolutionary robotics - Evolver (film) - Evolving classification function - Evolving intelligent system - Expert system - Exploration problem - Extended Kalman filter - Extremal optimization	/m/026g8jl	Eric_Paulos	755	766	/computer/computer_scientist,/law/inventor,/people/person,/visual_art/visual_artist
Legal Tender, a 1996 telerobotic art installment by Ken Goldberg, Eric Paulos, Judith Donath, and Mark Pauline, was an experiment to see if the law could instill a sense of physical risk in online interactions. After participants were advised that 18 U.S.C. ¬ß 333 threatened them with up to six months in jail, they were given the option of remotely defacing small portions of a pair of "purportedly authentic" $100 bills over the web. A crime may be occurring ‚Äî but "only if the bills are real, the web site is authentic, and the experiment actually performed." In fact, one bill was real and the other counterfeit. Almost all of the participants reported that they believed the experiment and the bills to be faked.	Legal Tender, a 1996 telerobotic art installment by Ken Goldberg, Eric Paulos, Judith Donath, and Mark Pauline, was an experiment to see if the law could instill a sense of physical risk in online interactions.	/m/026g8jl	Eric_Paulos	66	77	/computer/computer_scientist,/law/inventor,/people/person,/visual_art/visual_artist
The term was coined and first used in 2003 by Eric Paulos and introduced in his paper on Familiar Strangers  and a related workshop he co-organized to introduced the concept titled "UbiComp in the Urban Frontier" at the 2004 UbiComp Conference.	The term was coined and first used in 2003 by Eric Paulos and introduced in his paper on Familiar Strangers  and a related workshop he co-organized to introduced the concept titled "UbiComp in the Urban Frontier" at the 2004 UbiComp Conference.	/m/026g8jl	Eric_Paulos	46	57	/computer/computer_scientist,/law/inventor,/people/person,/visual_art/visual_artist
Past speakers include Adam Greenfield, Adrian Woolard, Aleks Krotoski, Andi Studer, Barry Miles, Ben Cerveny, Chris Heathcote, Claudio Prado, Dame Wendy Hall, Darren Wershler, David Eaves, Ele Carpenter, Eric Paulos, Felipe Fonseca, Geoff Cox, Geraldine Juarez, Gerd Leonhard, Guilherme Wisnik, Jamais Cascio, James Marriott, James Wallbank, Jonas Woost, Katie Lips & Patrick Fox, Keri Facer, Lee Bryant, Mark Shepard, Matt Jones, Matt Locke, Mike Ryan, Monika Buscher, Nigel Shadbolt, Paul Coulton, Paul Domenet, Rachel O'Connell, Ravikant Shama, Scott Cohen, Stefan Agamanolis, Stowe Boyd, Tom Ilube.	Past speakers include Adam Greenfield, Adrian Woolard, Aleks Krotoski, Andi Studer, Barry Miles, Ben Cerveny, Chris Heathcote, Claudio Prado, Dame Wendy Hall, Darren Wershler, David Eaves, Ele Carpenter, Eric Paulos, Felipe Fonseca, Geoff Cox, Geraldine Juarez, Gerd Leonhard, Guilherme Wisnik, Jamais Cascio, James Marriott, James Wallbank, Jonas Woost, Katie Lips & Patrick Fox, Keri Facer, Lee Bryant, Mark Shepard, Matt Jones, Matt Locke, Mike Ryan, Monika Buscher, Nigel Shadbolt, Paul Coulton, Paul Domenet, Rachel O'Connell, Ravikant Shama, Scott Cohen, Stefan Agamanolis, Stowe Boyd, Tom Ilube.	/m/026g8jl	Eric_Paulos	204	215	/computer/computer_scientist,/law/inventor,/people/person,/visual_art/visual_artist
Well-known researchers in empirical algorithmics include Marco Chiarandini, Catherine McGeoch, Carla Gomes, Holger H. Hoos, David S. Johnson, Kevin Leyton-Brown, Ruben Ruiz, Bart Selman, Thomas St√ºtzle and Roberto Battiti.	Well-known researchers in empirical algorithmics include Marco Chiarandini, Catherine McGeoch, Carla Gomes, Holger H. Hoos, David S. Johnson, Kevin Leyton-Brown, Ruben Ruiz, Bart Selman, Thomas St√ºtzle and Roberto Battiti.	/m/05zp7nh	Holger_H._Hoos	108	122	/education/academic,/influence/influence_node,/people/person
First designed by Holger H. Hoos (then at Technische Universit√§t Darmstadt, Germany, now at University of British Columbia, Canada) and Keith Hamel (University of British Columbia, Canada). Later developments have been done by the SALIERI Project by Holger H. Hoos, Kai Renz and J√ºrgen F. Kilian. GUIDO Music Notation has been designed to represent music in a logical format (with the ability to render to sheet music), whereas LilyPond is more narrowly focused on typesetting sheet music.	First designed by Holger H. Hoos (then at Technische Universit√§t Darmstadt, Germany, now at University of British Columbia, Canada) and Keith Hamel (University of British Columbia, Canada).	/m/05zp7nh	Holger_H._Hoos	18	32	/education/academic,/influence/influence_node,/people/person
First designed by Holger H. Hoos (then at Technische Universit√§t Darmstadt, Germany, now at University of British Columbia, Canada) and Keith Hamel (University of British Columbia, Canada). Later developments have been done by the SALIERI Project by Holger H. Hoos, Kai Renz and J√ºrgen F. Kilian. GUIDO Music Notation has been designed to represent music in a logical format (with the ability to render to sheet music), whereas LilyPond is more narrowly focused on typesetting sheet music.	Later developments have been done by the SALIERI Project by Holger H. Hoos, Kai Renz and J√ºrgen F. Kilian.	/m/05zp7nh	Holger_H._Hoos	60	74	/education/academic,/influence/influence_node,/people/person
There are several other variants of Kolmogorov complexity or algorithmic information. The most widely used one is based on self-delimiting programs, and is mainly due to Leonid Levin (1974).	The most widely used one is based on self-delimiting programs, and is mainly due to Leonid Levin (1974).	/m/024169	Leonid_Levin	84	96	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
SAT was the first known NP-complete problem, as proved by Stephen Cook in 1971 and independently by Leonid Levin in 1973. Until that time, the concept of an NP-complete problem did not even exist. The problem remains NP-complete even if all expressions are written in conjunctive normal form with 3 variables per clause (3-CNF), yielding the 3SAT problem. This means the expression has the form:	SAT was the first known NP-complete problem, as proved by Stephen Cook in 1971 and independently by Leonid Levin in 1973.	/m/024169	Leonid_Levin	100	112	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
No algorithm for any NP-complete problem is known to run in polynomial time. However, there are algorithms for NP-complete problems with the property that if P = NP, then the algorithm runs in polynomial time (although with enormous constants, making the algorithm impractical). The following algorithm, due to Levin (without any citation), is such an example below. It correctly accepts the NP-complete language SUBSET-SUM. It runs polynomial time if and only if P = NP:	The following algorithm, due to Levin (without any citation), is such an example below.	/m/024169	Leonid_Levin	32	37	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem. The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete. In 1972, Richard Karp took this idea a leap forward with his landmark paper, "Reducibility Among Combinatorial Problems", in which he showed that 21 diverse combinatorial and graph theoretical problems, each infamous for its computational intractability, are NP-complete.	The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete.	/m/024169	Leonid_Levin	107	119	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
During his PhD, Cook worked on complexity of functions, mainly on multiplication. He received his PhD in 1966. A few years later, in his seminal 1971 paper "The Complexity of Theorem Proving Procedures", Cook formalized the notions of polynomial-time reduction (a.k.a. Cook reduction) and NP-completeness, and proved the existence of an NP-complete problem by showing that the Boolean satisfiability problem (usually known as SAT) is NP-complete. This theorem was proven independently by Leonid Levin in the Soviet Union, and has thus been given the name the Cook-Levin theorem. The paper also formulated the most famous problem in computer science, the P vs. NP problem. Informally, the "P vs. NP" question asks whether every optimization problem whose answers can be efficiently verified for correctness/optimality can be solved optimally with an efficient algorithm. Given the abundance of such optimization problems in everyday life, a positive answer to the "P vs. NP" question would likely have profound practical and philosophical consequences.	This theorem was proven independently by Leonid Levin in the Soviet Union, and has thus been given the name the Cook-Levin theorem.	/m/024169	Leonid_Levin	41	53	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
These developments have led to the modern study of logic and computability, and indeed the field of theoretical computer science as a whole. Information theory was added to the field with a 1948 mathematical theory of communication by Claude Shannon. In the same decade, Donald Hebb introduced a mathematical model of learning in the brain. With mounting biological data supporting this hypothesis with some modification, the fields of neural networks and parallel distributed processing were established. In 1971, Stephen Cook and, working independently, Leonid Levin, proved that there exist practically relevant problems that are NP-complete ‚Äì a landmark result in computational complexity theory.	In 1971, Stephen Cook and, working independently, Leonid Levin, proved that there exist practically relevant problems that are NP-complete ‚Äì a landmark result in computational complexity theory.	/m/024169	Leonid_Levin	50	62	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A computational universe is proposed by J√ºrgen Schmidhuber in a paper based on Konrad Zuse's assumption (1967) that the history of the universe is computable. He pointed out that the simplest explanation of the universe would be a very simple Turing machine programmed to systematically execute all possible programs computing all possible histories for all types of computable physical laws. He also pointed out that there is an optimally efficient way of computing all computable universes based on Leonid Levin's universal search algorithm (1973). In 2000 he expanded this work by combining Ray Solomonoff's theory of inductive inference with the assumption that quickly computable universes are more likely than others. This work on digital physics also led to limit-computable generalizations of algorithmic information or Kolmogorov complexity and the concept of Super Omegas, which are limit-computable numbers that are even more random (in a certain sense) than Gregory Chaitin's number of wisdom Omega.	He also pointed out that there is an optimally efficient way of computing all computable universes based on Leonid Levin's universal search algorithm (1973).	/m/024169	Leonid_Levin	108	120	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The question of whether such an algorithm exists is called the P versus NP problem and it is widely considered the most important unsolved problem in theoretical computer science. The theorem is named after Stephen Cook and Leonid Levin.	The theorem is named after Stephen Cook and Leonid Levin.	/m/024169	Leonid_Levin	44	56	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the USSR, a result equivalent to Baker, Gill, and Solovay's was published in 1969 by M. Dekhtiar. Later Levin's paper, "Universal search problems", was published in 1973, although it was mentioned in talks and submitted for publication a few years earlier.	Later Levin's paper, "Universal search problems", was published in 1973, although it was mentioned in talks and submitted for publication a few years earlier.	/m/024169	Leonid_Levin	6	11	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
It is clear that if a one-to-one function has a hard-core predicate, then it must be one way. Oded Goldreich and Leonid Levin (1989) showed how every one-way function can be trivially modified to obtain a one-way function that has a specific hard-core predicate. Let f be a one-way function. Define	Oded Goldreich and Leonid Levin (1989) showed how every one-way function can be trivially modified to obtain a one-way function that has a specific hard-core predicate.	/m/024169	Leonid_Levin	19	31	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
There are several variants of Kolmogorov complexity or algorithmic information; the most widely used one is based on self-delimiting programs and is mainly due to Leonid Levin (1974). Per Martin-L√∂f also contributed significantly to the information theory of infinite sequences. An axiomatic approach to algorithmic information theory based on Blum axioms (Blum 1967) was introduced by Mark Burgin in a paper presented for publication by Andrey Kolmogorov (Burgin 1982). The axiomatic approach encompasses other approaches in the algorithmic information theory. It is possible to treat different measures of algorithmic information as particular cases of axiomatically defined measures of algorithmic information. Instead of proving similar theorems, such as the basic invariance theorem, for each particular measure, it is possible to easily deduce all such results from one corresponding theorem proved in the axiomatic setting. This is a general advantage of the axiomatic approach in mathematics. The axiomatic approach to algorithmic information theory was further developed in the book (Burgin 2005) and applied to software metrics (Burgin and Debnath, 2003; Debnath and Burgin, 2003).	There are several variants of Kolmogorov complexity or algorithmic information; the most widely used one is based on self-delimiting programs and is mainly due to Leonid Levin (1974).	/m/024169	Leonid_Levin	163	175	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Martin-L√∂f's original definition of a random sequence was in terms of constructive null covers; he defined a sequence to be random if it is not contained in any such cover. Leonid Levin and Claus-Peter Schnorr proved a characterization in terms of Kolmogorov complexity: a sequence is random if there is a uniform bound on the compressibility of its initial segments. Schnorr gave a third equivalent definition in terms of martingales (a type of betting strategy). Li and Vitanyi's book An Introduction to Kolmogorov Complexity and Its Applications is the standard introduction to these ideas.	Leonid Levin and Claus-Peter Schnorr proved a characterization in terms of Kolmogorov complexity: a sequence is random if there is a uniform bound on the compressibility of its initial segments.	/m/024169	Leonid_Levin	0	12	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The leftover hash lemma is a lemma in cryptography first stated by Russell Impagliazzo, Leonid Levin, and Michael Luby.	The leftover hash lemma is a lemma in cryptography first stated by Russell Impagliazzo, Leonid Levin, and Michael Luby.	/m/024169	Leonid_Levin	88	100	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
G√°cs, Kurdyumov, and Levin found an automaton that, although it does not always solve the majority problem correctly, does so in many cases. In their approach to the problem, the quality of a cellular automaton rule is measured by the fraction of the  possible starting configurations that it correctly classifies.	G√°cs, Kurdyumov, and Levin found an automaton that, although it does not always solve the majority problem correctly, does so in many cases.	/m/024169	Leonid_Levin	21	26	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Leonid Levin presented the motivation for studying average-case complexity as follows:	Leonid Levin presented the motivation for studying average-case complexity as follows:	/m/024169	Leonid_Levin	0	12	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Meyer's seminal works include Meyer & Stockmeyer (1972) which introduced the polynomial hierarchy. He has supervised numerous PhD students who are now famous computer scientists; these include Nancy Lynch, Leonid Levin, Jeanne Ferrante, Charles Rackoff, Larry Stockmeyer, David Harel, Joseph Halpern, and John C. Mitchell.	He has supervised numerous PhD students who are now famous computer scientists; these include Nancy Lynch, Leonid Levin, Jeanne Ferrante, Charles Rackoff, Larry Stockmeyer, David Harel, Joseph Halpern, and John C. Mitchell.	/m/024169	Leonid_Levin	107	119	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the celebrated Cook-Levin theorem (independently proved by Leonid Levin), Cook proved that the Boolean satisfiability problem is NP-complete (a simpler, but still highly technical proof of this is available). In 1972, Richard Karp proved that several other problems were also NP-complete (see Karp's 21 NP-complete problems); thus there is a class of NP-complete problems (besides the Boolean satisfiability problem). Since Cook's original results, thousands of other problems have been shown to be NP-complete by reductions from other problems previously shown to be NP-complete; many of these problems are collected in Garey and Johnson's 1979 book Computers and Intractability: A Guide to the Theory of NP-Completeness. For more details refer to Introduction to the Design and Analysis of Algorithms by Anany Levintin.	In the celebrated Cook-Levin theorem (independently proved by Leonid Levin), Cook proved that the Boolean satisfiability problem is NP-complete (a simpler, but still highly technical proof of this is available).	/m/024169	Leonid_Levin	62	74	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Description: This paper introduced the concept of NP-Completeness and proved that Boolean satisfiability problem (SAT) is NP-Complete. Note that similar ideas were developed independently slightly later by Leonid Levin at "Levin, Universal Search Problems. Problemy Peredachi Informatsii 9(3):265-266, 1973".	Note that similar ideas were developed independently slightly later by Leonid Levin at "Levin, Universal Search Problems.	/m/024169	Leonid_Levin	71	83	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In November 1989, Fortnow received an email from Noam Nisan showing that co-NP had multiple prover interactive proofs (MIP). With Carsten Lund and Howard Karloff, he used this result to develop an algebraic technique for the construction of interactive proof systems and prove that every language in the polynomial-time hierarchy has an interactive proof system. Their work was hardly two weeks old when Adi Shamir employed it to prove that IP=PSPACE. Quickly following up on this (January 17, 1990 less than two months after receiving Nisan's email) Fortnow, along with L√°szl√≥ Babai and Carsten Lund, proved that MIP=NEXP. These algebraic techniques were expanded further by Fortnow, Babai, Leonid Levin, and Mario Szegedy when they presented a new generic mechanism for checking computations.	These algebraic techniques were expanded further by Fortnow, Babai, Leonid Levin, and Mario Szegedy when they presented a new generic mechanism for checking computations.	/m/024169	Leonid_Levin	68	80	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The obelisk was created in 1947 and in 2000 a bronze sculpture entitled "The Last Way" was added. It represents a group of doomed martyrs, walking down the steps of the pit. The sculpture was created by Belarusian artist, Chairman of the Jewish communities of Belarus, Leonid Levin and sculptor from Israel Elsa Pollack. On the obelisk is written in Russian and Yiddish "The bright memory of five times the light of thousands of Jews who perished at the hands of sworn enemies of humanity - German-fascist monsters"	The sculpture was created by Belarusian artist, Chairman of the Jewish communities of Belarus, Leonid Levin and sculptor from Israel Elsa Pollack.	/m/024169	Leonid_Levin	95	107	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Innovations in Systems and Software Engineering: A NASA Journal is a peer-reviewed scientific journal of computer science covering systems and software engineering, including formal methods. It is published by Springer Science+Business Media in association with NASA. The editors-in-chief are Michael Hinchey (University of Limerick) and Shawn Bohner (Rose-Hulman Institute of Technology).	The editors-in-chief are Michael Hinchey (University of Limerick) and Shawn Bohner (Rose-Hulman Institute of Technology).	/m/03d4g97	Michael_Hinchey	25	40	/computer/computer_scientist,/people/person
His son, Michael Guy, is also a computer scientist and mathematician.	His son, Michael Guy, is also a computer scientist and mathematician.	/m/03y892_	Michael_Guy	9	20	/people/person
The initial Board of Trustees consisted of Scott Bradner, John Curran, Kim Hubbard, Don Telage, Randy Bush, Raymundo Vega Aguilar, and Jon Postel (IANA) as an ex-officio member.	The initial Board of Trustees consisted of Scott Bradner, John Curran, Kim Hubbard, Don Telage, Randy Bush, Raymundo Vega Aguilar, and Jon Postel (IANA) as an ex-officio member.	/m/0407y	Jon_Postel	135	145	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
At the request of Jon Postel, Paul Mockapetris invented the Domain Name System in 1983 and wrote the first implementation. The original specifications were published by the Internet Engineering Task Force in RFC 882 and RFC 883, which were superseded in November 1987 by RFC 1034 and RFC 1035. Several additional Request for Comments have proposed various extensions to the core DNS protocols.	At the request of Jon Postel, Paul Mockapetris invented the Domain Name System in 1983 and wrote the first implementation.	/m/0407y	Jon_Postel	18	28	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The early ARPANET dealt with multiple email clients that had various, and at times incompatible, formats. For example, in the Multics, the "@" sign meant "kill line" and anything before the "@" sign was ignored, so Multics users had to use a command-line option to specify the destination system. The Department of Defense DARPA desired to have uniformity and interoperability for email and therefore funded efforts to drive towards unified inter-operable standards. This led to David Crocker, John Vittal, Kenneth Pogran, and Austin Henderson publishing RFC 733, "Standard for the Format of ARPA Network Text Message" (November 21, 1977), which was apparently not effective. In 1979, a meeting was held at BBN to resolve incompatibility issues. Jon Postel recounted the meeting in RFC 808, "Summary of Computer Mail Services Meeting Held at BBN on 10 January 1979" (March 1, 1982), which includes an appendix listing the varying email systems at the time. This, in turn, lead to the release of David Crocker's RFC 822, "Standard for the Format of ARPA Internet Text Messages" (August 13, 1982).	Jon Postel recounted the meeting in RFC 808, "Summary of Computer Mail Services Meeting Held at BBN on 10 January 1979" (March 1, 1982), which includes an appendix listing the varying email systems at the time.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The IANA function was originally performed by USC Information Sciences Institute, and it delegated portions of this responsibility with respect to numeric network and autonomous system identifiers to the Network Information Center (NIC) at Stanford Research Institute (SRI International) in Menlo Park, California. In addition to his role as the RFC Editor, Jon Postel worked as the manager of IANA until his death in 1998.	In addition to his role as the RFC Editor, Jon Postel worked as the manager of IANA until his death in 1998.	/m/0407y	Jon_Postel	43	53	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Request for Comments (RFCs) are the main documentation for the work of the IAB, IESG, IETF, and IRTF. RFC 1, "Host Software", was written by Steve Crocker at UCLA in April 1969, well before the IETF was created. Originally they were technical memos documenting aspects of ARPANET development and were edited by the late Jon Postel, the first RFC Editor.	Originally they were technical memos documenting aspects of ARPANET development and were edited by the late Jon Postel, the first RFC Editor.	/m/0407y	Jon_Postel	108	118	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
In addition to helping develop TCP/IP and the Domain Name System (DNS), ISI contributed to the Net by editing the "Request for Comments" (RFC) series, the written record of the emerging network's technical structure and operation, from 1977 through 2009. RFC editor and Internet pioneer Jon Postel was based at ISI until his death in 1998.	RFC editor and Internet pioneer Jon Postel was based at ISI until his death in 1998.	/m/0407y	Jon_Postel	32	42	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
ICANN was incorporated in California on September 30, 1998, with leading entrepreneurs and philanthropist Esther Dyson as founding chairwoman. It is qualified to do business in the District of Columbia. ICANN was established in California due to the presence of Jon Postel, who was a founder of ICANN and was set to be its first CTO prior to his unexpected death. ICANN formerly operated from the same Marina del Rey building where Mr. Postel formerly worked, which is home to an office of the Information Sciences Institute at the University of Southern California. However, ICANN's headquarters is now located in the nearby Playa Vista section of Los Angeles.	ICANN was established in California due to the presence of Jon Postel, who was a founder of ICANN and was set to be its first CTO prior to his unexpected death.	/m/0407y	Jon_Postel	59	69	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Joyce Reynolds served as part of the editorial team of the Request For Comments series from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001, while remaining an employee of ISI.	Joyce Reynolds served as part of the editorial team of the Request For Comments series from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001, while remaining an employee of ISI.	/m/0407y	Jon_Postel	148	158	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Many of the subsequent RFCs of the 1970s also came from UCLA, because UCLA was one of the first Interface Message Processors (IMPs) on ARPANET. The Augmentation Research Center (ARC) at Stanford Research Institute, directed by Douglas Engelbart, was another of the four first ARPANET nodes and the source of early RFCs. The ARC became the first network information center (InterNIC), which was managed by Elizabeth J. Feinler to distribute the RFCs along with other network information. From 1969 until 1998, Jon Postel served as the RFC editor. On his death in 1998, his obituary was published as RFC 2468.	From 1969 until 1998, Jon Postel served as the RFC editor.	/m/0407y	Jon_Postel	22	32	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Further implementations include FTP Mail  and Mail Protocol, both from 1973. Development work continued throughout the 1970s, until the ARPANET converted into the modern Internet around 1980. Jon Postel then proposed a Mail Transfer Protocol in 1980 that began to remove the mail's reliance on FTP. SMTP was published as RFC 788 in November 1981, also by Postel.	Jon Postel then proposed a Mail Transfer Protocol in 1980 that began to remove the mail's reliance on FTP.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Many people contributed to the core SMTP specifications, among them Jon Postel, Eric Allman, Dave Crocker, Ned Freed, Randall Gellens, John Klensin, and Keith Moore.	Many people contributed to the core SMTP specifications, among them Jon Postel, Eric Allman, Dave Crocker, Ned Freed, Randall Gellens, John Klensin, and Keith Moore.	/m/0407y	Jon_Postel	68	78	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Cerf went to Van Nuys High School along with Jon Postel and Steve Crocker; he wrote the former's obituary. Both were also instrumental in the creation of the Internet.	Cerf went to Van Nuys High School along with Jon Postel and Steve Crocker; he wrote the former's obituary.	/m/0407y	Jon_Postel	45	55	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Prior to the establishment of ICANN for this purpose, IANA was administered primarily by Jon Postel at the Information Sciences Institute (ISI) of the University of Southern California (USC), under a contract USC/ISI had with the United States Department of Defense, until ICANN was created to assume the responsibility under a United States Department of Commerce contract.	Prior to the establishment of ICANN for this purpose, IANA was administered primarily by Jon Postel at the Information Sciences Institute (ISI) of the University of Southern California (USC), under a contract USC/ISI had with the United States Department of Defense, until ICANN was created to assume the responsibility under a United States Department of Commerce contract.	/m/0407y	Jon_Postel	89	99	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
IANA was established informally as a reference to various technical functions for the ARPANET, that Jon Postel and Joyce K. Reynolds performed at UCLA and at the University of Southern California's Information Sciences Institute.	IANA was established informally as a reference to various technical functions for the ARPANET, that Jon Postel and Joyce K. Reynolds performed at UCLA and at the University of Southern California's Information Sciences Institute.	/m/0407y	Jon_Postel	100	110	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
On March 26, 1972, Vint Cerf and Jon Postel at UCLA called for establishing a socket number catalog in RFC 322. Network administrators were asked to submit a note or place a phone call, "describing the function and socket numbers of network service programs at each HOST". This catalog was subsequently published as RFC 433 in December 1972. In it Postel first proposed a registry of assignments of port numbers to network services, calling himself the czar of socket numbers.	On March 26, 1972, Vint Cerf and Jon Postel at UCLA called for establishing a socket number catalog in RFC 322.	/m/0407y	Jon_Postel	33	43	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Jon Postel managed the IANA function from its inception on the ARPANET until his death in October 1998. By his almost 30 years of "selfless service", Postel created his de facto authority to manage key parts of the Internet infrastructure. After his death, Joyce K. Reynolds, who had worked with him for many years, managed the transition of the IANA function to ICANN.	Jon Postel managed the IANA function from its inception on the ARPANET until his death in October 1998.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The Internet Assigned Numbers Authority (IANA) assigned the numbers, while the NIC published them to the rest of the network. Jon Postel fulfilled the role of manager of IANA, in addition to his role as the RFC Editor, until his death in 1998.	Jon Postel fulfilled the role of manager of IANA, in addition to his role as the RFC Editor, until his death in 1998.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The NIC provided reference service to users (initially over the phone and by physical mail), maintained and published a directory of people (the "white pages"), a resource handbook (the "yellow pages", a list of services) and the protocol handbook. After the Network Operations Center at Bolt, Bernek and Newman brought new hosts onto the network, the NIC registered names, provided access control for terminals, audit trail and billing information, and distributed Request for Comments (RFCs). Feinler, working with Steve Crocker, Jon Postel, Joyce Reynolds and other members of the Network Working Group (NWG), developed RFCs into the official set of technical notes for the ARPANET and later the Internet. The NIC provided the first links to online documents using the NLS Journal system developed at SRI's Augmentation Research Center.	Feinler, working with Steve Crocker, Jon Postel, Joyce Reynolds and other members of the Network Working Group (NWG), developed RFCs into the official set of technical notes for the ARPANET and later the Internet.	/m/0407y	Jon_Postel	37	47	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
JAIN - James H. Clark - Java applet - Java platform - JavaScript - Jon Postel - JPEG - JSTOR	JAIN - James H. Clark - Java applet - Java platform - JavaScript - Jon Postel - JPEG - JSTOR	/m/0407y	Jon_Postel	67	77	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Paul V. Mockapetris (born 1948 in Boston Massachusetts, USA) is an American computer scientist and Internet pioneer, who, together with Jon Postel, is the inventor of the Internet Domain Name System (DNS).	Paul V. Mockapetris (born 1948 in Boston Massachusetts, USA) is an American computer scientist and Internet pioneer, who, together with Jon Postel, is the inventor of the Internet Domain Name System (DNS).	/m/0407y	Jon_Postel	136	146	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The .edu domain was originally intended for educational institutions anywhere in the world. However, most of the institutions that obtained .edu registrations were in the United States, while non-U.S. educational institutions typically used country-level domains. In 1993, a decision attributed to Jon Postel limited new registrations in the .edu domain to four-year postsecondary educational institutions. This prevented new .edu registrations by community colleges and other institutions offering less than four years of postsecondary schooling.	In 1993, a decision attributed to Jon Postel limited new registrations in the .edu domain to four-year postsecondary educational institutions.	/m/0407y	Jon_Postel	34	44	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The original administrator of .us was Jon Postel of the Information Sciences Institute (ISI) at the University of Southern California (USC). He administered .us under a subcontract that the ISI and USC had from SRI International (which held the .us and the gTLD contract with the United States Department of Defense) and later Network Solutions (which held the .us and the gTLD contract with the National Science Foundation). Registrants could only register third-level domains or higher in a geographic and organizational hierarchy. The vast majority of the geographic subdomains in .us were delegated to various private entities and .us registrants could register with the delegated administrator for the level they wished to register in, but not directly with the .us administrator.	The original administrator of .us was Jon Postel of the Information Sciences Institute (ISI) at the University of Southern California (USC).	/m/0407y	Jon_Postel	38	48	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The domain name was originally allocated by Jon Postel, operator of Internet Assigned Numbers Authority (IANA), to John Demco of the University of British Columbia (UBC) in 1988. The first .ca domain was registered by the University of Prince Edward Island in January 1988.	The domain name was originally allocated by Jon Postel, operator of Internet Assigned Numbers Authority (IANA), to John Demco of the University of British Columbia (UBC) in 1988.	/m/0407y	Jon_Postel	44	54	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
As with other ccTLDs in the early days it was originally delegated to an individual by Jon Postel. In time, it passed to Dr Willie Black at the UK Education and Research Networking Association. Originally, domain requests were emailed, manually screened by and then forwarded to the UK Naming Committee before being processed by UKERNA. Membership of this committee was restricted to a group of high-end ISPs who were part of a formal peering arrangement.	As with other ccTLDs in the early days it was originally delegated to an individual by Jon Postel.	/m/0407y	Jon_Postel	87	97	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The domain name was originally allocated by Jon Postel, operator of IANA to Kevin Robert Elz of Melbourne University in 1986. After an approximately five year process in the 1990s, the Internet industry created a self-regulatory body called .au Domain Administration to operate the domain. It obtained assent from ICANN in 2001, and commenced operating a new competitive regime for domain registration on 1 July 2002. Since this new regime, any registration has to be ordered via a registrar.	The domain name was originally allocated by Jon Postel, operator of IANA to Kevin Robert Elz of Melbourne University in 1986.	/m/0407y	Jon_Postel	44	54	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
A part of the Internet community has praised the initiative, with some recent scholarship proposing that alternative DNS roots may allow for a more democratic network control structure. Yet many others considered it harmful to the Internet. Using an alternative DNS root breaks the principle of universal resolvability, unless it is for a strictly private purpose. From a DNS perspective, it prevents some parts of the Internet to reach other parts. Jon Postel, a significant contributor to Internet standards, asserted that it would lead to chaos. In May 2000, the Internet Architecture Board spoke out strongly against alternative roots in RFC 2826.	Jon Postel, a significant contributor to Internet standards, asserted that it would lead to chaos.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Before MIME existed, PDN Mail was able to perform the same functions and was used to send software updates as well as all sorts of attachments between systems. In August 1993, Robert Ullmann, David Robinson and Al Costanzo wrote RFC 1505. This RFC, documented the Encoding Header Field for Internet Messages that PDN mail used and was published by the RFC editor, Jon Postel that same year.	This RFC, documented the Encoding Header Field for Internet Messages that PDN mail used and was published by the RFC editor, Jon Postel that same year.	/m/0407y	Jon_Postel	125	135	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
.ie was registered on 27 January 1988 and a year later the registration of .ie domain names was delegated by Jon Postel to the Computing Services Computer Centre of University College Dublin then headed by Dennis Jennings. In 2000 the administration of the .ie domain was sub-delegated by UCD to IE Domain Registry Limited.	.ie was registered on 27 January 1988 and a year later the registration of .ie domain names was delegated by Jon Postel to the Computing Services Computer Centre of University College Dublin then headed by Dennis Jennings.	/m/0407y	Jon_Postel	109	119	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Alderney hosts the domain name registry for both balliwicks of the Channel Islands. The country-code top-level domains (ccTLDs) of .je and .gg first appeared on the Internet in 1996 after Jon Postel agreed with Nigel Roberts of Island Networks to add four codes (GG and JE, and IM and AC) to the IANA list of TLDs. The codes for the Channel Islands and for the Isle of Man were entered on to the official United Nations ISO-3166 list in 2006.	The country-code top-level domains (ccTLDs) of .je and .gg first appeared on the Internet in 1996 after Jon Postel agreed with Nigel Roberts of Island Networks to add four codes (GG and JE, and IM and AC) to the IANA list of TLDs.	/m/0407y	Jon_Postel	104	114	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
By the mid-1990s there was discussion of introduction of more TLDs. Jon Postel, as head of IANA, invited applications from interested parties. In early 1995, Postel created "Draft Postel", an Internet draft containing the procedures to create new domain name registries and new TLDs. Draft Postel created a number of small committees to approve the new TLDs. Because of the increasing interest, a number of large organizations took over the process under the Internet Society's umbrella. This second attempt involved setting up a temporary organization called the International Ad Hoc Committee (IAHC). On February 4, 1997, the IAHC issued a report ignoring the Draft Postel recommendations and instead recommended the introduction of seven new TLDs (arts, firm, info, nom, rec, store, and web). However, these proposals were abandoned after the U.S. government intervened.	Jon Postel, as head of IANA, invited applications from interested parties.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The technology was sold to Tymshare in 1977, with 20 members of the former SRI group becoming Tymshare employees. Only about three or four people were left to continue the NIC, although this group grew quickly along with the Internet. Jon Postel left in 1977 to join the Information Sciences Institute. A number of early participants moved on to careers at Xerox, Hewlett-Packard, Apple Computer, Sun Microsystems, and other leading computer companies.	Jon Postel left in 1977 to join the Information Sciences Institute.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The PH domain is currently administered by Jose Emmanuel "Joel" Disini, who is also dotPH's current CEO. Disini has been the domain administrator since Jon Postel assigned him the domain in 1990. The domain is sponsored by the PH Domain Foundation, a social outreach arm of dotPH which was also founded by Disini together with a group of IT professionals in August 1999.	Disini has been the domain administrator since Jon Postel assigned him the domain in 1990.	/m/0407y	Jon_Postel	47	57	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
ISC was originally founded in 1994 as Internet Software Consortium, Inc., to continue the work of maintaining and enhancing BIND following the footsteps of CSRG at U.C.Berkeley, Digital Equipment Corp., and Vixie Enterprises. Due to the importance of BIND as an essential component of the Internet's infrastructure, founders of ISC felt very strongly that BIND's continued support and enhancement should be managed and funded by an independent entity. IANA (Jon Postel) designated ISC as a root name server operator - initially as NS.ISC.ORG, later changed to F.ROOT-SERVERS.NET - to enable ISC to support the use of BIND by root name servers.	IANA (Jon Postel) designated ISC as a root name server operator - initially as NS.ISC.ORG, later changed to F.ROOT-SERVERS.NET - to enable ISC to support the use of BIND by root name servers.	/m/0407y	Jon_Postel	6	16	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Only three of the 26 possible single-letter domains have ever been registered, all before 1992. The other 23 single-letter .com domains were registered January 1, 1992 by Jon Postel, with the intention to avoid a single company commercially controlling a letter of the Alphabet.	The other 23 single-letter .com domains were registered January 1, 1992 by Jon Postel, with the intention to avoid a single company commercially controlling a letter of the Alphabet.	/m/0407y	Jon_Postel	75	85	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Robert Elz had been assigned the role of administrator of the .au top-level domain by Jon Postel since 1989, an arrangement that worked quite satisfactorily through the early 1990s when the Internet was largely of interest only to tertiary educational and research institutions. The AFR article caused Melbourne University to be aware of the possible commercial value of the rights to assign domain names, but also of the damage to the University‚Äôs reputation if the registration of com.au domain names was not transferred to a competent commercial organization. The Head of the Computer Science Department persuaded Mr Elz to transfer the administration of com.au names to the University‚Äôs subsidiary Melbourne IT, which he did by way of a non-exclusive licence, to be reviewed after five years. Melbourne IT was awarded a grant of $100,000 by the Government of Victoria in 1996 in return for registering the backlog of over 2,000 com.au applications free to the applicants, and used this money to build its first domain name registration software platform.	Robert Elz had been assigned the role of administrator of the .au top-level domain by Jon Postel since 1989, an arrangement that worked quite satisfactorily through the early 1990s when the Internet was largely of interest only to tertiary educational and research institutions.	/m/0407y	Jon_Postel	86	96	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The principle is also known as Postel's law, after Internet pioneer Jon Postel, who wrote in an early specification of the Transmission Control Protocol that:	The principle is also known as Postel's law, after Internet pioneer Jon Postel, who wrote in an early specification of the Transmission Control Protocol that:	/m/0407y	Jon_Postel	68	78	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The Character Generator Protocol (CHARGEN) is a service of the Internet Protocol Suite defined in RFC 864 in 1983 by Jon Postel. It is intended for testing, debugging, and measurement purposes.	The Character Generator Protocol (CHARGEN) is a service of the Internet Protocol Suite defined in RFC 864 in 1983 by Jon Postel.	/m/0407y	Jon_Postel	117	127	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The Jonathan B. Postel Service Award is an award named after Jon Postel. The award has been presented every year since 1999 by the Internet Society to "honor a person who has made outstanding contributions in service to the data communications community."	The Jonathan B. Postel Service Award is an award named after Jon Postel.	/m/0407y	Jon_Postel	61	71	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Jon Postel became the editor of the new series, in addition to his existing role of administering the long-standing RFC series. Between March, 1977, and September, 1982, 206 IENs were published. After that, with the plan to terminate support of the Network Control Program (NCP) on the ARPANET and switch to TCP/IP, the production of IENs was discontinued, and all further publication was conducted within the existing RFC system.	Jon Postel became the editor of the new series, in addition to his existing role of administering the long-standing RFC series.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
.web is a generic top-level domain operated as a prospective registry, not in the official root, by Image Online Design since 1995. It originated when Jon Postel, then running the top level of the Domain Name System basically single-handedly, proposed the addition of new top-level domains to be run by different registries. Since Internet tradition at the time emphasized "rough consensus and running code", Christopher Ambler, who ran Image Online Design, saw this as meaning that his company could get a new TLD into the root by starting up a functional registry for it. After asking and receiving permission from IANA to do so, IOD launched .web, a new unrestricted top level domain.	It originated when Jon Postel, then running the top level of the Domain Name System basically single-handedly, proposed the addition of new top-level domains to be run by different registries.	/m/0407y	Jon_Postel	19	29	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Emtage was a founding member of the Internet Society and went on to create and chair several Working Groups at the Internet Engineering Task Force (IETF), the standard-setting body for the Internet. Working with other pioneers such as Tim Berners-Lee, Marc Andreessen, Mark McCahill (creator of Gopher) and Jon Postel, Emtage co-chaired the Uniform Resource Identifier (URI) Working Group which created and codified the standard for Uniform Resource Locators (URLs).	Working with other pioneers such as Tim Berners-Lee, Marc Andreessen, Mark McCahill (creator of Gopher) and Jon Postel, Emtage co-chaired the Uniform Resource Identifier (URI) Working Group which created and codified the standard for Uniform Resource Locators (URLs).	/m/0407y	Jon_Postel	108	118	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
From the early days of the network until his death during 1998, Jon Postel oversaw address allocation and other Internet protocol numbering and assignments in his capacity as Director of the Computer Networks Division at the Information Sciences Institute of the University of Southern California, under a contract from the Dept. of Defense. This function eventually became known as the Internet Assigned Numbers Authority (IANA), and as it expanded to include management of the global Domain Name System (DNS) root servers, a small organization grew. Postel also served as RFC Editor.	From the early days of the network until his death during 1998, Jon Postel oversaw address allocation and other Internet protocol numbering and assignments in his capacity as Director of the Computer Networks Division at the Information Sciences Institute of the University of Southern California, under a contract from the Dept.	/m/0407y	Jon_Postel	64	74	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Working with other pioneers such as Tim Berners-Lee, Marc Andreessen, Alan Emtage and Peter J. Deutsch (creators of Archie) and Jon Postel, McCahill was involved in creating and codifing the standard for Uniform Resource Locators (URLs).	Working with other pioneers such as Tim Berners-Lee, Marc Andreessen, Alan Emtage and Peter J. Deutsch (creators of Archie) and Jon Postel, McCahill was involved in creating and codifing the standard for Uniform Resource Locators (URLs).	/m/0407y	Jon_Postel	128	138	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The idea for an independent global domain name registry stems from a series of conversations between one of CentralNic's original founders and the late Jon Postel, one of the founding fathers of the modern Internet. Postel suggested the use of .UK.COM to compete with .CO.UK, at a time when the proposed price of the latter was about $300.	The idea for an independent global domain name registry stems from a series of conversations between one of CentralNic's original founders and the late Jon Postel, one of the founding fathers of the modern Internet.	/m/0407y	Jon_Postel	152	162	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
On March 26, 1972, Vint Cerf and Jon Postel called for documenting the then current usages and establishing a socket number catalog in RFC 322. Network administrators were asked to submit a note or place a phone call, "describing the function and socket numbers of network service programs at each HOST".	On March 26, 1972, Vint Cerf and Jon Postel called for documenting the then current usages and establishing a socket number catalog in RFC 322.	/m/0407y	Jon_Postel	33	43	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The authors discuss the early days of the Internet through the 1990s, when Julian Dibbell and John Perry Barlow articulated a vision of free Internet that gained wide currency in the public imagination. The Electronic Frontier Foundation worked to protect the Internet from regulation in the belief that a free online community might unite people and eliminate the need for government. Jon Postel was the ultimate authority over Internet domain names.	Jon Postel was the ultimate authority over Internet domain names.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Jon Postel met an even more direct response when he attempted to retake control over the root naming and numbering system in 1998. Hours after Postel asked eight regional operators for root control over the Internet, he received threats of legal and economic repercussions from federal agent Ira Magaziner. Network Solutions has retained final authority over Internet domain names ever since (44‚Äì46).	Jon Postel met an even more direct response when he attempted to retake control over the root naming and numbering system in 1998.	/m/0407y	Jon_Postel	0	10	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Paul V. Mockapetris, while working with Jon Postel at the Information Sciences Institute (ISI) in 1983, proposed the Domain Name System (DNS) architecture. He was IETF chair from 1994 to 1996.	Paul V. Mockapetris, while working with Jon Postel at the Information Sciences Institute (ISI) in 1983, proposed the Domain Name System (DNS) architecture.	/m/0407y	Jon_Postel	40	50	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Joyce K. Reynolds of USC's Information Sciences Institute (ISI) served as RFC Editor, together with Bob Braden, from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001. She was IETF User Services Area Director and a member of the Internet Engineering Steering Group (IESG) from 1990 to 1998. She has authored or co-authored many RFCs. In 2006, together with Bob Braden, she received the Internet Society's Postel Award in recognition of her services to the Internet.	Joyce K. Reynolds of USC's Information Sciences Institute (ISI) served as RFC Editor, together with Bob Braden, from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001.	/m/0407y	Jon_Postel	173	183	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
In the mid-1990s Mr Bradner distinguished himself as one of the most trustworthy and reliable voices in the area of "Internet governance" -- the process of developing an institution to succeed the Internet Assigned Numbers Authority (IANA), which managed the Internet's domain name system, but was essentially run by a computer science professor, Jon Postel. As one of a number of close advisers to Dr. Postel, Mr. Bradner sought to maintain the spirit of "Internet self-governance" -- the idea that the users of the network should decide the rules by which they would abide.	In the mid-1990s Mr Bradner distinguished himself as one of the most trustworthy and reliable voices in the area of "Internet governance" -- the process of developing an institution to succeed the Internet Assigned Numbers Authority (IANA), which managed the Internet's domain name system, but was essentially run by a computer science professor, Jon Postel.	/m/0407y	Jon_Postel	347	357	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Differently from mail-access protocols, the original SMTP specified by Jon Postel in the 1970s did not provide for using passwords for sending email messages. This lack of security gave rise to open mail relays, unprotected mail servers used to propagate spam and worms that became a plague in the late '90s. Before SMTP AUTH, a relay client had to be identified by IP address, which is only practical for email services provided by the same Internet service provider (ISP) supplying the connection, or else using specific hacks, such as POP before SMTP.	Differently from mail-access protocols, the original SMTP specified by Jon Postel in the 1970s did not provide for using passwords for sending email messages.	/m/0407y	Jon_Postel	71	81	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
The NIC provided reference service to users (initially over the phone and by physical mail), maintained and published a directory of people (the "white pages"), a resource handbook (the "yellow pages", a list of services) and the protocol handbook. After the Network Operations Center at Bolt, Bernek and Newman brought new hosts onto the network, the NIC registered names, provided access control for terminals, audit trail and billing information, and distributed Request for Comments (RFCs). Feinler, working with Steve Crocker, Jon Postel, Joyce Reynolds and other members of the Network Working Group (NWG), developed RFCs into the official set of technical notes for the ARPANET and later the Internet. The NIC provided the first links to on-line documents using the NLS Journal system developed at ARC. Engelbart continued leading-edge research in the ARC, while the NIC provided a service to all network users. This led to establishing the NIC as a separate project with Feinler as manager.	Feinler, working with Steve Crocker, Jon Postel, Joyce Reynolds and other members of the Network Working Group (NWG), developed RFCs into the official set of technical notes for the ARPANET and later the Internet.	/m/0407y	Jon_Postel	37	47	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Therefore, to combat that sort of brain surgery by transmission mechanics, I feel I should present my credentials . . . . So, aside from having coined the term "Old Network Boy" ‚Äî and being one ‚Äî and indeed probably being the only person in the world who knew, worked with, and was even on friendly terms with Vint Cerf, Jon Postel, and Dave Clark before they got their respective doctorates, I was an active participant in the design of the ARPANET "Old" and "New" Telnet protocols, the File Transfer Protocol, and the first Graphics Protocol; I was the originator and a principal designer of "neted," a common editor command for the ARPANET; and I was the originator and a principal designer of the first Host-Front-End Protocol, not only for the ARPANET. I also implemented "Old" Telnet for Multics, did the integration and checkout of NCP and Telnet on 645 Multics ‚Äî setting the one-month record for Development Machine Time in the process ‚Äî and later served as the Multics Network Technical Liaison and Network and Graphics Group Leader, supervising the attachment of 6180 Multics to the ARPANET in the process. In recent years, I've tried to help the Government get some of its money's worth from contractors on any number of networks too depressing to mention both for the ‚Äî‚Äî‚Äî‚Äî‚Äî*  Corporation, which now  employs me, and for the DoD's Protocol Standards Technical Panel.	So, aside from having coined the term "Old Network Boy" ‚Äî and being one ‚Äî and indeed probably being the only person in the world who knew, worked with, and was even on friendly terms with Vint Cerf, Jon Postel, and Dave Clark before they got their respective doctorates, I was an active participant in the design of the ARPANET "Old" and "New" Telnet protocols, the File Transfer Protocol, and the first Graphics Protocol; I was the originator and a principal designer of "neted," a common editor command for the ARPANET; and I was the originator and a principal designer of the first Host-Front-End Protocol, not only for the ARPANET.	/m/0407y	Jon_Postel	199	209	/award/award_winner,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person,/symbols/name_source,/user/narphorium/people/nndb_person
Rosenstiehl was directeur d‚Äô√©tudes at the √âcole des Hautes √âtudes en Sciences Sociales in Paris, before his retirement. He is co-editor in chief of the European Journal of Combinatorics. Rosenstiehl, Giuseppe Di Battista, Peter Eades and Roberto Tamassia organized in 1992 at Marino (Italy) a meeting devoted to graph drawing which initiated a long series of international conferences, the International Symposia on Graph Drawing.	Rosenstiehl, Giuseppe Di Battista, Peter Eades and Roberto Tamassia organized in 1992 at Marino (Italy) a meeting devoted to graph drawing which initiated a long series of international conferences, the International Symposia on Graph Drawing.	/m/0hhskrt	Peter_Eades	35	46	/people/person
The first symposium was held in Marino, near Rome, Italy, in 1992, organized by Giuseppe Di Battista, Peter Eades, Pierre Rosenstiehl, and Roberto Tamassia. The first two symposia did not publish proceedings, but reports are available online. Since 1994, the proceedings of the symposia have been published by Springer-Verlag's Lecture Notes in Computer Science series.	The first symposium was held in Marino, near Rome, Italy, in 1992, organized by Giuseppe Di Battista, Peter Eades, Pierre Rosenstiehl, and Roberto Tamassia.	/m/0hhskrt	Peter_Eades	102	113	/people/person
Besides Danny Hillis, other noted people who worked for or with the company included Greg Papadopoulos, David Waltz, Guy L Steele, Jr., Karl Sims, Brewster Kahle, Bradley Kuszmaul, Carl Feynman, Cliff Lasser, Marvin Denicoff, Alex Vasilevksy, Richard Fishman, Mirza Mehdi, Alan Harshman, Richard Jordan, Alan Mercer, James Bailey, Tsutomu Shimomura. Among the early Corporate Fellows of Thinking Machines were Marvin Minsky, Doug Lenat, Stephen Wolfram, Tomaso Poggio, Richard Feynman, and Jack Schwartz later joined by Charles E. Leiserson, Alan Edelman and Eric Lander,Lennart Johnsson .	Among the early Corporate Fellows of Thinking Machines were Marvin Minsky, Doug Lenat, Stephen Wolfram, Tomaso Poggio, Richard Feynman, and Jack Schwartz later joined by Charles E. Leiserson, Alan Edelman and Eric Lander,Lennart Johnsson .	/m/0fs1xy	Lennart_Johnsson	221	237	/computer/computer_scientist,/people/person
The Artificial Intelligence Center has also produced a large number of notable alumni, many of whom contributed to Shakey the robot; these include project manager Charles Rosen as well as Nils Nilsson, Bertram Raphael, Richard O. Duda, Peter E. Hart, Richard Fikes and Richard Waldinger. AI researcher Gary Hendrix went on to found Symantec. The CALO project (and its spin-off, Siri) also produced notable names including C. Raymond Perrault and Adam Cheyer.	The Artificial Intelligence Center has also produced a large number of notable alumni, many of whom contributed to Shakey the robot; these include project manager Charles Rosen as well as Nils Nilsson, Bertram Raphael, Richard O. Duda, Peter E. Hart, Richard Fikes and Richard Waldinger.	/m/0bs291	Charles_Rosen_(scientist)	163	176	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
Shakey was developed from approximately 1966 through 1972 with Charles Rosen as project manager. Other major contributors included Nils Nilsson, Alfred Brain, Bertram Raphael, Richard Duda, Peter Hart, Richard Fikes, Richard Waldinger, Thomas Garvey, Jay Tenenbaum, and Michael Wilber. The project was funded by the Defense Advanced Research Projects Agency (DARPA).	Shakey was developed from approximately 1966 through 1972 with Charles Rosen as project manager.	/m/0bs291	Charles_Rosen_(scientist)	63	76	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
Although Ridge Vineyards was founded in the early 1960s, wine production at the winery's Monte Bello location has a much longer history. Grapevines were first planted on Monte Bello Ridge by Osea Perrone, a doctor and prominent member of the northern California Italian immigrant community, in 1885. The first Monte Bello wine was produced in 1892. Following Prohibition, the vineyard at Monte Bello passed through the hands of several amateur winemakers until it was purchased in 1960 by David Bennion, Charles Rosen, Hewitt Crane, and Howard Zeidler, all engineers at nearby Stanford Research Institute (SRI). Ridge Vineyards produced its first commercial wine from the 1962 vintage.	Following Prohibition, the vineyard at Monte Bello passed through the hands of several amateur winemakers until it was purchased in 1960 by David Bennion, Charles Rosen, Hewitt Crane, and Howard Zeidler, all engineers at nearby Stanford Research Institute (SRI).	/m/0bs291	Charles_Rosen_(scientist)	155	168	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
In 1959, with fellow SRI engineers David Bennion, Charles Rosen, and Howard Zeidler, Crane co-founded Ridge Vineyards. One of its red wines placed fifth in the Judgment of Paris wine tasting.	In 1959, with fellow SRI engineers David Bennion, Charles Rosen, and Howard Zeidler, Crane co-founded Ridge Vineyards.	/m/0bs291	Charles_Rosen_(scientist)	50	63	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
Starting in 1966, Nilsson, along with Charles A. Rosen and Bertram Raphael, led a research team in the construction of Shakey, a robot that constructed a model of its environment from sensor data, reasoned about that environment to arrive at a plan of action, then carried that plan out by sending commands to its motors. This paradigm has been enormously influential in AI. (Textbooks such as (Charniak & McDermott 1985), (Ginsberg 1993) and the first edition of (Russell & Norvig 1992) show this influence in almost every chapter, although the entire field has not always stayed under its spell.) Although the basic idea of using logical reasoning to decide on actions is due to John McCarthy (McCarthy), Nilsson's group was the first to embody it in a complete agent, along the way inventing the A* search algorithm (Hart, Nilsson & Raphael 1968) and founding the field of automated temporal planning. In the latter pursuit, they invented the STRIPS planner (Fikes & Nilsson 1971), whose action representation is still the basis of many of today's planning algorithms. The subfield of automated temporal planning called classical planning is based on most of the assumptions built into STRIPS.	Starting in 1966, Nilsson, along with Charles A. Rosen and Bertram Raphael, led a research team in the construction of Shakey, a robot that constructed a model of its environment from sensor data, reasoned about that environment to arrive at a plan of action, then carried that plan out by sending commands to its motors.	/m/0bs291	Charles_Rosen_(scientist)	38	54	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
Bennion started as a Stanford Research Institute (SRI) engineer who became the first winemaker of Ridge Vineyards, Cupertino, California with his Ridge co-founders, Hewitt Crane, Charles Rosen and Howard Zeidler.	Bennion started as a Stanford Research Institute (SRI) engineer who became the first winemaker of Ridge Vineyards, Cupertino, California with his Ridge co-founders, Hewitt Crane, Charles Rosen and Howard Zeidler.	/m/0bs291	Charles_Rosen_(scientist)	179	192	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
The Artificial Intelligence Center is a laboratory in the Information and Computing Sciences Division of SRI International. It was founded in 1966 by Charles Rosen and studies artificial intelligence. One of their early projects was Shakey the Robot, the first general-purpose mobile robot. More recently, the center funded early development of CALO and Siri.	It was founded in 1966 by Charles Rosen and studies artificial intelligence.	/m/0bs291	Charles_Rosen_(scientist)	26	39	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
Many notable SRI researchers were involved with the Augmentation Research Center. These include Douglas Engelbart, the developer of the modern GUI; William English, who contributed to the design of Engelbart's computer mouse; Jeff Rulifson, the primary developer of the NLS; Elizabeth J. Feinler, who ran the Network Information Center; and David Maynard, who would help found Electronic Arts. The Artificial Intelligence Center has also produced a large number of notable alumni, many of whom contributed to Shakey the robot; these include project manager Charles Rosen as well as Nils Nilsson, Bertram Raphael, Richard O. Duda, Peter E. Hart, Richard Fikes and Richard Waldinger. Artificial intelligence researcher Gary Hendrix went on to found Symantec. The CALO project (and its spin-off, Siri) also produced notable names including C. Raymond Perrault and Adam Cheyer.	The Artificial Intelligence Center has also produced a large number of notable alumni, many of whom contributed to Shakey the robot; these include project manager Charles Rosen as well as Nils Nilsson, Bertram Raphael, Richard O. Duda, Peter E. Hart, Richard Fikes and Richard Waldinger.	/m/0bs291	Charles_Rosen_(scientist)	163	176	/computer/computer_scientist,/influence/influence_node,/law/inventor,/people/deceased_person,/people/person
M6 (cipher)  ‚Ä¢ M8 (cipher)  ‚Ä¢ M-209  ‚Ä¢ M-325  ‚Ä¢ M-94  ‚Ä¢ MacGuffin (cipher)  ‚Ä¢ Madryga  ‚Ä¢ MAGENTA  ‚Ä¢ Magic (cryptography)  ‚Ä¢ Maksymilian Ciƒô≈ºki  ‚Ä¢ Malcolm J. Williamson  ‚Ä¢ Malleability (cryptography)  ‚Ä¢ Man-in-the-middle attack  ‚Ä¢ Marian Rejewski  ‚Ä¢ MARS (cryptography)  ‚Ä¢ Martin Hellman  ‚Ä¢ MaruTukku  ‚Ä¢ Massey-Omura cryptosystem  ‚Ä¢ Matt Blaze  ‚Ä¢ Matt Robshaw  ‚Ä¢ Max Newman  ‚Ä¢ McEliece cryptosystem  ‚Ä¢ mcrypt  ‚Ä¢ MD2 (cryptography)  ‚Ä¢ MD4  ‚Ä¢ MD5  ‚Ä¢ MD5CRK  ‚Ä¢ MDC-2  ‚Ä¢ MDS matrix  ‚Ä¢ Mean Shortest Distance  ‚Ä¢ Meet-in-the-middle attack  ‚Ä¢ Mental poker  ‚Ä¢ Mercury (cipher machine)  ‚Ä¢ Mercy (cipher)  ‚Ä¢ Meredith Gardner  ‚Ä¢ Merkle signature scheme  ‚Ä¢ Merkle-Damg√•rd construction  ‚Ä¢ Merkle-Hellman knapsack cryptosystem  ‚Ä¢ Merkle's Puzzles  ‚Ä¢ Merkle tree  ‚Ä¢ MESH (cipher)  ‚Ä¢ Message authentication code  ‚Ä¢ Message forgery  ‚Ä¢ Message Integrity Code  ‚Ä¢ MI8  ‚Ä¢ Michael Luby  ‚Ä¢ MICKEY-128  ‚Ä¢ Microdot  ‚Ä¢ Military Cryptanalysis (book) (William F. Friedman)  ‚Ä¢ Military Cryptanalytics  ‚Ä¢ Mimic function  ‚Ä¢ Mirror writing  ‚Ä¢ MISTY1  ‚Ä¢ Mitsuru Matsui  ‚Ä¢ MMB  ‚Ä¢ Mod n cryptanalysis  ‚Ä¢ MQV  ‚Ä¢ MS-CHAP  ‚Ä¢ MUGI  ‚Ä¢ MULTI-S01  ‚Ä¢ MultiSwap  ‚Ä¢ Multivariate cryptography  ‚Ä¢	M6 (cipher)  ‚Ä¢ M8 (cipher)  ‚Ä¢ M-209  ‚Ä¢ M-325  ‚Ä¢ M-94  ‚Ä¢ MacGuffin (cipher)  ‚Ä¢ Madryga  ‚Ä¢ MAGENTA  ‚Ä¢ Magic (cryptography)  ‚Ä¢ Maksymilian Ciƒô≈ºki  ‚Ä¢ Malcolm J. Williamson  ‚Ä¢ Malleability (cryptography)  ‚Ä¢ Man-in-the-middle attack  ‚Ä¢ Marian Rejewski  ‚Ä¢ MARS (cryptography)  ‚Ä¢ Martin Hellman  ‚Ä¢ MaruTukku  ‚Ä¢ Massey-Omura cryptosystem  ‚Ä¢ Matt Blaze  ‚Ä¢ Matt Robshaw  ‚Ä¢ Max Newman  ‚Ä¢ McEliece cryptosystem  ‚Ä¢ mcrypt  ‚Ä¢ MD2 (cryptography)  ‚Ä¢ MD4  ‚Ä¢ MD5  ‚Ä¢ MD5CRK  ‚Ä¢ MDC-2  ‚Ä¢ MDS matrix  ‚Ä¢ Mean Shortest Distance  ‚Ä¢ Meet-in-the-middle attack  ‚Ä¢ Mental poker  ‚Ä¢ Mercury (cipher machine)  ‚Ä¢ Mercy (cipher)  ‚Ä¢ Meredith Gardner  ‚Ä¢ Merkle signature scheme  ‚Ä¢ Merkle-Damg√•rd construction  ‚Ä¢ Merkle-Hellman knapsack cryptosystem  ‚Ä¢ Merkle's Puzzles  ‚Ä¢ Merkle tree  ‚Ä¢ MESH (cipher)  ‚Ä¢ Message authentication code  ‚Ä¢ Message forgery  ‚Ä¢ Message Integrity Code  ‚Ä¢ MI8  ‚Ä¢ Michael Luby  ‚Ä¢ MICKEY-128  ‚Ä¢ Microdot  ‚Ä¢ Military Cryptanalysis (book) (William F. Friedman)  ‚Ä¢ Military Cryptanalytics  ‚Ä¢ Mimic function  ‚Ä¢ Mirror writing  ‚Ä¢ MISTY1  ‚Ä¢ Mitsuru Matsui  ‚Ä¢ MMB  ‚Ä¢ Mod n cryptanalysis  ‚Ä¢ MQV  ‚Ä¢ MS-CHAP  ‚Ä¢ MUGI  ‚Ä¢ MULTI-S01  ‚Ä¢ MultiSwap  ‚Ä¢ Multivariate cryptography  ‚Ä¢	/m/02pjpz7	Michael_Luby	850	862	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Many modern and also some old symmetric block ciphers are based on Feistel networks (e.g. GOST 28147-89 block cipher), and the structure and properties of Feistel ciphers have been extensively explored by cryptographers. Specifically, Michael Luby and Charles Rackoff analyzed the Feistel cipher construction, and proved that if the round function is a cryptographically secure pseudorandom function, with Ki used as the seed, then 3 rounds is sufficient to make the block cipher a pseudorandom permutation, while 4 rounds is sufficient to make it a "strong" pseudorandom permutation (which means that it remains pseudorandom even to an adversary who gets oracle access to its inverse permutation).	Specifically, Michael Luby and Charles Rackoff analyzed the Feistel cipher construction, and proved that if the round function is a cryptographically secure pseudorandom function, with Ki used as the seed, then 3 rounds is sufficient to make the block cipher a pseudorandom permutation, while 4 rounds is sufficient to make it a "strong" pseudorandom permutation (which means that it remains pseudorandom even to an adversary who gets oracle access to its inverse permutation).	/m/02pjpz7	Michael_Luby	14	26	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Michael Luby created the Tornado codes.	Michael Luby created the Tornado codes.	/m/02pjpz7	Michael_Luby	0	12	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
In computer science, Luby transform codes (LT codes) are the first class of practical fountain codes that are near-optimal erasure correcting codes. They were invented by Michael Luby in 1998 and published in 2002. Like some other fountain codes, LT codes depend on sparse bipartite graphs to trade reception overhead for encoding and decoding speed. The distinguishing characteristic of LT codes is in employing a particularly simple algorithm based on the exclusive or operation () to encode and decode the message.	They were invented by Michael Luby in 1998 and published in 2002.	/m/02pjpz7	Michael_Luby	22	34	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
The problem of practical broadcast encryption has first been formally studied by Amos Fiat and Moni Naor in 1994. Since then, several solutions have been described in the literature, including combinatorial constructions, one-time revocation schemes based on secret sharing techniques, and tree-based constructions. In general, they offer various trade-offs between the increase in the size of the broadcast, the number of keys that each user needs to store, and the feasibility of an unqualified user or a collusion of unqualified users being able to decrypt the content. Luby and Staddon have used a combinatorial approach to study the trade-offs for some general classes of broadcast encryption algorithms. A particularly efficient tree-based construction is the "subset difference" scheme, which is derived from a class of so-called subset cover schemes. The subset difference scheme is notably implemented in the AACS for HD DVD and Blu-ray Disc encryption. A rather simple broadcast encryption scheme is used for the CSS for DVD encryption.	Luby and Staddon have used a combinatorial approach to study the trade-offs for some general classes of broadcast encryption algorithms.	/m/02pjpz7	Michael_Luby	0	4	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Rackoff currently works at the University of Toronto. His research interests are in computational complexity theory. For some time now he has been specializing in cryptography and security protocols. In 1988, he collaborated with Michael Luby in a widely-cited analysis of the Feistel cipher construction (one important result shown there is the construction of a strongly pseudo random permutation generator from a pseudo random function generator). Rackoff was awarded the 1993 G√∂del Prize for his work on interactive proof systems and for being one of the co-inventors of zero-knowledge proofs.	In 1988, he collaborated with Michael Luby in a widely-cited analysis of the Feistel cipher construction (one important result shown there is the construction of a strongly pseudo random permutation generator from a pseudo random function generator).	/m/02pjpz7	Michael_Luby	30	42	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
The leftover hash lemma is a lemma in cryptography first stated by Russell Impagliazzo, Leonid Levin, and Michael Luby.	The leftover hash lemma is a lemma in cryptography first stated by Russell Impagliazzo, Leonid Levin, and Michael Luby.	/m/02pjpz7	Michael_Luby	106	118	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Amin Shokrollahi is an Iranian mathematician who has worked on a variety of topics including coding theory and algebraic complexity theory. He is best known for his work on iterative decoding of graph based codes for which he received the IEEE Information Theory Paper Award of 2002 (together with Michael Luby, Michael Mitzenmacher, and Daniel Spielman, as well as Tom Richardson and Ruediger Urbanke). He is one of the inventors of a modern class of practical erasure codes known as tornado codes, and the principal developer of raptor codes, which belong to a class of rateless erasure codes known as Fountain codes. In connection with the work on these codes, he received the IEEE Eric E. Sumner Award in 2007 together with Michael Luby "for bridging mathematics, Internet design and mobile broadcasting as well as successful standardization" and the IEEE Richard W. Hamming Medal in 2012 together with Michael Luby "for the conception, development, and analysis of practical rateless codes". He also received the 2007 joint Communication Society and Information Theory Society best paper award for his work on raptor codes.	He is best known for his work on iterative decoding of graph based codes for which he received the IEEE Information Theory Paper Award of 2002 (together with Michael Luby, Michael Mitzenmacher, and Daniel Spielman, as well as Tom Richardson and Ruediger Urbanke).	/m/02pjpz7	Michael_Luby	158	170	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Amin Shokrollahi is an Iranian mathematician who has worked on a variety of topics including coding theory and algebraic complexity theory. He is best known for his work on iterative decoding of graph based codes for which he received the IEEE Information Theory Paper Award of 2002 (together with Michael Luby, Michael Mitzenmacher, and Daniel Spielman, as well as Tom Richardson and Ruediger Urbanke). He is one of the inventors of a modern class of practical erasure codes known as tornado codes, and the principal developer of raptor codes, which belong to a class of rateless erasure codes known as Fountain codes. In connection with the work on these codes, he received the IEEE Eric E. Sumner Award in 2007 together with Michael Luby "for bridging mathematics, Internet design and mobile broadcasting as well as successful standardization" and the IEEE Richard W. Hamming Medal in 2012 together with Michael Luby "for the conception, development, and analysis of practical rateless codes". He also received the 2007 joint Communication Society and Information Theory Society best paper award for his work on raptor codes.	In connection with the work on these codes, he received the IEEE Eric E. Sumner Award in 2007 together with Michael Luby "for bridging mathematics, Internet design and mobile broadcasting as well as successful standardization" and the IEEE Richard W. Hamming Medal in 2012 together with Michael Luby "for the conception, development, and analysis of practical rateless codes".	/m/02pjpz7	Michael_Luby	108	120	/award/award_winner,/business/board_member,/computer/computer_scientist,/organization/organization_founder,/people/person
Reverse-engineering efforts to allow the Trance Vibrator to attach to and be controlled by a PC have been successfully executed in Japan, resulting in a device driver for Microsoft Windows XP and Windows 2000. Sam Hocevar also wrote a driver which is part of the Linux kernel.	Sam Hocevar also wrote a driver which is part of the Linux kernel.	/m/02qh92f	Sam_Hocevar	0	11	/people/person
The WTFPL (Do What the Fuck You Want to Public License) is a permissive way of licensing intellectual property rights, most commonly used as a permissive free software license. It is essentially no different from dedication to the public domain. The original Version 1.0 license, released March 2000, was written by Banlu Kemiyatorn who used it for Window Maker artwork. Sam Hocevar, a French programmer who was the Debian project leader from 17 April 2007 to 16 April 2008, wrote version 2.0. It allows for redistribution and modification of the software under any terms ‚Äì licensees are encouraged to "do what the fuck  want to". The license was approved as a GPL-compatible free software license by the Free Software Foundation.	Sam Hocevar, a French programmer who was the Debian project leader from 17 April 2007 to 16 April 2008, wrote version 2.0.	/m/02qh92f	Sam_Hocevar	0	11	/people/person
The WTFPL is rarely used, at least by name, but some software has been released under it. The license can also be applied to artwork and written material. Freecode, an index of free software, includes a specific category for WTFPL software and artwork, containing 37 entries as of May 2013] of which two are authored by Sam Hocevar, the author of version 2.0 of the license. Potlatch, an online editor of the OpenStreetMap project, as well as its more recent equivalent iD, are released under the WTFPL.	Freecode, an index of free software, includes a specific category for WTFPL software and artwork, containing 37 entries as of May 2013] of which two are authored by Sam Hocevar, the author of version 2.0 of the license.	/m/02qh92f	Sam_Hocevar	165	176	/people/person
In 2005 Sam Hocevar became the current maintainer of the Elk scheme project, merging contributed patches and fixing known bugs.	In 2005 Sam Hocevar became the current maintainer of the Elk scheme project, merging contributed patches and fixing known bugs.	/m/02qh92f	Sam_Hocevar	8	19	/people/person
The former president of the GNAA, known as "timecop", is known for founding the anime fansub group "Dattebayo". Other members include former president Andrew "weev" Auernheimer, Daniel "JacksonBrown" Spitler, former Debian project head Sam Hocevar, and current spokesman Leon Kaiser.	Other members include former president Andrew "weev" Auernheimer, Daniel "JacksonBrown" Spitler, former Debian project head Sam Hocevar, and current spokesman Leon Kaiser.	/m/02qh92f	Sam_Hocevar	124	135	/people/person
In the 1970s, ML was created by Robin Milner at the University of Edinburgh, and David Turner developed initially the language SASL at the University of St. Andrews and later the language Miranda at the University of Kent. ML eventually developed into several dialects, the most common of which are now OCaml and Standard ML. Also in the 1970s, the development of Scheme (a partly functional dialect of Lisp), as described in the influential Lambda Papers and the 1985 textbook Structure and Interpretation of Computer Programs, brought awareness of the power of functional programming to the wider programming-languages community.	In the 1970s, ML was created by Robin Milner at the University of Edinburgh, and David Turner developed initially the language SASL at the University of St. Andrews and later the language Miranda at the University of Kent.	/m/041_rx	David_Turner_(computer_scientist)	81	93	/computer/computer_scientist,/computer/programming_language_designer,/people/person
KRC (Kent Recursive Calculator) is a lazy functional language developed by David Turner in (or before?) 1981 based on SASL, with pattern matching, guards and ZF expressions (now more usually called list comprehensions). Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.	KRC (Kent Recursive Calculator) is a lazy functional language developed by David Turner in (or before?	/m/041_rx	David_Turner_(computer_scientist)	75	87	/computer/computer_scientist,/computer/programming_language_designer,/people/person
KRC (Kent Recursive Calculator) is a lazy functional language developed by David Turner in (or before?) 1981 based on SASL, with pattern matching, guards and ZF expressions (now more usually called list comprehensions). Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.	Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.	/m/041_rx	David_Turner_(computer_scientist)	41	53	/computer/computer_scientist,/computer/programming_language_designer,/people/person
When testing each candidate number, the optimal trial division algorithm uses just those prime numbers not exceeding its square root. The widely known 1975 functional code by David Turner is often presented as an example of the sieve of Eratosthenes but is actually a sub-optimal trial division algorithm.	The widely known 1975 functional code by David Turner is often presented as an example of the sieve of Eratosthenes but is actually a sub-optimal trial division algorithm.	/m/041_rx	David_Turner_(computer_scientist)	41	53	/computer/computer_scientist,/computer/programming_language_designer,/people/person
Miranda is a non-strict purely functional programming language designed by David Turner as a successor to his earlier programming languages SASL and KRC, using some concepts from ML and Hope. It was produced by Research Software Ltd. of England (which holds a trademark on the name Miranda) and was the first purely functional language to be commercially supported.	Miranda is a non-strict purely functional programming language designed by David Turner as a successor to his earlier programming languages SASL and KRC, using some concepts from ML and Hope.	/m/041_rx	David_Turner_(computer_scientist)	75	87	/computer/computer_scientist,/computer/programming_language_designer,/people/person
These combinators are extremely useful when translating predicate logic or lambda calculus into combinator expressions. They were also used by Curry, and much later by David Turner, whose name has been associated with their computational use. Using them, we can extend the rules for the transformation as follows:	They were also used by Curry, and much later by David Turner, whose name has been associated with their computational use.	/m/041_rx	David_Turner_(computer_scientist)	48	60	/computer/computer_scientist,/computer/programming_language_designer,/people/person
SASL (from St. Andrews Static Language, alternatively St. Andrews Standard Language) is a purely functional programming language developed by David Turner at the University of St Andrews in 1972, based on the applicative subset of ISWIM. In 1976 Turner redesigned and reimplemented it as a non-strict (lazy) language. In this form it was the foundation of Turner's later languages KRC and Miranda, but SASL appears to be untyped whereas Miranda has polymorphic types.	SASL (from St. Andrews Static Language, alternatively St. Andrews Standard Language) is a purely functional programming language developed by David Turner at the University of St Andrews in 1972, based on the applicative subset of ISWIM.	/m/041_rx	David_Turner_(computer_scientist)	142	154	/computer/computer_scientist,/computer/programming_language_designer,/people/person
While Pure uses eager evaluation by default, it also supports lazy data structures such as streams (lazy lists). For instance, here is a (suboptimal) trial division version of the sieve of Eratosthenes (attributed to David Turner) which computes the stream of all prime numbers:	For instance, here is a (suboptimal) trial division version of the sieve of Eratosthenes (attributed to David Turner) which computes the stream of all prime numbers:	/m/041_rx	David_Turner_(computer_scientist)	104	116	/computer/computer_scientist,/computer/programming_language_designer,/people/person
The OpenMath Effort is governed by the OpenMath Society, based in Helsinki, Finland. The Society brings together tool builders, software suppliers, publishers and authors. Membership is by invitation of the Societies Executive Committee, which welcomes self-nominations of individuals who have worked on OpenMath-related issues in research or application. As of 2007, Michael Kohlhase is president of the OpenMath society. He succeeded Arjeh M. Cohen, who was the first president.	As of 2007, Michael Kohlhase is president of the OpenMath society.	/m/03m55f0	Michael_Kohlhase	12	28	/computer/computer_scientist,/education/academic,/people/person
OMDoc has been developed by the German mathematician and computer scientist Michael Kohlhase since 1998. So far, there have been the following releases:	OMDoc has been developed by the German mathematician and computer scientist Michael Kohlhase since 1998.	/m/03m55f0	Michael_Kohlhase	76	92	/computer/computer_scientist,/education/academic,/people/person
In 1977 and 1978, Jacob Ziv and Abraham Lempel published a pair of papers on a new class of lossless data-compression algorithms, now collectively referred to as LZ77 and LZ78. In 1983, Terry Welch developed a fast variant of LZ78 which was named Lempel‚ÄìZiv‚ÄìWelch (LZW).	In 1977 and 1978, Jacob Ziv and Abraham Lempel published a pair of papers on a new class of lossless data-compression algorithms, now collectively referred to as LZ77 and LZ78.	/m/066hdr	Abraham_Lempel	32	46	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Lempel‚ÄìZiv‚ÄìWelch (LZW) is a universal lossless data compression algorithm created by Abraham Lempel, Jacob Ziv, and Terry Welch. It was published by Welch in 1984 as an improved implementation of the LZ78 algorithm published by Lempel and Ziv in 1978. The algorithm is simple to implement, and has the potential for very high throughput in hardware implementations. It was the algorithm of the widely used Unix file compression utility compress, and is used in the GIF image format.	Lempel‚ÄìZiv‚ÄìWelch (LZW) is a universal lossless data compression algorithm created by Abraham Lempel, Jacob Ziv, and Terry Welch.	/m/066hdr	Abraham_Lempel	85	99	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
LZ77 and LZ78 are the two lossless data compression algorithms published in papers by Abraham Lempel and Jacob Ziv in 1977 and 1978. They are also known as LZ1 and LZ2 respectively. These two algorithms form the basis for many variations including LZW, LZSS, LZMA and others. Besides their academic influence, these algorithms formed the basis of several ubiquitous compression schemes, including GIF and the DEFLATE algorithm used in PNG.	LZ77 and LZ78 are the two lossless data compression algorithms published in papers by Abraham Lempel and Jacob Ziv in 1977 and 1978.	/m/066hdr	Abraham_Lempel	86	100	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
The Lempel‚ÄìZiv‚ÄìMarkov chain algorithm (LZMA) is an algorithm used to perform lossless data compression. It has been under development since 1998 and was first used in the 7z format of the 7-Zip archiver. This algorithm uses a dictionary compression scheme somewhat similar to the LZ77 algorithm published by Abraham Lempel and Jacob Ziv in 1977 and features a high compression ratio (generally higher than bzip2) and a variable compression-dictionary size (up to 4¬†GB), while still maintaining decompression speed similar to other commonly used compression algorithms.	This algorithm uses a dictionary compression scheme somewhat similar to the LZ77 algorithm published by Abraham Lempel and Jacob Ziv in 1977 and features a high compression ratio (generally higher than bzip2) and a variable compression-dictionary size (up to 4¬†GB), while still maintaining decompression speed similar to other commonly used compression algorithms.	/m/066hdr	Abraham_Lempel	104	118	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
The Quantum compression format is a little-known data compression method created by David Stafford of Cinematronics, LLC. It was licensed to Borland, Microsoft and Novell. Quantum is one of the possible compression methods in a Microsoft Windows CAB archive. Quantum uses an extended LZ compression algorithm. Quantum archive files are named with the filename extension .Q by convention.	Quantum uses an extended LZ compression algorithm.	/m/066hdr	Abraham_Lempel	25	27	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Jacob Ziv (Hebrew: ◊ô◊¢◊ß◊ë ◊ñ◊ô◊ï‚Äé; born 1931) is an Israeli computer scientist who, along with Abraham Lempel, developed the LZ family of lossless data compression algorithms.	Jacob Ziv (Hebrew: ◊ô◊¢◊ß◊ë ◊ñ◊ô◊ï‚Äé; born 1931) is an Israeli computer scientist who, along with Abraham Lempel, developed the LZ family of lossless data compression algorithms.	/m/066hdr	Abraham_Lempel	90	104	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
In 1996, the Association for Computing Machinery instituted the Paris Kanellakis Theory and Practice Award, which is granted yearly to honor "specific theoretical accomplishments that have had a significant and demonstrable effect on the practice of computing". Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	/m/066hdr	Abraham_Lempel	117	131	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Terry A. Welch is an American computer scientist. Along with Abraham Lempel and Jacob Ziv, he developed the lossless Lempel‚ÄìZiv‚ÄìWelch (LZW) compression algorithm, which was published in 1984.	Along with Abraham Lempel and Jacob Ziv, he developed the lossless Lempel‚ÄìZiv‚ÄìWelch (LZW) compression algorithm, which was published in 1984.	/m/066hdr	Abraham_Lempel	11	25	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Vertex addition methods work by maintaining a data structure representing the possible embeddings of an induced subgraph of the given graph, and adding vertices one at a time to this data structure. These methods began with an inefficient O(n2) method conceived by Lempel, Even and Cederbaum in 1967. It was improved by Even and Tarjan, who found a linear-time solution for the s,t-numbering step, and by Booth and Lueker, who developed the PQ tree data structure. With these improvements it is linear-time and outperforms the path addition method in practice. This method was also extended to allow a planar embedding (drawing) to be efficiently computed for a planar graph. In 1999, Shih and Hsu simplified these methods using the PC tree (an unrooted variant of the PQ tree) and a postorder traversal of the depth-first search tree of the vertices.	These methods began with an inefficient O(n2) method conceived by Lempel, Even and Cederbaum in 1967.	/m/066hdr	Abraham_Lempel	66	72	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Macrium Reflect can create full, incremental and differential backup images to optimize speed and storage requirements. Data is compressed and encrypted in real time using Abraham Lempel LZ based compression and AES encryption algorithms. Images can be mounted as a drive letter in Windows Explorer and restored using a custom Live CD.	Data is compressed and encrypted in real time using Abraham Lempel LZ based compression and AES encryption algorithms.	/m/066hdr	Abraham_Lempel	52	66	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person,/symbols/name_source
Codd's paper was picked up by two people at Berkeley, Eugene Wong and Michael Stonebraker. They started a project known as INGRES using funding that had already been allocated for a geographical database project and student programmers to produce code. Beginning in 1973, INGRES delivered its first test products which were generally ready for widespread use in 1979. INGRES was similar to System R in a number of ways, including the use of a "language" for data access, known as QUEL. Over time, INGRES moved to the emerging SQL standard.	Codd's paper was picked up by two people at Berkeley, Eugene Wong and Michael Stonebraker.	/m/0594h	Michael_Stonebraker	70	89	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
PostgreSQL evolved from the Ingres project at the University of California, Berkeley. In 1982, the project leader, Michael Stonebraker, left Berkeley to make a proprietary version of Ingres. He returned to Berkeley in 1985 and started a post-Ingres project to address the problems with contemporary database systems that had become increasingly clear during the early 1980s. The new project, POSTGRES, aimed to add the fewest features needed to completely support types. These features included the ability to define types and to fully describe relationships¬†‚Äì something used widely before but maintained entirely by the user. In Postgres, the database "understood" relationships, and could retrieve information in related tables in a natural way using rules. Postgres used many of the ideas of Ingres, but not its code.	In 1982, the project leader, Michael Stonebraker, left Berkeley to make a proprietary version of Ingres.	/m/0594h	Michael_Stonebraker	29	48	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
In 1973 when the System R project was getting started at IBM, the research team released a series of papers describing the system they were building. Two scientists at Berkeley, Michael Stonebraker and Eugene Wong, became interested in the concept after reading the papers, and decided to start a relational database research project of their own.	Two scientists at Berkeley, Michael Stonebraker and Eugene Wong, became interested in the concept after reading the papers, and decided to start a relational database research project of their own.	/m/0594h	Michael_Stonebraker	28	47	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
People typically contrast SN with systems that keep a large amount of centrally-stored state information, whether in a database, an application server, or any other similar single point of contention. While SN is best known in the context of web development, the concept predates the web: Michael Stonebraker at the University of California, Berkeley used the term in a 1986 database paper. In it he mentions existing commercial implementations of the architecture (although none are named explicitly). Teradata, which delivered its first system in 1983, was probably one of those commercial implementations. Tandem Computers officially released NonStop SQL, a shared nothing database, in 1984.	While SN is best known in the context of web development, the concept predates the web: Michael Stonebraker at the University of California, Berkeley used the term in a 1986 database paper.	/m/0594h	Michael_Stonebraker	88	107	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
David DeWitt and Michael Stonebraker, computer scientists specializing in parallel databases and shared-nothing architectures, have been critical of the breadth of problems that MapReduce can be used for. They called its interface too low-level and questioned whether it really represents the paradigm shift its proponents have claimed it is. They challenged the MapReduce proponents' claims of novelty, citing Teradata as an example of prior art that has existed for over two decades. They also compared MapReduce programmers to Codasyl programmers, noting both are "writing in a low-level language performing low-level record manipulation." MapReduce's use of input files and lack of schema support prevents the performance improvements enabled by common database system features such as B-trees and hash partitioning, though projects such as Pig (or PigLatin), Sawzall, Apache Hive, YSmart, HBase and BigTable are addressing some of these problems.	David DeWitt and Michael Stonebraker, computer scientists specializing in parallel databases and shared-nothing architectures, have been critical of the breadth of problems that MapReduce can be used for.	/m/0594h	Michael_Stonebraker	17	36	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
3PC was originally described by Dale Skeen and Michael Stonebraker in their paper, ‚ÄúA Formal Model of Crash Recovery in a Distributed System‚Äù. In that work, they modeled 2PC as a system of non-deterministic finite state automata and proved that it is not resilient to a random single site failure. The basic observation is that in 2PC, while one site is in the ‚Äúprepared to commit‚Äù state, the other may be in either the ‚Äúcommit‚Äù or the ‚Äúabort‚Äù state. From this analysis, they developed 3PC to avoid such states and it is thus resilient to such failures.	3PC was originally described by Dale Skeen and Michael Stonebraker in their paper, ‚ÄúA Formal Model of Crash Recovery in a Distributed System‚Äù.	/m/0594h	Michael_Stonebraker	47	66	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
C-Store was a database management system (DBMS) based on a column-oriented DBMS developed by a team at Brown University, Brandeis University and the Massachusetts Institute of Technology, including Michael Stonebraker, Stanley Zdonik, and Samuel Madden (MIT). The last release was in 2006. With Vertica a commercial fork lives on.	C-Store was a database management system (DBMS) based on a column-oriented DBMS developed by a team at Brown University, Brandeis University and the Massachusetts Institute of Technology, including Michael Stonebraker, Stanley Zdonik, and Samuel Madden (MIT).	/m/0594h	Michael_Stonebraker	198	217	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
StreamSQL is derived from academic research into Event Stream Processing, closely related to complex event processing. Led by Dr. Michael Stonebraker, a team of 30 professors and students on project Aurora worked collaboratively from 2001 through 2003 to develop the core principles behind StreamSQL.	Led by Dr. Michael Stonebraker, a team of 30 professors and students on project Aurora worked collaboratively from 2001 through 2003 to develop the core principles behind StreamSQL.	/m/0594h	Michael_Stonebraker	11	30	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
Dr. Seltzer earned her PhD in 1992 from Berkeley with her dissertation ‚Äò‚ÄòFile System Performance and Transaction Support,‚Äô‚Äô under advisor Michael Stonebraker. Her work in log-structured file systems, databases, and wide-scale caching is especially well-known, and she was lead author of the BSD-LFS paper.	Dr. Seltzer earned her PhD in 1992 from Berkeley with her dissertation ‚Äò‚ÄòFile System Performance and Transaction Support,‚Äô‚Äô under advisor Michael Stonebraker.	/m/0594h	Michael_Stonebraker	138	157	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
Illustra was a commercialized version of the Postgres object-relational database management system (DBMS) sold by Illustra Information Technologies, a company formed by Michael Stonebraker and Gary Morgenthaler and several of Michael Stonebraker's current and former students including: Wei Hong, Jeff Meredith, Michael Olson, Paula Hawthorn, Jeff Anton, Cimarron Taylor and Michael Ubell. The technology's extensibility model centered on DataBlade modules that defined types and associated index methods, operators, and functions for purposes and data domains that included Web publishing, search and manipulation of text, and management of geospatial information.	Illustra was a commercialized version of the Postgres object-relational database management system (DBMS) sold by Illustra Information Technologies, a company formed by Michael Stonebraker and Gary Morgenthaler and several of Michael Stonebraker's current and former students including: Wei Hong, Jeff Meredith, Michael Olson, Paula Hawthorn, Jeff Anton, Cimarron Taylor and Michael Ubell.	/m/0594h	Michael_Stonebraker	169	188	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
Joseph M. Hellerstein (born (1968-06-07)7 June 1968) is professor of Computer Science at the University of California, Berkeley, where he works on database systems and computer networks. After receiving a bachelors degree from Harvard University and a master's degree from UC Berkeley, he received his PhD from the University of Wisconsin, Madison in 1995, for a thesis on query optimization supervised by Jeffrey Naughton and Michael Stonebraker. He has made seminal contributions to many areas of database systems, such as ad-hoc sensor networks, adaptive query processing, approximate query processing and online aggregation, declarative networking, and data stream processing.	After receiving a bachelors degree from Harvard University and a master's degree from UC Berkeley, he received his PhD from the University of Wisconsin, Madison in 1995, for a thesis on query optimization supervised by Jeffrey Naughton and Michael Stonebraker.	/m/0594h	Michael_Stonebraker	240	259	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
The Conference on Innovative Data Systems Research (CIDR) is a biennial computer science conference focused on research into new techniques for data management. It was started in 2002 by Michael Stonebraker, Jim Gray, and David DeWitt, and is held at the Asilomar Conference Grounds in Pacific Grove, California.	It was started in 2002 by Michael Stonebraker, Jim Gray, and David DeWitt, and is held at the Asilomar Conference Grounds in Pacific Grove, California.	/m/0594h	Michael_Stonebraker	26	45	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
In the mid-seventies, Dr. Zdonik worked on the Prophet data management system for pharmacologists at Bolt Beranek and Newman Inc. After becoming a professor at Brown University during the early 1980s, Zdonik became a leading researcher in object-oriented databases. He has over one hundred peer-reviewed papers in the database field and was named an ACM Fellow in 2006. More recently, he has been involved in the development of several notable database projects with other well-known researchers, such as Michael Stonebraker and Sam Madden. These projects include the Aurora and Borealis stream processing engines, the C-Store column store database, and the H-Store parallel, main memory OLTP system. He has also served as a member of the VLDB Board of Trustees  and has been the general chair for several major database conferences.	More recently, he has been involved in the development of several notable database projects with other well-known researchers, such as Michael Stonebraker and Sam Madden.	/m/0594h	Michael_Stonebraker	135	154	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
Vertica Systems is an analytic database management software company. Vertica was founded in 2005 by database researcher Michael Stonebraker, and Andrew Palmer. Former CEOs include Ralph Breslauer and Christopher P. Lynch.	Vertica was founded in 2005 by database researcher Michael Stonebraker, and Andrew Palmer.	/m/0594h	Michael_Stonebraker	51	70	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
VoltDB is an in-memory database designed by several well-known database system researchers, including Michael Stonebraker (who was involved in Ingres and PostgreSQL), Sam Madden, and Daniel Abadi. It is an ACID-compliant RDBMS which uses a shared nothing architecture. It includes both enterprise and community editions. The community edition is free software released under the terms of the GNU General Public License version 3, and includes a subset of the features in the enterprise edition. VoltDB implements the design of the academic H-Store project.	VoltDB is an in-memory database designed by several well-known database system researchers, including Michael Stonebraker (who was involved in Ingres and PostgreSQL), Sam Madden, and Daniel Abadi.	/m/0594h	Michael_Stonebraker	102	121	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
H-Store is an experimental database management system (DBMS) designed for online transaction processing applications that is being developed by a team at Brown University, the Massachusetts Institute of Technology, and Yale University. The system's design was developed in 2007 by database researchers Michael Stonebraker, Sam Madden, and Daniel Abadi.	The system's design was developed in 2007 by database researchers Michael Stonebraker, Sam Madden, and Daniel Abadi.	/m/0594h	Michael_Stonebraker	66	85	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
SciDB  is an array database designed for multidimensional data management and analytics common to scientific, geospatial, financial, and industrial applications. It is developed by Paradigm4, co-founded by Michael Stonebraker.	It is developed by Paradigm4, co-founded by Michael Stonebraker.	/m/0594h	Michael_Stonebraker	44	63	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
Michael Stonebraker co-created SciDB where, he claims, arrays are 100 or so times faster than a RDBMS on this class of problem. It is swapping rows and columns for mathematical arrays that put fewer restrictions on the data and can work in any number of dimensions unlike the conventionally widely used relational database management system model.	Michael Stonebraker co-created SciDB where, he claims, arrays are 100 or so times faster than a RDBMS on this class of problem.	/m/0594h	Michael_Stonebraker	0	19	/award/award_winner,/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/organization/organization_founder,/people/person
High Performance Fortran (HPF) is an extension of Fortran 90 with constructs that support parallel computing, published by the High Performance Fortran Forum (HPFF). The HPFF was convened and chaired by Ken Kennedy of Rice University. The first version of the HPF Report was published in 1993.	The HPFF was convened and chaired by Ken Kennedy of Rice University.	/m/0287_s_	Ken_Kennedy_(computer_scientist)	37	48	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
The Turing Award 1998, 2002, 2006, and 2010 recipients gave plenary talks in FCRC 1999, 2003, 2007, and 2011. Other plenary speakers in FCRC include L√°szl√≥ Babai, Charles Bennett, Randal Bryant, Bob Colwell, David Culler, Cynthia Dwork, Shafi Goldwasser, Michael J. Flynn, Hector Garcia-Molina, John L. Hennessy, Richard Karp, Randy Katz, Ken Kennedy, James Kurose, Ed Lazowska, Barbara Liskov, Robin Milner, Chuck Moore, Christos Papadimitriou, Michael Rabin, Scott Shenker, Burton Smith, Guy L. Steele, Jr., Avi Wigderson, Maurice Wilkes, William A. Wulf.	Other plenary speakers in FCRC include L√°szl√≥ Babai, Charles Bennett, Randal Bryant, Bob Colwell, David Culler, Cynthia Dwork, Shafi Goldwasser, Michael J. Flynn, Hector Garcia-Molina, John L. Hennessy, Richard Karp, Randy Katz, Ken Kennedy, James Kurose, Ed Lazowska, Barbara Liskov, Robin Milner, Chuck Moore, Christos Papadimitriou, Michael Rabin, Scott Shenker, Burton Smith, Guy L. Steele, Jr., Avi Wigderson, Maurice Wilkes, William A. Wulf.	/m/0287_s_	Ken_Kennedy_(computer_scientist)	229	240	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
The Ken Kennedy Award, established in 2009 by the Association of Computing Machinery and the IEEE Computer Society in memory of Ken Kennedy, is awarded annually and recognizes substantial contributions to programmability and productivity in computing and substantial community service or mentoring contributions. The award includes a $5,000 honorarium and the award recipient will be announced at the ACM - IEEE Supercomputing Conference.	The Ken Kennedy Award, established in 2009 by the Association of Computing Machinery and the IEEE Computer Society in memory of Ken Kennedy, is awarded annually and recognizes substantial contributions to programmability and productivity in computing and substantial community service or mentoring contributions.	/m/0287_s_	Ken_Kennedy_(computer_scientist)	4	15	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
For the computer scientist of the same name, see David Peleg (computer scientist)	For the computer scientist of the same name, see David Peleg (computer scientist)	/m/02qqqsc	David_Peleg_(computer_scientist)	49	81	/award/award_winner,/computer/computer_scientist,/people/person
Awerbuch and David Peleg were the 2008 winners of the Edsger W. Dijkstra Prize in Distributed Computing for their work on sparse partitions.	Awerbuch and David Peleg were the 2008 winners of the Edsger W. Dijkstra Prize in Distributed Computing for their work on sparse partitions.	/m/02qqqsc	David_Peleg_(computer_scientist)	13	24	/award/award_winner,/computer/computer_scientist,/people/person
As Peter Landin noted, the language Algol was the first language to combine seamlessly imperative effects with the (call-by-name) lambda calculus. Perhaps the most elegant formulation of the language is due to John C. Reynolds, and it best exhibits its syntactic and semantic purity. Reynolds's "idealized" Algol also made a convincing methodological argument regarding the suitability of "local" effects in the context of call-by-name languages, to be contrasted with the "global" effects used by call-by-value languages such as ML. The conceptual integrity of the language made it one of the main objects of semantic research, along with PCF and ML.	As Peter Landin noted, the language Algol was the first language to combine seamlessly imperative effects with the (call-by-name) lambda calculus.	/m/030n1m	Peter_Landin	3	15	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
As pointed out by Peter Landin's 1965 paper A Correspondence between ALGOL 60 and Church's Lambda-notation, sequential procedural programming languages can be understood in terms of the lambda calculus, which provides the basic mechanisms for procedural abstraction and procedure (subprogram) application.	As pointed out by Peter Landin's 1965 paper A Correspondence between ALGOL 60 and Church's Lambda-notation, sequential procedural programming languages can be understood in terms of the lambda calculus, which provides the basic mechanisms for procedural abstraction and procedure (subprogram) application.	/m/030n1m	Peter_Landin	18	30	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
According to Hewitt , Peter Landin had introduced an even more powerful control structure using his "J" (for Jump) operator that could perform a non-local goto into the middle of a procedure invocation. In fact the "J" operator could jump back into the middle of a procedure invocation even after it had already returned. Drew McDermott and Gerald Sussman called Landin's concept the "Hairy Control Structure" and used it in the form of a nonlocal goto for the Conniver programming language. Scott Fahlman used Conniver in his planning system for robot construction tasks. This is related to what are now called re-invocable continuations.	According to Hewitt , Peter Landin had introduced an even more powerful control structure using his "J" (for Jump) operator that could perform a non-local goto into the middle of a procedure invocation.	/m/030n1m	Peter_Landin	22	34	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
In 1959, Strachey left NRDC to become a computer consultant working for NRDC, EMI, Ferranti and other organizations on a number of wide-ranging projects. This work included logical design for computers, providing autocode and later the design of high-level programming languages. For a contract to produce the autocode for the Ferranti Orion computer, Strachey hired Peter Landin who became his one assistant for the duration of Strachey's consulting period.	For a contract to produce the autocode for the Ferranti Orion computer, Strachey hired Peter Landin who became his one assistant for the duration of Strachey's consulting period.	/m/030n1m	Peter_Landin	87	99	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
In recent years, a series of evening seminars have been held, mainly at the BCS London office. Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others. In 2010, a book of chapters based on some of these talks was published. Talks are held annually with Formal Methods Europe and the London Mathematical Society (at the LMS headquarters in central London). There is also an Annual Peter Landin Semantics Seminar held each December in memory of the computer scientist Peter Landin (1930‚Äì2009).	There is also an Annual Peter Landin Semantics Seminar held each December in memory of the computer scientist Peter Landin (1930‚Äì2009).	/m/030n1m	Peter_Landin	24	36	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
In computer science, Peter Landin's J operator is a programming construct that post-composes a lambda expression with the continuation to the current lambda-context. The resulting ‚Äúfunction‚Äù is first-class and can be passed on to subsequent functions, where if applied it will return its result to the continuation of the function in which it was created.	In computer science, Peter Landin's J operator is a programming construct that post-composes a lambda expression with the continuation to the current lambda-context.	/m/030n1m	Peter_Landin	21	33	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
It interfaced well with laboratory experiments. Analog inputs and outputs were part of the basic design. It was designed in 1962 by Charles Molnar and Wesley Clark at Lincoln Laboratory, Massachusetts ), for NIH researchers. The LINC's design was literally in the public domain, perhaps making it unique in the history of computers. The number of LINCs and who built them is a minor subject of debate in the 12-bit-word community. One account states 24 LINC computers were assembled in a summer workshop at MIT. Digital Equipment Corporation (starting in 1964) and Spear Inc. of Waltham, MA. manufactured them commercially.	It was designed in 1962 by Charles Molnar and Wesley Clark at Lincoln Laboratory, Massachusetts ), for NIH researchers.	/m/04mssq	Wesley_A._Clark	46	58	/award/award_winner,/computer/computer_scientist,/people/person
DECtape had its origin in the LINCtape tape system, which was originally designed by Wesley Clark at the MIT Lincoln Laboratory as an integral part of the LINC computer. The design of the LINC, including LINCtape, was in the public domain, and LINCtape drives were manufactured by several companies, including Digital. DECtape used the same transport mechanism as LINCtape, but the tape was run in the opposite direction, thus the supply and takeup reels were reversed. Mechanical dimensions, speeds, and signal characteristics were identical, and at least one system, the PDP-12 (with the TC12-F option), was capable of using either LINCtape or DECtape on the same transport.	DECtape had its origin in the LINCtape tape system, which was originally designed by Wesley Clark at the MIT Lincoln Laboratory as an integral part of the LINC computer.	/m/04mssq	Wesley_A._Clark	85	97	/award/award_winner,/computer/computer_scientist,/people/person
Taylor hoped to build a computer network to connect the ARPA-sponsored projects together, if nothing else to let him communicate to all of them through one terminal. Sutherland returned to a teaching position, and by June 1966 Taylor was officially director of IPTO. Taylor had convinced ARPA's Director Charles M. Herzfeld to fund a network project earlier in February 1966, and hired Lawrence G. Roberts from MIT's Lincoln Laboratory to be its first program manager. Roberts first resisted moving to Washington DC, until Herzfeld reminded the director of Lincoln Laboratory that ARPA dominated its funding. Licklider continued to provide guidance, and Wesley A. Clark suggested the use of a dedicated computer, called the Interface Message Processor at each node of the network instead of centralized control. ARPA issued a request for quotation (RFQ) to build the system, which was awarded to Bolt, Beranek and Newman (BBN). ATT Bell Labs and IBM Research were invited to join, but were not interested. At a pivotal meeting in 1967 most participants resisted testing the new network; they thought it would slow down their research.	Licklider continued to provide guidance, and Wesley A. Clark suggested the use of a dedicated computer, called the Interface Message Processor at each node of the network instead of centralized control.	/m/04mssq	Wesley_A._Clark	45	60	/award/award_winner,/computer/computer_scientist,/people/person
Charles Edwin Molnar (1935‚Äì1996) was a co-developer of one of the first minicomputers, the LINC (Laboratory Instrument Computer), while a graduate student at the Massachusetts Institute of Technology (MIT) in 1962. His collaborator was Wesley A. Clark.	His collaborator was Wesley A. Clark.	/m/04mssq	Wesley_A._Clark	21	36	/award/award_winner,/computer/computer_scientist,/people/person
The idea of the IMP was first publicly discussed in early 1967 at a meeting of principle investigators for the Department of Defense's Advanced Research Projects Agency (ARPA) to discuss interconnecting machines across the country. Larry Roberts, who led the ARPANET implementation, initially proposed a network of host computers. Wes Clark suggested inserting "a small computer between each host computer and the network of transmission lines", i.e. making the IMP a separate computer.	Wes Clark suggested inserting "a small computer between each host computer and the network of transmission lines", i.e.	/m/04mssq	Wesley_A._Clark	0	9	/award/award_winner,/computer/computer_scientist,/people/person
The LINCtape magnetic tape drive, designed by Wesley A. Clark for the LINC, was suitable for handling in a laboratory environment, and the tapes could be carelessly pocketed, dropped, or even pierced and cut without losing the data stored on them.	The LINCtape magnetic tape drive, designed by Wesley A. Clark for the LINC, was suitable for handling in a laboratory environment, and the tapes could be carelessly pocketed, dropped, or even pierced and cut without losing the data stored on them.	/m/04mssq	Wesley_A._Clark	46	61	/award/award_winner,/computer/computer_scientist,/people/person
As the discrepancy between the two systems increased in the higher order powers, more proposals for unique prefixes were made. In 1996, Markus Kuhn proposed a system with di prefixes, like the "dikilobyte" (K‚ÇÇB or K2B).	In 1996, Markus Kuhn proposed a system with di prefixes, like the "dikilobyte" (K‚ÇÇB or K2B).	/m/044h4j	Markus_Kuhn_(computer_scientist)	9	20	/computer/computer_scientist,/people/person
Markus Kuhn has discovered several low-cost techniques for reducing the chances that emanations from computer displays can be monitored remotely. With CRT displays and analogue video cables, filtering out high-frequency components from fonts before rendering them on a computer screen will attenuate the energy at which text characters are broadcast. With modern flat panel displays, the high-speed digital serial interface (DVI) cables from the graphics controller are a main source of compromising emanations. Adding random noise to the less significant bits of pixel values may render the emanations from flat-panel displays unintelligible to eavesdroppers but is not a secure method. Since DVI uses a certain bit code scheme for trying to transport an evenly balanced signal of 0 and 1 bits there may not be much difference between two pixel colours that differ very much in their colour or intensity. It may also be that the generated emanations may differ totally even if only the last bit of a pixel's colour is changed. The signal received by the eavesdropper does also depend on the frequency where the emanations are detected. The signal can be received on many frequencies at once and each frequency's signal differs in contrast and brightness related to a certain colour on the screen. Usually, the technique of smothering the RED signal with noise is not effective unless the power of the noise is sufficient to drive the eavesdropper's receiver into saturation and thus overwhelming the receiver input.	Markus Kuhn has discovered several low-cost techniques for reducing the chances that emanations from computer displays can be monitored remotely.	/m/044h4j	Markus_Kuhn_(computer_scientist)	0	11	/computer/computer_scientist,/people/person
Red Pike is a classified United Kingdom government cipher, proposed for use by the National Health Service by GCHQ, but designed for a "broad range of applications in the British government" . Little is publicly known about Red Pike, except that it is a block cipher with a 64-bit block size and 64-bit key length. According to the academic study of the cipher cited below and quoted in a paper by Ross Anderson and Markus Kuhn, it "uses the same basic operations as RC5" (add, XOR, and left shift) and "has no look-up tables, virtually no key schedule and requires only five lines of code"; "the influence of each key bit quickly cascades" and "each encryption involves of the order of 100 operations".	According to the academic study of the cipher cited below and quoted in a paper by Ross Anderson and Markus Kuhn, it "uses the same basic operations as RC5" (add, XOR, and left shift) and "has no look-up tables, virtually no key schedule and requires only five lines of code"; "the influence of each key bit quickly cascades" and "each encryption involves of the order of 100 operations".	/m/044h4j	Markus_Kuhn_(computer_scientist)	101	112	/computer/computer_scientist,/people/person
The name "EURion constellation" was coined by Markus Kuhn, who uncovered the pattern in early 2002 while experimenting with a Xerox colour photocopier that refused to reproduce banknotes. The word is a portmanteau of EUR, the euro's ISO 4217 designation, and Orion, a constellation of similar shape.	The name "EURion constellation" was coined by Markus Kuhn, who uncovered the pattern in early 2002 while experimenting with a Xerox colour photocopier that refused to reproduce banknotes.	/m/044h4j	Markus_Kuhn_(computer_scientist)	46	57	/computer/computer_scientist,/people/person
The fonts originally covered only the ASCII repertoire, and were in the early 1990s extended to cover all characters in ISO 8859-1. In 1997, Markus Kuhn initiated and headed a project to extend the misc-fixed fonts to as large a subset of Unicode/ISO 10646 as is feasible for each of the available font sizes. This project's goal was to get GNU/Linux developers interested in abandoning the 1990s dominant ISO 8859-1 encoding, in favour of using UTF-8 instead, which happened indeed within a few years. Thanks to this effort, all the misc fixed fonts now cover the characters found in	In 1997, Markus Kuhn initiated and headed a project to extend the misc-fixed fonts to as large a subset of Unicode/ISO 10646 as is feasible for each of the available font sizes.	/m/044h4j	Markus_Kuhn_(computer_scientist)	9	20	/computer/computer_scientist,/people/person
The fonts are distributed in the BDF format and are currently maintained by Markus Kuhn.	The fonts are distributed in the BDF format and are currently maintained by Markus Kuhn.	/m/044h4j	Markus_Kuhn_(computer_scientist)	76	87	/computer/computer_scientist,/people/person
Similar information about the characters unification is given in Markus Kuhn's UTF-8 and Unicode FAQ for Unix/Linux	Similar information about the characters unification is given in Markus Kuhn's UTF-8 and Unicode FAQ for Unix/Linux	/m/044h4j	Markus_Kuhn_(computer_scientist)	65	76	/computer/computer_scientist,/people/person
OTPW is a one-time password system developed for authentication in Unix-like operating systems by Markus Kuhn. A user's real password is not directly transmitted across the network. Rather, the real password is combined with a short set of characters (constant secret) and a set of one-time tokens to form a single-use password. As the single-use password is only used once, passwords intercepted by a password sniffer or key logger are not useful to an attacker.	OTPW is a one-time password system developed for authentication in Unix-like operating systems by Markus Kuhn.	/m/044h4j	Markus_Kuhn_(computer_scientist)	98	109	/computer/computer_scientist,/people/person
The BBC's Newsnight programme investigated the ADE 651 in a report broadcast in January 2010, asking the University of Cambridge Computer Laboratory to assess one of the "programmed substance detection cards" used in the device to detect TNT. The laboratory found that the card contained only a standard radio frequency security tag of the type used in stores to prevent shoplifting. According to the laboratory's Dr. Markus Kuhn, it was "impossible" for the card to detect anything and it had "absolutely nothing to do with the detection of TNT". The card could not be programmed, had no memory, no microprocessor and no form of information could be stored on it. Despite the high cost of the devices, the cards were worth only about two to three pence (3‚Äì5¬¢) each. Kuhn commented: "These are the cheapest bit of electronics that you can get that look vaguely electronic and are sufficiently flat to fit inside a card." The "card reader" was found to be an empty plastic box. Psychology professor Bruce Hood has noted that the swinging of the antenna is merely due to its loose assembly and unconscious wrist movements by the user. Explosives expert Sidney Alford described the device as "immoral", telling Newsnight that "it could result in people being killed in the dozens, if not hundreds". Newsnight noted that thousands of people had indeed been killed and injured in devastating car bomb attacks in Baghdad such as the 25 October and 8 December 2009 Baghdad bombings, without the bombers being detected by the ADE 651 devices.	According to the laboratory's Dr. Markus Kuhn, it was "impossible" for the card to detect anything and it had "absolutely nothing to do with the detection of TNT".	/m/044h4j	Markus_Kuhn_(computer_scientist)	34	45	/computer/computer_scientist,/people/person
Efforts on the internationalization of Linux at the kernel level started as early as in 1994 by Markus Kuhn and Andries Brouwer.	Efforts on the internationalization of Linux at the kernel level started as early as in 1994 by Markus Kuhn and Andries Brouwer.	/m/044h4j	Markus_Kuhn_(computer_scientist)	96	107	/computer/computer_scientist,/people/person
Danes have made significant contributions to the field of computer science. Some notable figures include: Per Brinch Hansen, known for concurrent programming theory; Bjarne Stroustrup, who invented the C++ programming language; Janus Friis, the co-inventor of Skype; Jens and Lars Rasmussen, the co-founders of Google Maps; and Peter Naur, a contributor to ALGOL 60 and a recipient of the Turing Award	Some notable figures include: Per Brinch Hansen, known for concurrent programming theory; Bjarne Stroustrup, who invented the C++ programming language; Janus Friis, the co-inventor of Skype; Jens and Lars Rasmussen, the co-founders of Google Maps; and Peter Naur, a contributor to ALGOL 60 and a recipient of the Turing Award	/m/03jj8f	Per_Brinch_Hansen	30	47	/book/author,/people/deceased_person,/people/person
The RC 4000 is particularly famous for its operating system, developed by Per Brinch Hansen. Known simply as Monitor, it is the first real-world example of a system using an extremely simple kernel along with a variety of user-selected programs that built up the system as a whole. Today this concept is known as a microkernel, and efforts to correct for Monitor's poor performance formed the basis of most OS research through the 1970s and 1980s.	The RC 4000 is particularly famous for its operating system, developed by Per Brinch Hansen.	/m/03jj8f	Per_Brinch_Hansen	74	91	/book/author,/people/deceased_person,/people/person
Monitors were invented by C. A. R. Hoare  and Per Brinch Hansen,  and were first implemented in Brinch Hansen's Concurrent Pascal language.	Monitors were invented by C. A. R. Hoare  and Per Brinch Hansen,  and were first implemented in Brinch Hansen's Concurrent Pascal language.	/m/03jj8f	Per_Brinch_Hansen	46	63	/book/author,/people/deceased_person,/people/person
Monitors were invented by C. A. R. Hoare  and Per Brinch Hansen,  and were first implemented in Brinch Hansen's Concurrent Pascal language.	Monitors were invented by C. A. R. Hoare  and Per Brinch Hansen,  and were first implemented in Brinch Hansen's Concurrent Pascal language.	/m/03jj8f	Per_Brinch_Hansen	96	111	/book/author,/people/deceased_person,/people/person
The original proposals by C. A. R. Hoare and Per Brinch Hansen were for blocking condition variables. With a blocking condition variable, the signaling thread must wait outside the monitor (at least) until the signaled thread relinquishes occupancy of the monitor by either returning or by again waiting on a condition variable. Monitors using blocking condition variables are often called Hoare-style monitors or signal-and-urgent-wait monitors.	The original proposals by C. A. R. Hoare and Per Brinch Hansen were for blocking condition variables.	/m/03jj8f	Per_Brinch_Hansen	45	62	/book/author,/people/deceased_person,/people/person
C. A. R. Hoare and Per Brinch Hansen developed the idea of monitors around 1972, based on earlier ideas of their own and of E. W. Dijkstra. Brinch Hansen was the first to implement monitors. Hoare developed the theoretical framework and demonstrated their equivalence to semaphores.	C. A. R. Hoare and Per Brinch Hansen developed the idea of monitors around 1972, based on earlier ideas of their own and of E. W. Dijkstra.	/m/03jj8f	Per_Brinch_Hansen	19	36	/book/author,/people/deceased_person,/people/person
In the early 1960s, interrupts began to be used to simulate the concurrent execution of several programs on a single processor. Having concurrency with shared memory gave rise to the problem of concurrency control. Originally, this problem was conceived as being one of mutual exclusion on a single computer. Edsger Dijkstra developed semaphores and later, between 1971 and 1973, Tony Hoare and Per Brinch Hansen developed monitors to solve the mutual exclusion problem. However, neither of these solutions provided a programming-language construct that encapsulated access to shared resources. This encapsulation was later accomplished by the serializer construct ( and ).	Edsger Dijkstra developed semaphores and later, between 1971 and 1973, Tony Hoare and Per Brinch Hansen developed monitors to solve the mutual exclusion problem.	/m/03jj8f	Per_Brinch_Hansen	86	103	/book/author,/people/deceased_person,/people/person
Monitor was created largely by one programmer, Per Brinch Hansen, who worked at Regnecentralen where the RC 4000 was being designed. Leif Svalgaard participated in the implementation and testing of Monitor. Brinch Hansen found that no existing operating system was suited to the new machine, and was tired of having to adapt existing systems. He felt that a better solution was to build an underlying kernel, which he referred to as the nucleus, that could be used to build up an operating system from interacting programs. Unix, for instance, uses small interacting programs for many tasks, transferring data through a system known as pipes. However a large amount of fundamental code is buried in the kernel itself, notably things like file systems and program control. Monitor would remove this code as well, making almost the entire system a set of interacting programs, reducing the kernel (nucleus) to a communications and support system only.	Monitor was created largely by one programmer, Per Brinch Hansen, who worked at Regnecentralen where the RC 4000 was being designed.	/m/03jj8f	Per_Brinch_Hansen	47	64	/book/author,/people/deceased_person,/people/person
Semaphores implement task event queuing directly in the language, using the classical methods outlined by Per Brinch Hansen.	Semaphores implement task event queuing directly in the language, using the classical methods outlined by Per Brinch Hansen.	/m/03jj8f	Per_Brinch_Hansen	106	123	/book/author,/people/deceased_person,/people/person
Pioneers in the field of concurrent computing include Edsger Dijkstra, Per Brinch Hansen, and C.A.R. Hoare.	Pioneers in the field of concurrent computing include Edsger Dijkstra, Per Brinch Hansen, and C.A.R.	/m/03jj8f	Per_Brinch_Hansen	71	88	/book/author,/people/deceased_person,/people/person
Per Brinch Hansen argued in 1999 that Java's implementation of parallelism in general and monitors in particular do not provide the guarantees and enforcements required for secure and reliable parallel programming. While it is possible for a programmer to establish design and coding conventions to, say, only access thread-global variables in a controlled fashion, the language and compiler make no attempt to enforce that controlled access. I.e. the programmer may mistakenly allow uncontrolled access to thread-global variables, and the compiler will not detect it. In contrast, he claimed that Concurrent Pascal, the language he designed, enforced a much higher degree of rigor in the design and coding of parallel algorithms.	Per Brinch Hansen argued in 1999 that Java's implementation of parallelism in general and monitors in particular do not provide the guarantees and enforcements required for secure and reliable parallel programming.	/m/03jj8f	Per_Brinch_Hansen	0	17	/book/author,/people/deceased_person,/people/person
Concurrent Pascal (also known as PASCAL-FC) was designed by Per Brinch Hansen for writing concurrent computing programs such as operating systems and real-time monitoring systems on shared memory computers.	Concurrent Pascal (also known as PASCAL-FC) was designed by Per Brinch Hansen for writing concurrent computing programs such as operating systems and real-time monitoring systems on shared memory computers.	/m/03jj8f	Per_Brinch_Hansen	60	77	/book/author,/people/deceased_person,/people/person
Per Brinch Hansen presented arguments in favor of separation of mechanism and policy.	Per Brinch Hansen presented arguments in favor of separation of mechanism and policy.	/m/03jj8f	Per_Brinch_Hansen	0	17	/book/author,/people/deceased_person,/people/person
Per Brinch Hansen presented arguments in favor of separation of mechanism and policy. The failure to properly fulfill this separation, is one of the major causes of the lack of substantial innovation in existing operating systems, a problem common in computer architecture. The monolithic design is induced by the "kernel mode"/"user mode" architectural approach to protection (technically called hierarchical protection domains), which is common in conventional commercial systems; in fact, every module needing protection is therefore preferably included into the kernel. This link between monolithic design and "privileged mode" can be reconducted to the key issue of mechanism-policy separation; in fact the "privileged mode" architectural approach melts together the protection mechanism with the security policies, while the major alternative architectural approach, capability-based addressing, clearly distinguishes between the two, leading naturally to a microkernel design (see Separation of protection and security).	Per Brinch Hansen presented arguments in favor of separation of mechanism and policy.	/m/03jj8f	Per_Brinch_Hansen	0	17	/book/author,/people/deceased_person,/people/person
Joyce is a secure, concurrent programming language designed by Per Brinch Hansen in the 1980s. It is based on the sequential language Pascal and the principles of Communicating Sequential Processes (CSP). It was created to address the shortcomings of CSP to be applied itself as a programming language, and to povide a tool, primarily for teaching, for distributed system implementation.	Joyce is a secure, concurrent programming language designed by Per Brinch Hansen in the 1980s.	/m/03jj8f	Per_Brinch_Hansen	63	80	/book/author,/people/deceased_person,/people/person
Generally, their model demonstrated the truth in Mark Granovetter's observation that it is "the strength of weak ties" that holds together a social network. Although the specific model has since been generalized by Jon Kleinberg, it remains a canonical case study in the field of complex networks. In network theory, the idea presented in the small-world network model has been explored quite extensively. Indeed, several classic results in random graph theory show that even networks with no real topological structure exhibit the small-world phenomenon, which mathematically is expressed as the diameter of the network growing with the logarithm of the number of nodes (rather than proportional to the number of nodes, as in the case for a lattice). This result similarly maps onto networks with a power-law degree distribution, such as scale-free networks.	Although the specific model has since been generalized by Jon Kleinberg, it remains a canonical case study in the field of complex networks.	/m/04pqjz	Jon_Kleinberg	58	71	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Hyperlink-Induced Topic Search (HITS) (also known as hubs and authorities) is a link analysis algorithm that rates Web pages, developed by Jon Kleinberg. It was a precursor to PageRank. The idea behind Hubs and Authorities stemmed from a particular insight into the creation of web pages when the Internet was originally forming; that is, certain web pages, known as hubs, served as large directories that were not actually authoritative in the information that it held, but were used as compilations of a broad catalog of information that led users directly to other authoritative pages. In other words, a good hub represented a page that pointed to many other pages, and a good authority represented a page that was linked by many different hubs.	Hyperlink-Induced Topic Search (HITS) (also known as hubs and authorities) is a link analysis algorithm that rates Web pages, developed by Jon Kleinberg.	/m/04pqjz	Jon_Kleinberg	139	152	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Lanczos algorithms are very attractive because the multiplication by  is the only large-scale linear operation. Since weighted-term text retrieval engines implement just this operation, the Lanczos algorithm can be applied efficiently to text documents (see Latent Semantic Indexing). Eigenvectors are also important for large-scale ranking methods such as the HITS algorithm developed by Jon Kleinberg, or the PageRank algorithm used by Google.	Eigenvectors are also important for large-scale ranking methods such as the HITS algorithm developed by Jon Kleinberg, or the PageRank algorithm used by Google.	/m/04pqjz	Jon_Kleinberg	104	117	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Another of his graduate students, Mark Granovetter, studying how people got jobs, discovered they were more likely to get them through acquaintances than through friends. This, tied with earlier work by Stanley Milgram (who was also in the Harvard Department of Social Relations 1963-1967, though not one of White‚Äôs students), gave scientists a better sense of how the social world was organized: into dense groups with ‚Äúweak ties‚Äù between them. This line of research is still actively being pursued by Duncan Watts, Albert-L√°szl√≥ Barab√°si, Mark Newman, Jon Kleinberg and others.	This line of research is still actively being pursued by Duncan Watts, Albert-L√°szl√≥ Barab√°si, Mark Newman, Jon Kleinberg and others.	/m/04pqjz	Jon_Kleinberg	108	121	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
One solution in this case, is to impose some sort of artificial addressing on the nodes in such a way that this addressing can be effectively used by greedy routing methods. A 2005 paper by a developer of the Freenet Project discusses how this can be accomplished in friend to friend networks. Given the assumption that these networks exhibit small world properties, often as the result of real-world or acquaintance relationships, it should be possible to recover an embedded Kleinberg small-world graph. This is accomplished by selecting random pairs of nodes and potentially swapping them based on an objective function that minimizes the product of all the distances between any given node and its neighbors.	Given the assumption that these networks exhibit small world properties, often as the result of real-world or acquaintance relationships, it should be possible to recover an embedded Kleinberg small-world graph.	/m/04pqjz	Jon_Kleinberg	183	192	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The CLEVER project was a research project in Web search led by Jon Kleinberg at IBM's Almaden Research Center.	The CLEVER project was a research project in Web search led by Jon Kleinberg at IBM's Almaden Research Center.	/m/04pqjz	Jon_Kleinberg	63	76	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The contributors to The Princeton Companion to Mathematics consist of 133 of the world's best mathematicians. Timothy Gowers, its editor, is the recipient of the Fields Medal, considered to be the top honor in mathematics. Other contributors include Fields medalists Michael Atiyah, Alain Connes, Charles Fefferman, and Terence Tao, and well-known mathematicians Noga Alon, George Andrews, B√©la Bollob√°s, John P. Burgess, Clifford Cocks, Ingrid Daubechies, Persi Diaconis, Jordan Ellenberg, Oded Goldreich, Andrew Granville, Jeremy Gray, Frank Kelly, Sergiu Klainerman, Jon Kleinberg, J√°nos Koll√°r, Peter Lax, Dusa McDuff, Barry Mazur, Carl Pomerance, Eleanor Robson, Peter Sarnak, Madhu Sudan, Clifford Taubes, and Avi Wigderson.	Other contributors include Fields medalists Michael Atiyah, Alain Connes, Charles Fefferman, and Terence Tao, and well-known mathematicians Noga Alon, George Andrews, B√©la Bollob√°s, John P. Burgess, Clifford Cocks, Ingrid Daubechies, Persi Diaconis, Jordan Ellenberg, Oded Goldreich, Andrew Granville, Jeremy Gray, Frank Kelly, Sergiu Klainerman, Jon Kleinberg, J√°nos Koll√°r, Peter Lax, Dusa McDuff, Barry Mazur, Carl Pomerance, Eleanor Robson, Peter Sarnak, Madhu Sudan, Clifford Taubes, and Avi Wigderson.	/m/04pqjz	Jon_Kleinberg	347	360	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
As of 2011] contributors included Anthony Aguirre, Stephon Alexander, John Allen Paulos, Adam Alter, Alun Anderson, Ross Anderson, Samuel Arbesman, Mahzarin Banaji, Samuel Barondes, Thomas Bass, Sue Blackmore, Paul Bloom, Giulio Boccaletti, Stefano Boeri, Nick Bostrom, Stewart Brand, David Buss, William Calvin, Nicholas Carr, Joan Chiao, Nicholas Christakis, George M. Church, Andy Clark, Gregory Cochran, Alana Conner, James Croak, Fiery Cushman, Scott D. Sampson, W. Daniel Hillis, Satyajit Das, Richard Dawkins, Aubrey De Grey, Daniel Dennett, Emanuel Derman, Keith Devlin, Rolf Dobelli, George Dyson, David Eagleman, Brian Eno, Juan Enriquez, Dylan Evans, Christine Finn, Stuart Firestein, Helen Fisher, Susan Fiske, Tecumseh Fitch, Richard Foreman, Howard Gardner, Amanda Gefter, David Gelernter, Neil Gershenfeld, Gerd Gigerenzer, Marcelo Gleiser, Joel Gold, Nigel Goldenfeld, Rebecca Goldstein, Daniel Goleman, Beatrice Golomb, Alison Gopnik, Joshua Greene, Jonathan Haidt, Diane Halpern, Kevin Hand, Haim Harari, Sam Harris, Marti Hearst, Roger Highfield, Donald Hoffman, Gerald Holton, Bruce Hood, Nicholas Humphrey, Marco Iacoboni, Jennifer Jacquet, Xeni Jardin, Daniel Kahneman, Paul Kedrosky, Kevin Kelly, Douglas Kenrick, Christian Keysers, Vinod Khosla, Marcel Kinsbourne, Jon Kleinberg, Brian Knutson, Bart Kosko, Kai Krause, Lawrence Krauss, Andrian Kreye, Rob Kurzban, George Lakoff, Jaron Lanier, Jonah Lehrer, Garrett Lisi, Seth Lloyd, Tania Lombrozo, Stephen M. Kosslyn, Gary Marcus, Hazel Rose Markus, John McWhorter, Thomas Metzinger, Geoffrey Miller, Evgeny Morozov, P.Z. Myers, David Myers, Richard Nisbett, Tor Norretranders, Gloria Origgi, Neri Oxman, Carl Page, Mark Pagel, Greg Paul, Irene Pepperberg, Clifford Pickover, Steven Pinker, David Pizarro, Ernst P√∂ppel, Robert Provine, V.S. Ramachandran, Lisa Randall, Martin Rees, Andrew Revkin, Matt Ridley, Matthew Ritchie, Jay Rosen, Carlo Rovelli, David Rowan, Rudy Rucker, Douglas Rushkoff, Paul Saffo, Eduardo Salcedo-Albaran, Robert Sapolsky, Dimitar Sasselov, Richard Saul Wurman, Roger Schank, Kathryn Schulz, Gino Segre, Charles Seife, Terrence Sejnowski, Martin Seligman, Michael Shermer, Clay Shirky, Gerald Smallberg, Laurence C. Smith, Lee Smolin, Dan Sperber, Tom Standage, Victoria Stodden, Linda Stone, Nassim Taleb, Don Tapscott, Max Tegmark, Richard Thaler, John Tooby, Eric Topol, Hans Obrist, J. Craig Venter, Eric Weinstein, Frank Wilczek, Dave Winer, Milford Wolpoff, Carl Zimmer, Jason Zweig	As of 2011] contributors included Anthony Aguirre, Stephon Alexander, John Allen Paulos, Adam Alter, Alun Anderson, Ross Anderson, Samuel Arbesman, Mahzarin Banaji, Samuel Barondes, Thomas Bass, Sue Blackmore, Paul Bloom, Giulio Boccaletti, Stefano Boeri, Nick Bostrom, Stewart Brand, David Buss, William Calvin, Nicholas Carr, Joan Chiao, Nicholas Christakis, George M. Church, Andy Clark, Gregory Cochran, Alana Conner, James Croak, Fiery Cushman, Scott D. Sampson, W. Daniel Hillis, Satyajit Das, Richard Dawkins, Aubrey De Grey, Daniel Dennett, Emanuel Derman, Keith Devlin, Rolf Dobelli, George Dyson, David Eagleman, Brian Eno, Juan Enriquez, Dylan Evans, Christine Finn, Stuart Firestein, Helen Fisher, Susan Fiske, Tecumseh Fitch, Richard Foreman, Howard Gardner, Amanda Gefter, David Gelernter, Neil Gershenfeld, Gerd Gigerenzer, Marcelo Gleiser, Joel Gold, Nigel Goldenfeld, Rebecca Goldstein, Daniel Goleman, Beatrice Golomb, Alison Gopnik, Joshua Greene, Jonathan Haidt, Diane Halpern, Kevin Hand, Haim Harari, Sam Harris, Marti Hearst, Roger Highfield, Donald Hoffman, Gerald Holton, Bruce Hood, Nicholas Humphrey, Marco Iacoboni, Jennifer Jacquet, Xeni Jardin, Daniel Kahneman, Paul Kedrosky, Kevin Kelly, Douglas Kenrick, Christian Keysers, Vinod Khosla, Marcel Kinsbourne, Jon Kleinberg, Brian Knutson, Bart Kosko, Kai Krause, Lawrence Krauss, Andrian Kreye, Rob Kurzban, George Lakoff, Jaron Lanier, Jonah Lehrer, Garrett Lisi, Seth Lloyd, Tania Lombrozo, Stephen M. Kosslyn, Gary Marcus, Hazel Rose Markus, John McWhorter, Thomas Metzinger, Geoffrey Miller, Evgeny Morozov, P.Z.	/m/04pqjz	Jon_Kleinberg	1289	1302	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Other link-based ranking algorithms for Web pages include the HITS algorithm invented by Jon Kleinberg (used by Teoma and now Ask.com), the IBM CLEVER project, and the TrustRank algorithm.	Other link-based ranking algorithms for Web pages include the HITS algorithm invented by Jon Kleinberg (used by Teoma and now Ask.com), the IBM CLEVER project, and the TrustRank algorithm.	/m/04pqjz	Jon_Kleinberg	89	102	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
PageRank has been influenced by citation analysis, early developed by Eugene Garfield in the 1950s at the University of Pennsylvania, and by Hyper Search, developed by Massimo Marchiori at the University of Padua. In the same year PageRank was introduced (1998), Jon Kleinberg published his important work on HITS. Google's founders cite Garfield, Marchiori, and Kleinberg in their original paper.	In the same year PageRank was introduced (1998), Jon Kleinberg published his important work on HITS.	/m/04pqjz	Jon_Kleinberg	49	62	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He is the brother of fellow Cornell computer scientist Jon Kleinberg.	He is the brother of fellow Cornell computer scientist Jon Kleinberg.	/m/04pqjz	Jon_Kleinberg	55	68	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
His doctoral students include Wilfried Brauer and J√ºrgen Neukirch.	His doctoral students include Wilfried Brauer and J√ºrgen Neukirch.	/m/05zxd9l	Wilfried_Brauer	30	45	/people/person
An early step in the history of computer animation was the sequel to the 1973 movie Westworld, a science-fiction film about a society in which robots live and work among humans. The sequel, Futureworld (1976), used 3D Wire-frame imagery which featured a computer-generated hand and face created by University of Utah graduates Edwin Catmull and Fred Parke. This imagery had originally appeared in their student film A Computer Animated Hand, which they completed in 1971.	The sequel, Futureworld (1976), used 3D Wire-frame imagery which featured a computer-generated hand and face created by University of Utah graduates Edwin Catmull and Fred Parke.	/m/017h4c	Edwin_Catmull	149	162	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Notable entrepreneurs and business leaders alumni include Alan Ashton, co-founder of WordPerfect and Thanksgiving Point; Nolan Bushnell, founder of Atari and Chuck E. Cheese; Ed Catmull, co-founder of Pixar; J. Willard Marriott, founder of Marriott International; Robert A. "Bob" McDonald, CEO of Procter & Gamble; and David Neeleman, founder of JetBlue.	Notable entrepreneurs and business leaders alumni include Alan Ashton, co-founder of WordPerfect and Thanksgiving Point; Nolan Bushnell, founder of Atari and Chuck E. Cheese; Ed Catmull, co-founder of Pixar; J. Willard Marriott, founder of Marriott International; Robert A.	/m/017h4c	Edwin_Catmull	175	185	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Toy Story is a 1995 American computer-animated family buddy comedy film produced by Pixar Animation Studios and directed by John Lasseter. Released by Walt Disney Pictures, Toy Story was the first feature-length computer-animated film and the first film produced by Pixar. Toy Story follows a group of anthropomorphic toys who pretend to be lifeless whenever humans are present, and focuses on the relationship between Woody, a pullstring cowboy doll (Tom Hanks), and Buzz Lightyear, an astronaut action figure (Tim Allen). The film was written by John Lasseter, Andrew Stanton, Joel Cohen, Alec Sokolow, and Joss Whedon, and featured music by Randy Newman. Its executive producer was Steve Jobs with Edwin Catmull.	Its executive producer was Steve Jobs with Edwin Catmull.	/m/017h4c	Edwin_Catmull	43	56	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
From 1968 to 1974, Sutherland was a professor at the University of Utah. Among his students there were Alan Kay, inventor of the Smalltalk language, Henri Gouraud who devised the Gouraud shading technique, Frank Crow, who went on to develop antialiasing methods, and Edwin Catmull, computer graphics scientist, co-founder of Pixar and now President of Walt Disney and Pixar Animation Studios.	Among his students there were Alan Kay, inventor of the Smalltalk language, Henri Gouraud who devised the Gouraud shading technique, Frank Crow, who went on to develop antialiasing methods, and Edwin Catmull, computer graphics scientist, co-founder of Pixar and now President of Walt Disney and Pixar Animation Studios.	/m/017h4c	Edwin_Catmull	194	207	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Pixar was founded as The Graphics Group, which was one third of the Computer Division of Lucasfilm that was launched in 1979 with the hiring of Dr. Ed Catmull from the New York Institute of Technology (NYIT), where he was in charge of the Computer Graphics Lab (CGL). At NYIT, the researchers pioneered many of the CG foundation techniques‚Äîin particular the invention of the "alpha channel" (by Catmull and Alvy Ray Smith); years later the CGL produced an experimental film called The Works. After moving to Lucasfilm, the team worked on creating the precursor to RenderMan, called REYES (for "renders everything you ever saw"); and developed a number of critical technologies for CG‚Äîincluding "particle effects" and various animation tools.	Pixar was founded as The Graphics Group, which was one third of the Computer Division of Lucasfilm that was launched in 1979 with the hiring of Dr. Ed Catmull from the New York Institute of Technology (NYIT), where he was in charge of the Computer Graphics Lab (CGL).	/m/017h4c	Edwin_Catmull	144	158	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Catmull‚ÄìClark subdivision surface, a 3D modelling technique he invented in collaboration with Edwin Catmull	Catmull‚ÄìClark subdivision surface, a 3D modelling technique he invented in collaboration with Edwin Catmull	/m/017h4c	Edwin_Catmull	94	107	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Texture mapping is a method for adding detail, surface texture (a bitmap or raster image), or color to a computer-generated graphic or 3D model. Its application to 3D graphics was pioneered by Edwin Catmull in 1974.	Its application to 3D graphics was pioneered by Edwin Catmull in 1974.	/m/017h4c	Edwin_Catmull	48	61	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The invention of the z-buffer concept is most often attributed to Edwin Catmull, although Wolfgang Stra√üer also described this idea in his 1974 Ph.D. thesis1.	The invention of the z-buffer concept is most often attributed to Edwin Catmull, although Wolfgang Stra√üer also described this idea in his 1974 Ph.D. thesis1.	/m/017h4c	Edwin_Catmull	66	79	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
RGBA stands for red green blue alpha. While it is sometimes described as a color space, it is actually simply a use of the RGB color model, with extra information. The color is RGB, and may belong to any RGB color space, but an integral alpha value as invented by Catmull and Smith between 1971 and 1972 enables alpha compositing. The inventors named alpha after the Greek letter in the classic linear interpolation formula Œ±A + (1-Œ±)B.	The color is RGB, and may belong to any RGB color space, but an integral alpha value as invented by Catmull and Smith between 1971 and 1972 enables alpha compositing.	/m/017h4c	Edwin_Catmull	100	107	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The animators also employed subsurface scattering‚Äîdeveloped by Pixar co-founder Edwin Catmull during his graduate student days at the University of Utah in the 1970s‚Äîto render surfaces more lifelike. This would be the first time that subsurface scattering would be used in a Pixar film, and a small team at Pixar worked out the practical problems that kept it from working in animation. Catmull asked for a short film to test and showcase subsurface scattering and the result, Geri's Game (1997), was attached alongside A Bug's Life in its theatrical release.	The animators also employed subsurface scattering‚Äîdeveloped by Pixar co-founder Edwin Catmull during his graduate student days at the University of Utah in the 1970s‚Äîto render surfaces more lifelike.	/m/017h4c	Edwin_Catmull	80	93	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The curve is named after Edwin Catmull and Raphael Rom. In computer graphics, Catmull‚ÄìRom splines are frequently used to get smooth interpolated motion between key frames. For example, most camera path animations generated from discrete key-frames are handled using Catmull‚ÄìRom splines. They are popular mainly for being relatively easy to compute, guaranteeing that each key frame position will be hit exactly, and also guaranteeing that the tangents of the generated curve are continuous over multiple segments.	The curve is named after Edwin Catmull and Raphael Rom.	/m/017h4c	Edwin_Catmull	25	38	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
NYIT was a pioneer in 3-D computer animation. Before Pixar and Lucasfilm, there was NYIT‚Äôs Computer Graphics Lab (CGL). In 1974, NYIT‚Äôs Computer Graphics Lab (CGL) was established and attracted the likes of: Pixar Animation Studios President Edwin Catmull and co-founder Alvy Ray Smith; Walt Disney Feature Animation Chief Scientist Lance Joseph Williams; DreamWorks animator Hank Grebe; and Netscape and Silicon Graphics founder Jim Clark.	In 1974, NYIT‚Äôs Computer Graphics Lab (CGL) was established and attracted the likes of: Pixar Animation Studios President Edwin Catmull and co-founder Alvy Ray Smith; Walt Disney Feature Animation Chief Scientist Lance Joseph Williams; DreamWorks animator Hank Grebe; and Netscape and Silicon Graphics founder Jim Clark.	/m/017h4c	Edwin_Catmull	122	135	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Luxo Jr. is a 1986 American computer-animated short film produced by Pixar and directed by John Lasseter. The short film, which runs two minutes, revolves around two desk lamps: a larger lamp and a smaller lamp. The larger lamp watches while the smaller, "younger" lamp plays exuberantly with a ball but doesn't pick up the knack of correct handling. It was Pixar's first animation after Ed Catmull and John Lasseter left Industrial Light and Magic's computer division. It is the source of the small hopping desk lamp included in Pixar's corporate logo.	It was Pixar's first animation after Ed Catmull and John Lasseter left Industrial Light and Magic's computer division.	/m/017h4c	Edwin_Catmull	37	47	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The proposed algorithm envisions a tree data structure which encodes in its arcs both transformations and transitions to more detailed objects. In this way, each node encodes an object and according to a fast heuristic, the tree is descended to the leafs which provide each object with more detail. When a leaf is reached, other methods could be used when higher detail is needed, such as Catmull's recursive subdivision.	When a leaf is reached, other methods could be used when higher detail is needed, such as Catmull's recursive subdivision.	/m/017h4c	Edwin_Catmull	90	97	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In January 2006, Disney bought Pixar in a deal that put Pixar chiefs Edwin Catmull and John Lasseter in charge of all Disney Animation. Shortly thereafter, Circle 7 Animation was shut down and its version of Toy Story 3 was cancelled. The character designs went into the Disney archives. The following month, Disney CEO Robert Iger confirmed that Disney was in the process of transferring the production to Pixar. John Lasseter, Andrew Stanton, Pete Docter, and Lee Unkrich visited the house where they first pitched Toy Story and came up with the story for the film over a weekend. Stanton then wrote a treatment. On February 8, 2007, Catmull announced Toy Story 2's co-director, Lee Unkrich, as the sole director of the film instead of John Lasseter (who was busy directing Cars 2), and Michael Arndt as screenwriter. The release date was moved to 2010. Unkrich said that he felt pressure to avoid creating "the first dud" for Pixar, since as of 2010 all of Pixar's films had been critical and commercial successes.	In January 2006, Disney bought Pixar in a deal that put Pixar chiefs Edwin Catmull and John Lasseter in charge of all Disney Animation.	/m/017h4c	Edwin_Catmull	69	82	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In 2006, Pixar executives Edwin Catmull and John Lasseter assumed the studio as President and Chief Creative Officer, respectively. Since the release of Meet the Robinsons the following year, the studio has had a new logo to make themselves separate from Pixar. The logo features the iconic image of Mickey Mouse in the classic short, Steamboat Willie. Their 53rd feature, Frozen, is currently in post-production and set for release on November 27, 2013. Their 54th, Big Hero 6, is currently in development and set for release on November 7, 2014.	In 2006, Pixar executives Edwin Catmull and John Lasseter assumed the studio as President and Chief Creative Officer, respectively.	/m/017h4c	Edwin_Catmull	26	39	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The transition to CGI was not enough to renew interest in Disney animation, as Walt Disney Feature Animation features were routinely outperformed by those of corporate partner Pixar, who The Walt Disney Company had originally contracted to create CGI films. In response to this, Disney purchased Pixar in 2006. On March 21, 2006, Circle 7 was shut down, and 80% of the studios employees was transferred to Walt Disney Feature Animation. Walt Disney Feature Animation was renamed Walt Disney Animation Studios, and as part of the acquisition, Pixar and Walt Disney Animation Studios continue to maintain separate studios and release their films under separate banners, with former Pixar executives Edwin Catmull and John Lasseter serving as both studios' president and Chief Creative Officer, respectively.	Walt Disney Feature Animation was renamed Walt Disney Animation Studios, and as part of the acquisition, Pixar and Walt Disney Animation Studios continue to maintain separate studios and release their films under separate banners, with former Pixar executives Edwin Catmull and John Lasseter serving as both studios' president and Chief Creative Officer, respectively.	/m/017h4c	Edwin_Catmull	260	273	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The Catmull‚ÄìClark algorithm is used in computer graphics to create smooth surfaces by subdivision surface modeling. It was devised by Edwin Catmull and Jim Clark in 1978 as a generalization of bi-cubic uniform B-spline surfaces to arbitrary topology. In 2005, Edwin Catmull received an Academy Award for Technical Achievement together with Tony DeRose and Jos Stam for their invention and application of subdivision surfaces.	It was devised by Edwin Catmull and Jim Clark in 1978 as a generalization of bi-cubic uniform B-spline surfaces to arbitrary topology.	/m/017h4c	Edwin_Catmull	18	31	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The Catmull‚ÄìClark algorithm is used in computer graphics to create smooth surfaces by subdivision surface modeling. It was devised by Edwin Catmull and Jim Clark in 1978 as a generalization of bi-cubic uniform B-spline surfaces to arbitrary topology. In 2005, Edwin Catmull received an Academy Award for Technical Achievement together with Tony DeRose and Jos Stam for their invention and application of subdivision surfaces.	In 2005, Edwin Catmull received an Academy Award for Technical Achievement together with Tony DeRose and Jos Stam for their invention and application of subdivision surfaces.	/m/017h4c	Edwin_Catmull	9	22	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In 1965, the University of Utah recruited him back to start their own computer science department. When he was building up the University of Utah department in 1968 he managed to convince Ivan Sutherland (who had funded Evans' DARPA research) to come to Utah, accepting the condition that they start a computer graphics company together. Evans retired from the company in 1994. Students at Utah included Alan Kay, Edwin Catmull, James H. Clark, John Warnock, and Alan Ashton.	Students at Utah included Alan Kay, Edwin Catmull, James H. Clark, John Warnock, and Alan Ashton.	/m/017h4c	Edwin_Catmull	36	49	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Alan Ashton
Duane Call
Edwin Catmull
James H. Clark
Henri Gouraud
Alan Kay
Bui Tuong Phong	Alan Ashton
Duane Call
Edwin Catmull
James H. Clark
Henri Gouraud
Alan Kay
Bui Tuong Phong	/m/017h4c	Edwin_Catmull	23	36	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In 2007, Pixar executives Edwin Catmull and John Lasseter assumed the studio as President and Chief Creative Officer, respectively. Since the release of Tinker Bell the following year, the studio began to focus on the production of spin-offs of both Disney and Pixar films, rather than direct-to-video sequels. Their 61st feature, Planes, is currently in production and set for release on August 9, 2013.	In 2007, Pixar executives Edwin Catmull and John Lasseter assumed the studio as President and Chief Creative Officer, respectively.	/m/017h4c	Edwin_Catmull	26	39	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Precursor work in texture mapping had been established by Edwin Catmull, with refinements for curved surfaces by James Blinn, in 1974.  Blinn went on to further refine his work, developing environment mapping by 1976.	Precursor work in texture mapping had been established by Edwin Catmull, with refinements for curved surfaces by James Blinn, in 1974.	/m/017h4c	Edwin_Catmull	58	71	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Alvy Ray Smith (born 8 September 1943) is a noted pioneer in computer graphics. He is cofounder, with Edwin Catmull, of the animation studio Pixar, financed by Steve Jobs.	He is cofounder, with Edwin Catmull, of the animation studio Pixar, financed by Steve Jobs.	/m/017h4c	Edwin_Catmull	22	35	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
With Ed Catmull, Smith was a founding member of the Lucasfilm Computer Division, which developed computer graphics software, including early renderer technology. While there, as Director of the Computer Graphics Project, he created and directed the "Genesis Demo" in The Wrath of Khan, and conceived and directed the short animated film The Adventures of Andre and Wally B., starring the animator John Lasseter for the first time.	With Ed Catmull, Smith was a founding member of the Lucasfilm Computer Division, which developed computer graphics software, including early renderer technology.	/m/017h4c	Edwin_Catmull	5	15	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
He and Ed Catmull co-founded Pixar on 3 Feb. 1986. After the spinout from Lucasfilm of Pixar, funded by Steve Jobs, he served on the Board of Directors and was Executive Vice President. According to the Steve Jobs biography iCon by Jeffrey S. Young and William L. Simon, Alvy Ray quit Pixar after a heated argument with Jobs over use of a whiteboard. See also Isaacson. Despite being the co-founder of Pixar, Young and Simon claim that the company has largely overlooked his part in company history since his departure. For example, there is no mention of Smith on the Pixar website.	He and Ed Catmull co-founded Pixar on 3 Feb. 1986.	/m/017h4c	Edwin_Catmull	7	17	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Futureworld was the first major feature film to use 3D computer-generated imagery (CGI). CGI was used for an animated hand and face. The animated hand was a digitized version of Edwin Catmull's left hand, taken from his 1971 experimental short subject A Computer Animated Hand. The film also used 2D digital compositing to materialize characters over a background.	The animated hand was a digitized version of Edwin Catmull's left hand, taken from his 1971 experimental short subject A Computer Animated Hand.	/m/017h4c	Edwin_Catmull	45	60	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Jim Blinn first introduced the idea of normal mapping in a 1978 SIGGRAPH paper. Blinn pointed out that the earlier idea of unlit texture mapping proposed by Edwin Catmull was unrealistic for simulating rough surfaces. Instead of mapping a texture onto an object to simulate roughness, Blinn proposed a method of calculating the degree of lighting a point on a surface should receive based on an established "perturbation" of the normals across the surface.	Blinn pointed out that the earlier idea of unlit texture mapping proposed by Edwin Catmull was unrealistic for simulating rough surfaces.	/m/017h4c	Edwin_Catmull	77	90	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Ingebretsen worked with Pixar co-founder Ed Catmull in 1972 to produce one of the first digital films, a 20-second portrait of a human hand.	Ingebretsen worked with Pixar co-founder Ed Catmull in 1972 to produce one of the first digital films, a 20-second portrait of a human hand.	/m/017h4c	Edwin_Catmull	41	51	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
However, after Disney's acquisition of Pixar in early 2006, the studio has rekindled interest towards 2-D animation thanks to new leaders John Lasseter and Edwin Catmull. A new 2-D animated feature, The Princess and the Frog was released in 2009, with Musker and Clements directing and Randy Newman handling the music. The film returns to the Broadway-style musical of Aladdin, The Little Mermaid and other successful Disney animated films of the late '80s and early '90s.	However, after Disney's acquisition of Pixar in early 2006, the studio has rekindled interest towards 2-D animation thanks to new leaders John Lasseter and Edwin Catmull.	/m/017h4c	Edwin_Catmull	156	169	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Disney had once announced that 2004's Home on the Range would be their feature animation studio's last traditionally animated production. After the company's acquisition of Pixar in early 2006, Ed Catmull and John Lasseter, the new president and chief creative officer of Disney Animation Studios, reversed this decision and reinstated hand-drawn animation at the studio. Many animators who had either been laid off or had left the studio when the traditional animation units were dissolved in 2003 were located and re-hired for the project.	After the company's acquisition of Pixar in early 2006, Ed Catmull and John Lasseter, the new president and chief creative officer of Disney Animation Studios, reversed this decision and reinstated hand-drawn animation at the studio.	/m/017h4c	Edwin_Catmull	56	66	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
However, after Disney's acquisition of Pixar in early 2006, the studio has rekindled interest towards 2-D animation thanks to new leaders John Lasseter and Edwin Catmull. A new 2-D animated feature, The Princess and the Frog, was released in 2009, with Musker and Clements directing and Randy Newman handling the music. The film returns to the Broadway-style musical, like Aladdin, The Little Mermaid and other successful Disney animated films of the late 1980s and early 1990s.	However, after Disney's acquisition of Pixar in early 2006, the studio has rekindled interest towards 2-D animation thanks to new leaders John Lasseter and Edwin Catmull.	/m/017h4c	Edwin_Catmull	156	169	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Also dedicating its homepage to Jobs was Pixar, with a photo of Jobs, John Lasseter and Edwin Catmull, and the eulogy they wrote:	Also dedicating its homepage to Jobs was Pixar, with a photo of Jobs, John Lasseter and Edwin Catmull, and the eulogy they wrote:	/m/017h4c	Edwin_Catmull	88	101	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In 1997, Foley was recognized by ACM SIGGRAPH with the prestigious Steven A. Coons Award. The receipt of this biannual award places Foley among the company of computer graphics pioneers such as Jim Blinn, Edwin Catmull and Ivan Sutherland.	The receipt of this biannual award places Foley among the company of computer graphics pioneers such as Jim Blinn, Edwin Catmull and Ivan Sutherland.	/m/017h4c	Edwin_Catmull	115	128	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The CGL's roster was a digital dream team. Prominent members included future Pixar Animation Studios President Edwin Catmull and co-founder Alvy Ray Smith; Walt Disney Feature Animation Chief Scientist Lance Joseph Williams; DreamWorks animator Hank Grebe; Computer Media Artist Rebecca Allen and Netscape and Silicon Graphics founder Jim Clark.	Prominent members included future Pixar Animation Studios President Edwin Catmull and co-founder Alvy Ray Smith; Walt Disney Feature Animation Chief Scientist Lance Joseph Williams; DreamWorks animator Hank Grebe; Computer Media Artist Rebecca Allen and Netscape and Silicon Graphics founder Jim Clark.	/m/017h4c	Edwin_Catmull	68	81	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
William Fetter was credited with coining the term computer graphics in 1961 to describe his work at Boeing. One of the first displays of computer animation was Futureworld (1976), which included an animation of a human face and a hand‚Äîproduced by Ed Catmull and Fred Parke at the University of California.	One of the first displays of computer animation was Futureworld (1976), which included an animation of a human face and a hand‚Äîproduced by Ed Catmull and Fred Parke at the University of California.	/m/017h4c	Edwin_Catmull	139	149	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Schure found the progress on the new Tubby was very slow, hindered by the tedious frame-by-frame process occasionally encountered in the hand-drawn art. In response, he turned to an interest in the then-young field of computer graphics, and recruited several consultants and scientists from NYIT so that the project could go on. Two of the later crew members were Edwin Catmull and Alvy Ray Smith, the future founders of Pixar Studios.	Two of the later crew members were Edwin Catmull and Alvy Ray Smith, the future founders of Pixar Studios.	/m/017h4c	Edwin_Catmull	35	48	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
One of the first displays of computer animation was Futureworld (1976), which included an animation of a human face and hand ‚Äî produced by Ed Catmull and Fred Parke at the University of Utah.	One of the first displays of computer animation was Futureworld (1976), which included an animation of a human face and hand ‚Äî produced by Ed Catmull and Fred Parke at the University of Utah.	/m/017h4c	Edwin_Catmull	139	149	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Many of the most important early breakthroughs in computer graphics research occurred at the University of Utah in the 1970s. A student by the name of Edwin Catmull started at the University of Utah in 1970 and signed up for Sutherland's computer graphics class. Catmull had just come from The Boeing Company and had been working on his degree in physics. Growing up on Disney, Catmull loved animation yet quickly discovered that he did not have the talent for drawing. Now Catmull (along with many others) saw computers as the natural progression of animation and they wanted to be part of the revolution. The first animation that Catmull saw was his own. He created an animation of his hand opening and closing. It became one of his goals to produce a feature length motion picture using computer graphics. In the same class, Fred Parke created an animation of his wife's face. Because of Evan's and Sutherland's presence, UU was gaining quite a reputation as the place to be for computer graphics research so Catmull went there to learn 3D animation.	A student by the name of Edwin Catmull started at the University of Utah in 1970 and signed up for Sutherland's computer graphics class.	/m/017h4c	Edwin_Catmull	25	38	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Schure was also an early and decisive champion of computer animation. For almost five years, NYIT gave research funding and a home to the brain trust that would evolve into Pixar Animation Studios. In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab. (Later, in the 1980s, Catmull would team with John Lasseter to form Pixar.) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab.	/m/017h4c	Edwin_Catmull	76	89	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Schure was also an early and decisive champion of computer animation. For almost five years, NYIT gave research funding and a home to the brain trust that would evolve into Pixar Animation Studios. In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab. (Later, in the 1980s, Catmull would team with John Lasseter to form Pixar.) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	/m/017h4c	Edwin_Catmull	63	76	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Schure was also an early and decisive champion of computer animation. For almost five years, NYIT gave research funding and a home to the brain trust that would evolve into Pixar Animation Studios. In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab. (Later, in the 1980s, Catmull would team with John Lasseter to form Pixar.) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab.	/m/017h4c	Edwin_Catmull	76	89	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
Schure was also an early and decisive champion of computer animation. For almost five years, NYIT gave research funding and a home to the brain trust that would evolve into Pixar Animation Studios. In November, 1974, Schure hired recent University of Utah doctoral graduate Edwin Catmull to direct NYIT's fledgling computer graphics lab. (Later, in the 1980s, Catmull would team with John Lasseter to form Pixar.) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	) The core technical team included computer animation pioneers Edwin Catmull, Alvy Ray Smith, David DiFrancesco, Ralph Guggenheim, Jim Blinn, and Jim Clark.	/m/017h4c	Edwin_Catmull	63	76	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
In 1968, Ivan Sutherland teamed up with David Evans to found the company Evans & Sutherland‚Äîboth were professors in the Computer Science Department at the University of Utah, and the company was formed to produce new hardware designed to run the systems being developed in the University. Many such algorithms have later resulted in the generation of significant hardware implementation, including the Geometry Engine, the Head-mounted display, the Frame buffer, and Flight simulators. Most of the employees were active or former students, and included Jim Clark, who started Silicon Graphics in 1981, Ed Catmull, co-founder of Pixar in 1979, and John Warnock of Adobe Systems in 1982.	Most of the employees were active or former students, and included Jim Clark, who started Silicon Graphics in 1981, Ed Catmull, co-founder of Pixar in 1979, and John Warnock of Adobe Systems in 1982.	/m/017h4c	Edwin_Catmull	116	126	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
The first use of 3-D wireframe imagery in mainstream cinema was in the sequel to Westworld, Futureworld (1976), directed by Richard T. Heffron. This featured a computer-generated hand and face created by then University of Utah graduate students Edwin Catmull and Fred Parke which had initially appeared in their 1971 experimental short A Computer Animated Hand. The third movie to use this technology was Star Wars (1977), written and directed by George Lucas, with wireframe imagery in the scenes with the Death Star plans, the targeting computers in the X-wing fighters, and the Millennium Falcon spacecraft.	This featured a computer-generated hand and face created by then University of Utah graduate students Edwin Catmull and Fred Parke which had initially appeared in their 1971 experimental short A Computer Animated Hand.	/m/017h4c	Edwin_Catmull	102	115	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
A Computer Animated Hand is a 1972 American computer-animated film produced by Edwin Catmull and Fred Parke. Produced during Catmull's tenure at the University of Utah, the short was created for a graduate course project. After creating a model of Catmull's left hand, 350 triangles and polygons were drawn in ink on the model. The model was digitized and laboriously animated in a three dimensional animation program that Catmull wrote.	A Computer Animated Hand is a 1972 American computer-animated film produced by Edwin Catmull and Fred Parke.	/m/017h4c	Edwin_Catmull	79	92	/award/award_winner,/computer/computer_scientist,/education/academic,/film/actor,/film/director,/film/editor,/film/person_or_entity_appearing_in_film,/film/producer,/influence/influence_node,/organization/organization_founder,/people/person
XML is described as being generally parsable like a two-level grammar for non-validated XML and a Conway-style pipeline of coroutines (lexer, parser, validator) for valid XML. The SGML productions in the ISO standard are reported to be LL(3) or LL(4). XML-class subsets are reported to be expressible using a W-grammar. According to one paper, and probably considered at an information set or parse tree level rather than a character or delimiter level:	XML is described as being generally parsable like a two-level grammar for non-validated XML and a Conway-style pipeline of coroutines (lexer, parser, validator) for valid XML.	/m/070x90	Melvin_Conway	98	104	/computer/computer_scientist,/people/person
The term coroutine was originated by Melvin Conway in a 1963 paper.	The term coroutine was originated by Melvin Conway in a 1963 paper.	/m/070x90	Melvin_Conway	37	50	/computer/computer_scientist,/people/person
UNCOL (Universal Computer Oriented Language) was a proposed universal intermediate language for compilers introduced by Melvin E. Conway in 1958. It was never fully specified or implemented; in many ways it was more a concept than a language.	UNCOL (Universal Computer Oriented Language) was a proposed universal intermediate language for compilers introduced by Melvin E. Conway in 1958.	/m/070x90	Melvin_Conway	120	136	/computer/computer_scientist,/people/person
Conway's law is an adage named after computer programmer Melvin Conway, who introduced the idea in 1968. It states that "organizations which design systems ... are constrained to produce designs which are copies of the communication structures of these organizations".	Conway's law is an adage named after computer programmer Melvin Conway, who introduced the idea in 1968.	/m/070x90	Melvin_Conway	57	70	/computer/computer_scientist,/people/person
FBP at its inception was strongly influenced by some IBM simulation languages of the period, in particular GPSS, but its roots go all the way back to Conway's seminal paper on what he called coroutines.	FBP at its inception was strongly influenced by some IBM simulation languages of the period, in particular GPSS, but its roots go all the way back to Conway's seminal paper on what he called coroutines.	/m/070x90	Melvin_Conway	150	156	/computer/computer_scientist,/people/person
At the coarse level of collision detection, the objective is to find pairs of objects which might potentially intersect. Those pairs will require further analysis. An early high performance algorithm for this was developed by Ming C. Lin at the University of California, Berkeley , who suggested using axis-aligned bounding boxes for all n bodies in the scene.	An early high performance algorithm for this was developed by Ming C. Lin at the University of California, Berkeley , who suggested using axis-aligned bounding boxes for all n bodies in the scene.	/m/0b6ggqb	Ming_C._Lin	62	73	/education/academic,/people/person
Better methods have since been developed. Very fast algorithms are available for finding the closest points on the surface of two convex polyhedral objects. Early work by Ming C. Lin used a variation on the simplex algorithm from linear programming. The Gilbert-Johnson-Keerthi distance algorithm has superseded that approach. These algorithms approach constant time when applied repeatedly to pairs of stationary or slow-moving objects, when used with starting points from the previous collision check.	Early work by Ming C. Lin used a variation on the simplex algorithm from linear programming.	/m/0b6ggqb	Ming_C._Lin	14	25	/education/academic,/people/person
Manocha has supervised 45 MS and Ph.D. students. He is married to his frequent collaborator and UNC faculty colleague, Ming C. Lin; she was hired at UNC in the same year, 1997, that Manocha was tenured there.	He is married to his frequent collaborator and UNC faculty colleague, Ming C. Lin; she was hired at UNC in the same year, 1997, that Manocha was tenured there.	/m/0b6ggqb	Ming_C._Lin	70	81	/education/academic,/people/person
Jim Spohrer, Stephanie Houde, Alan Peterson, Matthew MacLaurin, David Canfield Smith, Allen Cypher, Mikel Evins, Don Tillman, Steve Seitz, and Royston Sellman provided design ideas and/or code.	Jim Spohrer, Stephanie Houde, Alan Peterson, Matthew MacLaurin, David Canfield Smith, Allen Cypher, Mikel Evins, Don Tillman, Steve Seitz, and Royston Sellman provided design ideas and/or code.	/m/0gxz79q	Jim_Spohrer	0	11	/people/person
Larry Tesler, Jim Spohrer, Mark Miller, Steve Weyer, and David Nagel sponsored and shepherded the project through both tumultuous and tranquil times at Apple.	Larry Tesler, Jim Spohrer, Mark Miller, Steve Weyer, and David Nagel sponsored and shepherded the project through both tumultuous and tranquil times at Apple.	/m/0gxz79q	Jim_Spohrer	14	25	/people/person
David Ing was early in the development of research into service science, management and engineering, due to his affiliation with Jim Spohrer since the ISSS 2005 Cancun meeting, and through communities internal to IBM.	David Ing was early in the development of research into service science, management and engineering, due to his affiliation with Jim Spohrer since the ISSS 2005 Cancun meeting, and through communities internal to IBM.	/m/0gxz79q	Jim_Spohrer	129	140	/people/person
The Chase has its origins in two seminal papers, one by David Maier, Alberto O. Mendelzon, and Yehoshua Sagiv and the other by Alfred V. Aho, Catriel Beeri, and Jeffrey D. Ullman.	The Chase has its origins in two seminal papers, one by David Maier, Alberto O. Mendelzon, and Yehoshua Sagiv and the other by Alfred V. Aho, Catriel Beeri, and Jeffrey D. Ullman.	/m/04jmyw3	Yehoshua_Sagiv	95	109	/people/person
Notable science and engineering alumni include Jim Blinn; Jim Clark, founder of Silicon Graphics, Netscape Communications Corporation, myCFO, and Healtheon; Henri Gouraud; John C. Cook who played a crucial role in establishing the field of ground-penetrating radar; Ralph Hartley; Alan Kay; Simon Ramo; and John Warnock, co-founder of Adobe Systems.	Notable science and engineering alumni include Jim Blinn; Jim Clark, founder of Silicon Graphics, Netscape Communications Corporation, myCFO, and Healtheon; Henri Gouraud; John C. Cook who played a crucial role in establishing the field of ground-penetrating radar; Ralph Hartley; Alan Kay; Simon Ramo; and John Warnock, co-founder of Adobe Systems.	/m/01sqpc	Henri_Gouraud_(computer_scientist)	157	170	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Gouraud shading, named after Henri Gouraud, is an interpolation method used in computer graphics to produce continuous shading of surfaces represented by polygon meshes. In practice, Gouraud shading is most often used to achieve continuous lighting on triangle surfaces by computing the lighting at the corners of each triangle and linearly interpolating the resulting colours for each pixel covered by the triangle. Gouraud first published the technique in 1971.	Gouraud shading, named after Henri Gouraud, is an interpolation method used in computer graphics to produce continuous shading of surfaces represented by polygon meshes.	/m/01sqpc	Henri_Gouraud_(computer_scientist)	29	42	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
From 1968 to 1974, Sutherland was a professor at the University of Utah. Among his students there were Alan Kay, inventor of the Smalltalk language, Henri Gouraud who devised the Gouraud shading technique, Frank Crow, who went on to develop antialiasing methods, and Edwin Catmull, computer graphics scientist, co-founder of Pixar and now President of Walt Disney and Pixar Animation Studios.	Among his students there were Alan Kay, inventor of the Smalltalk language, Henri Gouraud who devised the Gouraud shading technique, Frank Crow, who went on to develop antialiasing methods, and Edwin Catmull, computer graphics scientist, co-founder of Pixar and now President of Walt Disney and Pixar Animation Studios.	/m/01sqpc	Henri_Gouraud_(computer_scientist)	76	89	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Alan Ashton
Duane Call
Edwin Catmull
James H. Clark
Henri Gouraud
Alan Kay
Bui Tuong Phong	Alan Ashton
Duane Call
Edwin Catmull
James H. Clark
Henri Gouraud
Alan Kay
Bui Tuong Phong	/m/01sqpc	Henri_Gouraud_(computer_scientist)	52	65	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In a fully asynchronous system there is no consensus solution that can tolerate one or more crash failures even when only requiring the non triviality property . This result is sometimes called the FLP impossibility proof. The authors Michael J. Fischer, Nancy Lynch, and Mike Paterson were awarded a Dijkstra Prize for this significant work. The FLP result does not state that consensus can never be reached: merely that under the model's assumptions, no algorithm can always reach consensus in bounded time. In practice it is highly unlikely to occur.	The authors Michael J. Fischer, Nancy Lynch, and Mike Paterson were awarded a Dijkstra Prize for this significant work.	/m/03d5jdj	Mike_Paterson	49	62	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Paterson's worms are a family of cellular automata devised in 1971 by Mike Paterson and John Horton Conway to model the behaviour and feeding patterns of certain prehistoric worms. In the model, a worm moves between points on a triangular grid along line segments, representing food. Its turnings are determined by the configuration of eaten and uneaten line segments adjacent to the point at which the worm currently is. Despite being governed by simple rules the behaviour of the worms can be extremely complex, and the ultimate fate of one variant is still unknown.	Paterson's worms are a family of cellular automata devised in 1971 by Mike Paterson and John Horton Conway to model the behaviour and feeding patterns of certain prehistoric worms.	/m/03d5jdj	Mike_Paterson	70	83	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Much of Yao's research has been in the subject of computational geometry and combinatorial algorithms; she is known for her work with Mike Paterson on binary space partitioning, her work with Dan Greene on finite-resolution computational geometry, and her work with Alan Demers and Scott Shenker on scheduling algorithms for energy-efficient power management. More recently she has been working in cryptography: with her husband Andrew Yao and Wang Xiaoyun she found new attacks on the SHA-1 cryptographic hash function.	Much of Yao's research has been in the subject of computational geometry and combinatorial algorithms; she is known for her work with Mike Paterson on binary space partitioning, her work with Dan Greene on finite-resolution computational geometry, and her work with Alan Demers and Scott Shenker on scheduling algorithms for energy-efficient power management.	/m/03d5jdj	Mike_Paterson	134	147	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Hewitt obtained his PhD in mathematics at MIT in 1971, under the supervision of Seymour Papert, Marvin Minsky, and Mike Paterson. Hewitt started his employment at MIT in 1971. He retired from the faculty of the MIT Department of Electrical Engineering and Computer Science during the 1999-2000 school year. Among the doctoral students that Hewitt supervised during his time at MIT are Professor Gul Agha, Dr. Russell Atkinson, Dr. Henry Baker, Dr. Gerald Barber, Dr. Peter Bishop, Dr. Gene Ciccarelli, Professor William Clinger, Dr. Peter de Jong, Dr. Michael Freiling, Dr. Irene Greif, Dr. Kenneth Kahn, Dr. William Kornfeld and Professor Akinori Yonezawa.	Hewitt obtained his PhD in mathematics at MIT in 1971, under the supervision of Seymour Papert, Marvin Minsky, and Mike Paterson.	/m/03d5jdj	Mike_Paterson	115	128	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Surprise! It's Edible Incredible! is a Canadian children's game show series produced by Apartment 11 Productions, and is currently broadcasting on BBC Kids. It stars Julie Zwillich as the host of the show, and Mike Paterson as Mr. Gross.	It stars Julie Zwillich as the host of the show, and Mike Paterson as Mr.	/m/03d5jdj	Mike_Paterson	53	66	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
However, efficient algorithms are known for finding a set of at most  vertex guards, matching Chv√°tal's upper bound. David Avis and Godfried Toussaint¬†(1981) proved that a placement for these guards may be computed in O(n log n) time in the worst case, via a divide and conquer algorithm. Kooshesh & Moret (1992) gave a linear time algorithm by using Fisk's short proof and Bernard Chazelle's linear time plane triangulation algorithm.	David Avis and Godfried Toussaint¬†(1981) proved that a placement for these guards may be computed in O(n log n) time in the worst case, via a divide and conquer algorithm.	/m/02rk5zd	David_Avis	0	10	/education/academic,/people/person
He has been editor and associate editor of a number of scientific journals. He is a co-founder of the Annual ACM Symposium on Computational Geometry, and the Annual Canadian Conference on Computational Geometry. He has published more than 360 papers and articles in journals and conference proceedings. He has an Erd≈ës number of two due to his collaboration with David Avis and Richard Pollack.	He has an Erd≈ës number of two due to his collaboration with David Avis and Richard Pollack.	/m/02rk5zd	David_Avis	60	70	/education/academic,/people/person
A 1992 article by David Avis and Komei Fukuda presents an algorithm which finds the v vertices of a polytope defined by a nondegenerate system of n inequalities in d dimensions (or, dually, the v facets of the convex hull of n points in d dimensions, where each facet contains exactly d given points) in time O(ndv) and space O(nd). The v vertices in a simple arrangement of n hyperplanes in d dimensions can be found in O(n2dv) time and O(nd) space complexity. The Avis‚ÄìFukuda algorithm adapted the criss-cross algorithm for oriented matroids.	A 1992 article by David Avis and Komei Fukuda presents an algorithm which finds the v vertices of a polytope defined by a nondegenerate system of n inequalities in d dimensions (or, dually, the v facets of the convex hull of n points in d dimensions, where each facet contains exactly d given points) in time O(ndv) and space O(nd).	/m/02rk5zd	David_Avis	18	28	/education/academic,/people/person
The criss-cross algorithm was used in an algorithm for enumerating all the vertices of a polytope, which was published by David Avis and Komei Fukuda in¬†1992. Avis and Fukuda presented an algorithm which finds the¬†v vertices of a polyhedron defined by a nondegenerate system of¬†n linear inequalities in¬†D dimensions (or, dually, the¬†v facets of the convex hull of¬†n points in¬†D dimensions, where each facet contains exactly¬†D given points) in time¬†O(nDv) and¬†O(nD) space.	The criss-cross algorithm was used in an algorithm for enumerating all the vertices of a polytope, which was published by David Avis and Komei Fukuda in¬†1992.	/m/02rk5zd	David_Avis	122	132	/education/academic,/people/person
Shell sort was invented by Donald Shell in 1959. It improves upon bubble sort and insertion sort by moving out of order elements more than one position at a time. One implementation can be described as arranging the data sequence in a two-dimensional array and then sorting the columns of the array using insertion sort.	Shell sort was invented by Donald Shell in 1959.	/m/0g4dp7	Donald_Shell	27	39	/computer/computer_scientist,/people/person
Shellsort, also known as Shell sort or Shell's method, is an in-place comparison sort. It generalizes an exchanging sort, such as insertion or bubble sort, by starting the comparison and exchange of elements with elements that are far apart before finishing with neighboring elements. Starting with far apart elements can move some out-of-place elements into position faster than a simple nearest neighbor exchange. Donald Shell published the first version of this sort in 1959. The running time of Shellsort is heavily dependent on the gap sequence it uses. For many practical variants, determining their time complexity remains an open problem.	Donald Shell published the first version of this sort in 1959.	/m/0g4dp7	Donald_Shell	0	12	/computer/computer_scientist,/people/person
Teoma, pronounced chawmuh (from Scottish Gaelic te√≤ma "expert"), was an Internet search engine founded in 2000 by Professor Apostolos Gerasoulis and his colleagues at Rutgers University in New Jersey. Professor Tao Yang from the University of California, Santa Barbara co-led technology R&D. Their research grew out of the 1998 DiscoWeb project. The original research was published in the paper, "DiscoWeb: Applying Link Analysis to Web Search".	Professor Tao Yang from the University of California, Santa Barbara co-led technology R&D.	/m/06kz9d	Tao_Yang_(Teoma)	10	18	/computer/computer_scientist,/people/person
Larger fungi were extensively studied in the 1940s and 1950s by Frederick Parker-Rhodes who published a series of papers based on his research on the island. Skokholm is the type locality for the corticioid species Trechispora clanculare (Park.-Rhodes) K.H. Larss., described as new to science from the island where it was first found in a puffin burrow. Due to its isolated nature, Skokholm houses British nationally scarce lichens including Golden Hair lichen (Teloschistes flavicans).	Larger fungi were extensively studied in the 1940s and 1950s by Frederick Parker-Rhodes who published a series of papers based on his research on the island.	/m/0g9t51r	Frederick_Parker-Rhodes	64	87	/education/academic,/people/deceased_person,/people/person
Noyes served as the Associate Editor of the Annual Reviews of Nuclear Science from 1962 until 1977. In 1979 he received an Alexander von Humboldt U.S. Senior Scientist Award, primarily to continue his theoretical work on the quantum mechanical three body problem for strongly interacting particles. In that same year he joined with John Amson, Ted Bastin, Clive W. Kilmister and A. Fredrick Parker-Rhodes to found the Alternative Natural Philosophy Association (ANPA), and was president of that organization until 1987.	In that same year he joined with John Amson, Ted Bastin, Clive W. Kilmister and A. Fredrick Parker-Rhodes to found the Alternative Natural Philosophy Association (ANPA), and was president of that organization until 1987.	/m/0g9t51r	Frederick_Parker-Rhodes	80	105	/education/academic,/people/deceased_person,/people/person
Along with Frederick Parker-Rhodes, Clive W. Kilmister and John Amson, Ted Bastin is noted for the discovery of, and research on applications of, the combinatorial hierarchy. The combinatorial hierarchy plays an important role in bit-string physics, to which Bastin also contributed. While at the Cambridge Language Research Unit (founded by Margaret Masterman) he and Parker-Rhodes used Maurice Wilkes' EDSAC to compute the combinatorial hierarchy.	Along with Frederick Parker-Rhodes, Clive W. Kilmister and John Amson, Ted Bastin is noted for the discovery of, and research on applications of, the combinatorial hierarchy.	/m/0g9t51r	Frederick_Parker-Rhodes	11	34	/education/academic,/people/deceased_person,/people/person
Bastin was a founding member, with H. Pierre Noyes, Clive W. Kilmister, John Amson and Frederick Parker-Rhodes, of the Alternative Natural Philosophy Association (ANPA), Cambridge, England. Their "first meeting was held in the autumn of 1979 at Prof. Kilmister's "Red Tiles Cottage " near Lewes, and near Thomas Paine's birthplace". The organization was joined in 1980 by David McGoveran and Tom Etter, among others. Meetings were first held annually at King's College, Cambridge University and now continue annually at Westcott House.	Bastin was a founding member, with H. Pierre Noyes, Clive W. Kilmister, John Amson and Frederick Parker-Rhodes, of the Alternative Natural Philosophy Association (ANPA), Cambridge, England.	/m/0g9t51r	Frederick_Parker-Rhodes	87	110	/education/academic,/people/deceased_person,/people/person
Clive W. Kilmister (1924 ‚Äì May 2, 2010) was a British Mathematician who specialised in the mathematical foundations of Physics, especially Quantum Mechanics and Relativity and published widely in these fields (see References). He was one of the discoverers of the Combinatorial Hierarchy, along with A. F. Parker-Rhodes, E. W. Bastin, and J.C.Amson. He was strongly influenced by astrophysicist Arthur Eddington and was well known for his elaboration and elucidation of Eddington‚Äôs fundamental theory.	He was one of the discoverers of the Combinatorial Hierarchy, along with A. F. Parker-Rhodes, E. W. Bastin, and J.C.Amson.	/m/0g9t51r	Frederick_Parker-Rhodes	73	92	/education/academic,/people/deceased_person,/people/person
First-generation microkernels typically supported synchronous as well as asynchronous IPC, and suffered from poor IPC performance. Jochen Liedtke identified the design and implementation of the IPC mechanisms as the underlying reason for this poor performance. In his L4 microkernel he pioneered methods that lowered IPC costs by an order of magnitude. These include an IPC system call that supports a send as well as a receive operation, making all IPC synchronous, and passing as much data as possible in registers. Furthermore, Liedtke introduced the concept of the direct process switch, where during an IPC execution an (incomplete) context switch is performed from the sender directly to the receiver. If, as in L4, part or all of the message is passed in registers, this transfers the in-register part of the message without any copying at all. Furthermore, the overhead of invoking the scheduler is avoided; this is especially beneficial in the common case where IPC is used in an RPC-type fashion by a client invoking a server. Another optimization, called lazy scheduling, avoids traversing scheduling queues during IPC by leaving threads that block during IPC in the ready queue. Once the scheduler is invoked, it moves such threads to the appropriate waiting queue. As in many cases a thread gets unblocked before the next scheduler invocation, this approach saves significant work. Similar approaches have since been adopted by QNX and MINIX 3.	Jochen Liedtke identified the design and implementation of the IPC mechanisms as the underlying reason for this poor performance.	/m/05hgtx	Jochen_Liedtke	0	14	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
Performance is therefore a potential issue in microkernel systems. Indeed, the experience of first-generation microkernels such as Mach and ChorusOS showed that systems based on them performed very poorly. However, Jochen Liedtke showed that Mach's performance problems were the result of poor design and implementation, and specifically Mach's excessive page cache footprint. Liedtke demonstrated with his own L4 microkernel that through careful design and implementation, and especially by following the minimality principle, IPC costs could be reduced by more than an order of magnitude compared to Mach. L4's IPC performance is still unbeaten across a range of architectures.	However, Jochen Liedtke showed that Mach's performance problems were the result of poor design and implementation, and specifically Mach's excessive page cache footprint.	/m/05hgtx	Jochen_Liedtke	9	23	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
L4, like its predecessor L3 was created by German computer scientist Jochen Liedtke as a response to the poor performance of earlier microkernel-based operating systems. Liedtke felt that a system designed from the start for high performance, rather than other goals, could produce a microkernel of practical use. His original implementation in hand-coded Intel i386-specific assembly language code sparked off intense interest in the computer industry. Since its introduction, L4 has been developed for platform independence and also in improving security, isolation, and robustness.	L4, like its predecessor L3 was created by German computer scientist Jochen Liedtke as a response to the poor performance of earlier microkernel-based operating systems.	/m/05hgtx	Jochen_Liedtke	69	83	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
Specifying the general idea of a microkernel, Liedtke states:	Specifying the general idea of a microkernel, Liedtke states:	/m/05hgtx	Jochen_Liedtke	46	53	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
Jochen Liedtke set out to prove that a well designed thinner IPC layer, with careful attention to performance and machine-specific (as opposed to platform independent) design could yield massive real-world performance improvements. Instead of Mach's complex IPC system, his L3 microkernel simply passed the message without any additional overhead. Defining and implementing the required security policies were considered to be duties of the user space servers. The role of the kernel was only to provide the necessary mechanism to enable the user-level servers to enforce the policies. L3 proved itself a safe and robust operating system, used for many years for example by T√úV S√úD.	Jochen Liedtke set out to prove that a well designed thinner IPC layer, with careful attention to performance and machine-specific (as opposed to platform independent) design could yield massive real-world performance improvements.	/m/05hgtx	Jochen_Liedtke	0	14	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
The L4.sec system, which is a successor to the L4 microkernel family, is a capability-based system, and has been significantly influenced by the results of the EROS project. The influence is mutual, since the EROS work on high-performance invocation was motivated strongly by Jochen Liedtke's successes with the L4 microkernel family.	The influence is mutual, since the EROS work on high-performance invocation was motivated strongly by Jochen Liedtke's successes with the L4 microkernel family.	/m/05hgtx	Jochen_Liedtke	102	116	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
EUMEL (pronounced oimel for Extendable Multi User Microprocessor ELAN System and also known as L2 for Liedtke 2) is an operating system which began as a run-time environment for the ELAN programming language. It was created in 1979 by Jochen Liedtke at the University of Bielefeld. EUMEL initially ran on the 8-bit Z80 processor, and was later ported to many different architectures.	It was created in 1979 by Jochen Liedtke at the University of Bielefeld.	/m/05hgtx	Jochen_Liedtke	26	40	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
Both were developed by Jochen Liedtke and his team at GMD's SET institute in 1988.	Both were developed by Jochen Liedtke and his team at GMD's SET institute in 1988.	/m/05hgtx	Jochen_Liedtke	23	37	/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
Multiversion concurrency control is described in some detail in sections 4.3 and 5.5 of the 1981 paper "Concurrency Control in Distributed Database Systems" by Philip Bernstein and Nathan Goodman‚Äîthen employed by the Computer Corporation of America. Bernstein and Goodman's paper cites a 1978 dissertation by D.P. Reed which quite clearly describes MVCC and claims it as an original work.	Multiversion concurrency control is described in some detail in sections 4.3 and 5.5 of the 1981 paper "Concurrency Control in Distributed Database Systems" by Philip Bernstein and Nathan Goodman‚Äîthen employed by the Computer Corporation of America.	/m/0b8tgh	Phil_Bernstein	160	176	/computer/computer_scientist,/people/person
Multiversion concurrency control is described in some detail in the 1981 paper "Concurrency Control in Distributed Database Systems" by Philip Bernstein and Nathan Goodman, then employed by the Computer Corporation of America. Bernstein and Goodman's paper cites a 1978 dissertation by David P. Reed which quite clearly describes MVCC and claims it as an original work.	Multiversion concurrency control is described in some detail in the 1981 paper "Concurrency Control in Distributed Database Systems" by Philip Bernstein and Nathan Goodman, then employed by the Computer Corporation of America.	/m/0b8tgh	Phil_Bernstein	143	152	/computer/computer_scientist,/people/person
Multiversion concurrency control is described in some detail in the 1981 paper "Concurrency Control in Distributed Database Systems" by Philip Bernstein and Nathan Goodman, then employed by the Computer Corporation of America. Bernstein and Goodman's paper cites a 1978 dissertation by David P. Reed which quite clearly describes MVCC and claims it as an original work.	Bernstein and Goodman's paper cites a 1978 dissertation by David P. Reed which quite clearly describes MVCC and claims it as an original work.	/m/0b8tgh	Phil_Bernstein	0	9	/computer/computer_scientist,/people/person
Valid time (VT), a concept originated by Richard T. Snodgrass and his doctoral student, is used in temporal databases. It denotes the time period during which a database fact was, is, or will be valid in the modeled reality. As of December 2011, ISO/IEC 9075, Database Language SQL:2011 Part 2: SQL/Foundation included clauses in table definitions to define "application-time period tables" (that is, valid-time tables).	Valid time (VT), a concept originated by Richard T. Snodgrass and his doctoral student, is used in temporal databases.	/m/0bry60w	Richard_T._Snodgrass	41	61	/book/author,/education/academic,/people/person
Transaction time (TT), a concept originated by Richard T. Snodgrass and his doctoral student, is used in temporal databases. It denotes the time period during which a database fact is/was stored in the database. As of December 2011, ISO/IEC 9075, Database Language SQL:2011 Part 2: SQL/Foundation included clauses in table definitions to define "system-versioned tables" (that is, transaction-time tables).	Transaction time (TT), a concept originated by Richard T. Snodgrass and his doctoral student, is used in temporal databases.	/m/0bry60w	Richard_T._Snodgrass	47	67	/book/author,/education/academic,/people/person
In 2001, Steve Grand OBE, creator of the computer game Creatures, created an android, or anthropoid, he named Lucy. The intention was that she would have to learn everything, including how to use her mechanical vocal chords to speak. Her systems were made to be similar to a human's.	In 2001, Steve Grand OBE, creator of the computer game Creatures, created an android, or anthropoid, he named Lucy.	/m/02px3w	Steve_Grand	9	20	/people/person
Creatures is an artificial life (alife) computer program series, created in the mid-1990s by English computer scientist Steve Grand whilst working for the Cambridge video games developer Millennium Interactive. Gameplay focuses on raising alien creatures known as Norns, teaching them to survive, helping them explore their world, defending them against other species, and breeding them. Words can be taught to creatures by a learning computer (for verbs) or by repeating the name of the object while the creature is looking at it. After a creature understands language, the player can instruct their creature by typing in instructions, which the creature may choose to obey. A complete life cycle is modelled for the creatures - childhood, adolescence, adulthood, and senescence, each with their own particular needs. The gameplay is designed to foster an emotional bond between the player and their creatures. Rather than taking a scripted approach, Creatures series games were driven by detailed biological and neurological simulation and their unexpected results. There were six major Creatures releases from Creature Labs. Between 1996 and 2001, there were three principal games released, the Docking Station add-on (generally referenced as a separate game) and two children's games, and there were three games created for console systems. A sequel named Creatures Online is currently in development, with the artificial life technology from Creatures 3 and Docking Station updated to a 3D environment.	Creatures is an artificial life (alife) computer program series, created in the mid-1990s by English computer scientist Steve Grand whilst working for the Cambridge video games developer Millennium Interactive.	/m/02px3w	Steve_Grand	120	131	/people/person
Creature Labs (originally named Cyberlife Ltd.) was a company based in Cambridge, England which was set up to develop the artificial life technology created by Steve Grand. The most famous of its products was the Creatures series of artificial life simulations/games, although the company developed a range of standard computer games (including the foundation of BAMZOOKi), and for a while pursued research into applications of artificial life technologies.	Creature Labs (originally named Cyberlife Ltd.) was a company based in Cambridge, England which was set up to develop the artificial life technology created by Steve Grand.	/m/02px3w	Steve_Grand	160	171	/people/person
Rome: Pathway to Power used an isometric interface and was based on an engine developed by Steve Grand in 1979 called Microcosm. Microcosm was the base of several educational adventures for children before Rome. Another game by Steve Grand using the same engine is The Adventures of Robin Hood.	Rome: Pathway to Power used an isometric interface and was based on an engine developed by Steve Grand in 1979 called Microcosm.	/m/02px3w	Steve_Grand	91	102	/people/person
Rome: Pathway to Power used an isometric interface and was based on an engine developed by Steve Grand in 1979 called Microcosm. Microcosm was the base of several educational adventures for children before Rome. Another game by Steve Grand using the same engine is The Adventures of Robin Hood.	Another game by Steve Grand using the same engine is The Adventures of Robin Hood.	/m/02px3w	Steve_Grand	16	27	/people/person
S-bot mobile robot - S. Shankar Sastry - Saburo Yatsude - Safety engineering - Samsung SGR-A1 - Samuel Anders - Sandstorm (vehicle) - Santa Claus Conquers the Martians - Santa Claus machine - Sarcoman - Sarcos - Saturn 3 - Saul Tigh - SAVIOUR (robot) - Sawfish harvester - SCARA - Science - Science fiction film - Scratch - Scratch and Grounder - Screamers (1995 film) - Scud: The Disposable Assassin - Search algorithm - Sebastian Thrun - Seed AI - SEIF SLAM - Seiko Epson - Self-balancing unicycle - Self-management (computer science) - Self-reconfiguring modular robot - Self-replicating machine - Semi Human Instinctive Artificial Intelligence - Sense Plan Act - Sensitive skin - Sensor - Sensor fusion - Senster - Serial manipulator - Serpentor - Service robot - SERVO Magazine - Servo motor - Servomechanism - Seth A. Hutchinson - Seth J. Teller - Shadow Hand - Shakey the robot - Shakey the Robot - Shigeo Hirose - Short Circuit - Short Circuit 2 - Shyster (expert system) - Silent Running - Silicate (AI) - Silver Swan (automaton) - Simbad robot simulator - Simon Penny - Simultaneous localization and mapping - Singleton (global governance) - Sinistron - Siri Personal Assistant - Sitter (BEAM) - Situated - Situated robotics - Six degrees of freedom - Sky Captain and the World of Tomorrow - Slider (BEAM) - Small Wonder (TV series) - SMART Agent - Smart objects - smartwheels - Smash Martians - SMErobot - Snake-arm robot - Snakebot - SNePS - Soccer robot - Social robot - Sociorobotics - Soft computing - Software agent - Software engineering - Sparkplug (Transformers) - Speech processing - Sphere world - Spherical robot - Spider-Slayer - Spirit rover - Spreading activation - Squirmer (BEAM) - ST Robotics - Stage (software) - Star Trek Generations - Star Trek: First Contact - Star Trek: Insurrection - Star Trek: Nemesis - Star Trek: The Next Generation - Star Wars - Star Wars Episode I: The Phantom Menace - Star Wars Episode II: Attack of the Clones - Star Wars Episode III: Revenge of the Sith - Star Wars Episode IV: A New Hope - Star Wars Episode V: The Empire Strikes Back - Star Wars Episode VI: Return of the Jedi - Star world - Stardust in Your Eyes - State space planning - St√§ubli - Stefano Nolfi - Stepper motor - Stereo cameras - Steve Grand - Steve Mann - Steven M. LaValle - Stewart platform - Stochastic diffusion search - Stochastic Roadmap Simulation - Stochastic semantic analysis - Strong AI - Subsumption architecture - Super Robot - Superman Classic - Support vector machine - Surena (robot) - Sussman Anomaly - Sven Koenig (computer scientist) - Swarm intelligence - Swarm robotics - Swedish Robotics Society - Swimmer (BEAM) - SwisTrack - Symbol level - Symbot - Symbrion - Synchro - Synthetic Environment for Analysis and Simulations - Synthetics (Odyssey 5) - Synthoid	S-bot mobile robot - S. Shankar Sastry - Saburo Yatsude - Safety engineering - Samsung SGR-A1 - Samuel Anders - Sandstorm (vehicle) - Santa Claus Conquers the Martians - Santa Claus machine - Sarcoman - Sarcos - Saturn 3 - Saul Tigh - SAVIOUR (robot) - Sawfish harvester - SCARA - Science - Science fiction film - Scratch - Scratch and Grounder - Screamers (1995 film) - Scud: The Disposable Assassin - Search algorithm - Sebastian Thrun - Seed AI - SEIF SLAM - Seiko Epson - Self-balancing unicycle - Self-management (computer science) - Self-reconfiguring modular robot - Self-replicating machine - Semi Human Instinctive Artificial Intelligence - Sense Plan Act - Sensitive skin - Sensor - Sensor fusion - Senster - Serial manipulator - Serpentor - Service robot - SERVO Magazine - Servo motor - Servomechanism - Seth A. Hutchinson - Seth J. Teller - Shadow Hand - Shakey the robot - Shakey the Robot - Shigeo Hirose - Short Circuit - Short Circuit 2 - Shyster (expert system) - Silent Running - Silicate (AI) - Silver Swan (automaton) - Simbad robot simulator - Simon Penny - Simultaneous localization and mapping - Singleton (global governance) - Sinistron - Siri Personal Assistant - Sitter (BEAM) - Situated - Situated robotics - Six degrees of freedom - Sky Captain and the World of Tomorrow - Slider (BEAM) - Small Wonder (TV series) - SMART Agent - Smart objects - smartwheels - Smash Martians - SMErobot - Snake-arm robot - Snakebot - SNePS - Soccer robot - Social robot - Sociorobotics - Soft computing - Software agent - Software engineering - Sparkplug (Transformers) - Speech processing - Sphere world - Spherical robot - Spider-Slayer - Spirit rover - Spreading activation - Squirmer (BEAM) - ST Robotics - Stage (software) - Star Trek Generations - Star Trek: First Contact - Star Trek: Insurrection - Star Trek: Nemesis - Star Trek: The Next Generation - Star Wars - Star Wars Episode I: The Phantom Menace - Star Wars Episode II: Attack of the Clones - Star Wars Episode III: Revenge of the Sith - Star Wars Episode IV: A New Hope - Star Wars Episode V: The Empire Strikes Back - Star Wars Episode VI: Return of the Jedi - Star world - Stardust in Your Eyes - State space planning - St√§ubli - Stefano Nolfi - Stepper motor - Stereo cameras - Steve Grand - Steve Mann - Steven M. LaValle - Stewart platform - Stochastic diffusion search - Stochastic Roadmap Simulation - Stochastic semantic analysis - Strong AI - Subsumption architecture - Super Robot - Superman Classic - Support vector machine - Surena (robot) - Sussman Anomaly - Sven Koenig (computer scientist) - Swarm intelligence - Swarm robotics - Swedish Robotics Society - Swimmer (BEAM) - SwisTrack - Symbol level - Symbot - Symbrion - Synchro - Synthetic Environment for Analysis and Simulations - Synthetics (Odyssey 5) - Synthoid	/m/02px3w	Steve_Grand	2261	2272	/people/person
Leaf was created by Bruce Weimer, Alex Brown and Robin Hewitt. It is an artificial life program, inspired by Steve Grand's computer game Creatures, in which artificial beings hatch, develop, and interact in a simulated environment. A PC (software-only) version of Leaf was demonstrated in 2003, construction of the first robot began in early 2004.	It is an artificial life program, inspired by Steve Grand's computer game Creatures, in which artificial beings hatch, develop, and interact in a simulated environment.	/m/02px3w	Steve_Grand	46	57	/people/person
Niklaus Wirth based his own ALGOL W on ALGOL 60 before developing Pascal. Algol-W was intended to be the next generation ALGOL but the ALGOL 68 committee decided on a design that was more complex and advanced rather than a cleaned simplified ALGOL 60. The official ALGOL versions are named after the year they were first published.	Niklaus Wirth based his own ALGOL W on ALGOL 60 before developing Pascal.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Compiler construction and compiler optimization are taught at universities and schools as part of a computer science curriculum. Such courses are usually supplemented with the implementation of a compiler for an educational programming language. A well-documented example is Niklaus Wirth's PL/0 compiler, which Wirth used to teach compiler construction in the 1970s. In spite of its simplicity, the PL/0 compiler introduced several influential concepts to the field:	A well-documented example is Niklaus Wirth's PL/0 compiler, which Wirth used to teach compiler construction in the 1970s.	/m/05fgl	Niklaus_Wirth	29	42	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Smalltalk language, which was developed originally on the Alto and became quite popular in the early 1980s, may have been instrumental in spreading the style outside PARC. Camel case was also used by convention for many names in the PostScript page description language (invented by Adobe Systems founder and ex-PARC scientist John Warnock), as well as for the language itself. A further boost was provided by Niklaus Wirth (the inventor of Pascal) who acquired a taste for camel case during a sabbatical at PARC and used it in Modula, his next programming language.	A further boost was provided by Niklaus Wirth (the inventor of Pascal) who acquired a taste for camel case during a sabbatical at PARC and used it in Modula, his next programming language.	/m/05fgl	Niklaus_Wirth	32	45	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
While he had programmed extensively in machine code in the 1950s, he came to the conclusion that in high-level languages frequent use of the GOTO statement was usually symptomatic of poor structure. In 1968 he wrote a private paper "A Case against the GO TO Statement", which was then published as a letter in CACM. Editor Niklaus Wirth gave this letter the heading "Go To Statement Considered Harmful", which introduced the phrase "considered harmful" into computing. Dijkstra's thesis was that departures from linear control flow were clearer if allowed only in disciplined higher-level structures such as the if-then-else statement and the while loop. This methodology was developed into structured programming, the title of his 1972 book, coauthored with C.A.R. Hoare and Ole-Johan Dahl. Dijkstra also strongly opposed the teaching of BASIC.	Editor Niklaus Wirth gave this letter the heading "Go To Statement Considered Harmful", which introduced the phrase "considered harmful" into computing.	/m/05fgl	Niklaus_Wirth	7	20	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The following is a Pascal program by Niklaus Wirth. It finds one solution to the eight queens problem.	The following is a Pascal program by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	37	50	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Niklaus Wirth's Lilith project included a custom CPU geared toward the Modula-2 language.	Niklaus Wirth's Lilith project included a custom CPU geared toward the Modula-2 language.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Modula programming language is a descendent of the Pascal programming language. It was developed in Switzerland in the 1970s by Niklaus Wirth, the same person who designed Pascal. The main innovation of Modula over Pascal is a module system, used for grouping sets of related declarations into program units; hence the name Modula. The language is defined in a report by Wirth called Modula. A language for modular multiprogramming published 1976.	It was developed in Switzerland in the 1970s by Niklaus Wirth, the same person who designed Pascal.	/m/05fgl	Niklaus_Wirth	48	61	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Oberon is a programming language created in 1986 by Professor Niklaus Wirth (creator of the programming languages Algol-W, Pascal, Modula, and Modula-2 ) and his associates at ETH Zurich in Switzerland. It was developed as part of the implementation of the Oberon operating system. The original intention was to use Modula-2 as the implementation language but it lacked the required safe type-extension facilities. Also, it was planned to eventually publish the full details of the operating system and compiler so that they could be studied and understood. These factors led to the decision to design a new language which concentrated on just the essential features necessary for the task in hand. The name is from the moon of Uranus, Oberon.	Oberon is a programming language created in 1986 by Professor Niklaus Wirth (creator of the programming languages Algol-W, Pascal, Modula, and Modula-2 ) and his associates at ETH Zurich in Switzerland.	/m/05fgl	Niklaus_Wirth	62	75	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Pascal is an influential imperative and procedural programming language, designed in 1968‚Äì1969 and published in 1970 by Niklaus Wirth as a small and efficient language intended to encourage good programming practices using structured programming and data structuring.	Pascal is an influential imperative and procedural programming language, designed in 1968‚Äì1969 and published in 1970 by Niklaus Wirth as a small and efficient language intended to encourage good programming practices using structured programming and data structuring.	/m/05fgl	Niklaus_Wirth	120	133	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Pascal, named in honor of the French mathematician and philosopher Blaise Pascal, was developed by Niklaus Wirth.	Pascal, named in honor of the French mathematician and philosopher Blaise Pascal, was developed by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	99	112	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The first Pascal compiler was designed in Z√ºrich for the CDC 6000 series mainframe computer family. Niklaus Wirth reports that a first attempt to implement it in Fortran in 1969 was unsuccessful due to Fortran's inadequacy to express complex data structures. The second attempt was formulated in the Pascal language itself and was operational by mid-1970. Many Pascal compilers since have been similarly self-hosting, that is, the compiler is itself written in Pascal, and the compiler is usually capable of recompiling itself when new features are added to the language, or when the compiler is to be ported to a new environment. The GNU Pascal compiler is one notable exception, being written in C.	Niklaus Wirth reports that a first attempt to implement it in Fortran in 1969 was unsuccessful due to Fortran's inadequacy to express complex data structures.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Pascal, in its original form, is a purely procedural language and includes the traditional array of ALGOL-like control structures with reserved words such as if, then, else, while, for, and so on. However, Pascal also has many data structuring facilities and other abstractions which were not included in the original ALGOL 60, like type definitions, records, pointers, enumerations, and sets. Such constructs were in part inherited or inspired from Simula 67, ALGOL 68, Niklaus Wirth's own ALGOL W and suggestions by C. A. R. Hoare.	Such constructs were in part inherited or inspired from Simula 67, ALGOL 68, Niklaus Wirth's own ALGOL W and suggestions by C. A. R. Hoare.	/m/05fgl	Niklaus_Wirth	77	90	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Based on his experience with Pascal (and earlier with ALGOL) Niklaus Wirth developed several more programming languages: Modula, Modula-2, Oberon and Oberon-2. These languages address some criticisms of Pascal and are intended for different user populations. However none has matched the commercial success or widespread impact on computer science that Pascal had.	Based on his experience with Pascal (and earlier with ALGOL) Niklaus Wirth developed several more programming languages: Modula, Modula-2, Oberon and Oberon-2.	/m/05fgl	Niklaus_Wirth	61	74	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Although the concept was first implemented circa 1966 (as O-code for BCPL and P - a code for the Euler Language, Wirth & Weber, CACM Vol9 No2, 1966), the term p-code first appeared in the early 1970s. Two early compilers generating p-code were the Pascal-P compiler in 1973, by Nori, Ammann, Jensen, Hageli, and Jacobi, and the Pascal-S compiler in 1975, by Niklaus Wirth.	Two early compilers generating p-code were the Pascal-P compiler in 1973, by Nori, Ammann, Jensen, Hageli, and Jacobi, and the Pascal-S compiler in 1975, by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	157	170	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
UCSD p-System achieved machine independence by defining a virtual machine, called the p-Machine (or pseudo-machine, which many users began to call the "Pascal-machine" like the OS‚Äîalthough UCSD documentation always used "pseudo-machine") with its own instruction set called p-code (or pseudo-code). Urs Ammann, a student of Niklaus Wirth, originally presented a p-code in his PhD thesis, from which the UCSD implementation was derived, the Zurich Pascal-P implementation. The UCSD implementation changed the Zurich implementation to be "byte oriented". The UCSD p-code was optimized for execution of the Pascal programming language. Each hardware platform then only needed a p-code interpreter program written for it to port the entire p-System and all the tools to run on it. Later versions also included additional languages that compiled to the p-code base. For example, TeleSoft (also located in San Diego) offered an early Ada development environment that used p-code and was therefore able to run on a number of hardware platforms including the Motorola 68000, the System/370, and the Pascal MicroEngine.	Urs Ammann, a student of Niklaus Wirth, originally presented a p-code in his PhD thesis, from which the UCSD implementation was derived, the Zurich Pascal-P implementation.	/m/05fgl	Niklaus_Wirth	25	38	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
UCSD p-System began around 1974 as the idea of UCSD's Kenneth Bowles, who believed that the number of new computing platforms coming out at the time would make it difficult for new programming languages to gain acceptance. He based UCSD Pascal on the Pascal-P2 release of the portable compiler from Zurich. He was particularly interested in Pascal as a language to teach programming. UCSD introduced two features that were important improvements on the original Pascal: variable length strings, and "units" of independently compiled code (an idea included into the then-evolving Ada programming language). Niklaus Wirth credits the p-System, and UCSD Pascal in particular, with popularizing Pascal. It was not until the release of Turbo Pascal that UCSD's version started to slip from first place among Pascal users.	Niklaus Wirth credits the p-System, and UCSD Pascal in particular, with popularizing Pascal.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
From version 5.5 some object-oriented programming features were introduced: classes, inheritance, constructors and destructors. The IDE was already augmented with an object browser interface showing relations between objects and methods and allowing programmers to navigate the modules easily. Borland called its language Object Pascal, which was greatly extended to become the language underlying Delphi (which has two separate OOP systems). The name "Object Pascal" originated with the Pascal extensions developed by Apple Inc. to program its Lisa and Macintosh computers. Pascal originator Niklaus Wirth consulted in developing these extensions, which built upon the record type already present in Pascal.	Pascal originator Niklaus Wirth consulted in developing these extensions, which built upon the record type already present in Pascal.	/m/05fgl	Niklaus_Wirth	18	31	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Top-down design was promoted in the 1970s by IBM researcher Harlan Mills and Niklaus Wirth. Mills developed structured programming concepts for practical use and tested them in a 1969 project to automate the New York Times morgue index. The engineering and management success of this project led to the spread of the top-down approach through IBM and the rest of the computer industry. Among other achievements, Niklaus Wirth, the developer of Pascal programming language, wrote the influential paper Program Development by Stepwise Refinement. Since Niklaus Wirth went on to develop languages such as Modula and Oberon (where one could define a module before knowing about the entire program specification), one can infer that top down programming was not strictly what he promoted. Top-down methods were favored in software engineering until the late 1980s, and object-oriented programming assisted in demonstrating the idea that both aspects of top-down and bottom-up programming could be utilized.	Top-down design was promoted in the 1970s by IBM researcher Harlan Mills and Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	77	90	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Top-down design was promoted in the 1970s by IBM researcher Harlan Mills and Niklaus Wirth. Mills developed structured programming concepts for practical use and tested them in a 1969 project to automate the New York Times morgue index. The engineering and management success of this project led to the spread of the top-down approach through IBM and the rest of the computer industry. Among other achievements, Niklaus Wirth, the developer of Pascal programming language, wrote the influential paper Program Development by Stepwise Refinement. Since Niklaus Wirth went on to develop languages such as Modula and Oberon (where one could define a module before knowing about the entire program specification), one can infer that top down programming was not strictly what he promoted. Top-down methods were favored in software engineering until the late 1980s, and object-oriented programming assisted in demonstrating the idea that both aspects of top-down and bottom-up programming could be utilized.	Among other achievements, Niklaus Wirth, the developer of Pascal programming language, wrote the influential paper Program Development by Stepwise Refinement.	/m/05fgl	Niklaus_Wirth	26	39	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Top-down design was promoted in the 1970s by IBM researcher Harlan Mills and Niklaus Wirth. Mills developed structured programming concepts for practical use and tested them in a 1969 project to automate the New York Times morgue index. The engineering and management success of this project led to the spread of the top-down approach through IBM and the rest of the computer industry. Among other achievements, Niklaus Wirth, the developer of Pascal programming language, wrote the influential paper Program Development by Stepwise Refinement. Since Niklaus Wirth went on to develop languages such as Modula and Oberon (where one could define a module before knowing about the entire program specification), one can infer that top down programming was not strictly what he promoted. Top-down methods were favored in software engineering until the late 1980s, and object-oriented programming assisted in demonstrating the idea that both aspects of top-down and bottom-up programming could be utilized.	Since Niklaus Wirth went on to develop languages such as Modula and Oberon (where one could define a module before knowing about the entire program specification), one can infer that top down programming was not strictly what he promoted.	/m/05fgl	Niklaus_Wirth	6	19	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Hejlsberg was born in Copenhagen, Denmark, and studied engineering at the Technical University of Denmark but did not graduate. While at the university in 1980, he began writing programs for the Nascom microcomputer, including a Pascal compiler which was initially marketed as the Blue Label Software Pascal for the Nascom-2. However, he soon rewrote it for CP/M and DOS, marketing it first as Compas Pascal and later as PolyPascal. Later the product was licensed to Borland, and integrated into an IDE to become the Turbo Pascal system. Turbo Pascal competed with PolyPascal. The compiler itself was largely inspired by the "Tiny Pascal" compiler in Niklaus Wirth's "Algorithms + Data Structures = Programs", one of the most influential computer science books of the time. Anders and his partners ran a computer store in Copenhagen and marketed accounting systems. Their company, PolyData, was the distributor for Microsoft products in Denmark which put them at odds with Borland. Philippe Kahn and Anders first met in 1986. For all those years, Niels Jensen, one of Borland's founders and its majority shareholder, had successfully handled the relationship between Borland and PolyData.	The compiler itself was largely inspired by the "Tiny Pascal" compiler in Niklaus Wirth's "Algorithms + Data Structures = Programs", one of the most influential computer science books of the time.	/m/05fgl	Niklaus_Wirth	74	87	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The following EBNF-like grammar (for Niklaus Wirth's PL/0 programming language, from Algorithms + Data Structures = Programs) is in LL(1) form:	The following EBNF-like grammar (for Niklaus Wirth's PL/0 programming language, from Algorithms + Data Structures = Programs) is in LL(1) form:	/m/05fgl	Niklaus_Wirth	37	50	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Another consequence of JSP's focus on data streams is that it creates program designs with a very different structure to the kind created by the stepwise refinement methods of Wirth and Dijkstra. One typical feature of the structure of JSP programs is that they have several input operations distributed throughout the code in contrast to programs designed using stepwise refinement, which tend to have only one input operation. Jackson illustrates this difference in Chapter 3 of Principles of Program Design. He presents two versions of a program, one designed using JSP, the other using "traditional" methods.	Another consequence of JSP's focus on data streams is that it creates program designs with a very different structure to the kind created by the stepwise refinement methods of Wirth and Dijkstra.	/m/05fgl	Niklaus_Wirth	176	181	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The earliest EBNF was originally developed by Niklaus Wirth incorporating some of the concepts (with a different syntax and notation) from Wirth syntax notation. However, many variants of EBNF are in use. The International Organization for Standardization has adopted an EBNF standard (ISO/IEC 14977). This article uses EBNF as specified by the ISO for examples applying to all EBNFs. Other EBNF variants use somewhat different syntactic conventions.	The earliest EBNF was originally developed by Niklaus Wirth incorporating some of the concepts (with a different syntax and notation) from Wirth syntax notation.	/m/05fgl	Niklaus_Wirth	46	59	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Computer scientist Niklaus Wirth designed and implemented several influential languages.	Computer scientist Niklaus Wirth designed and implemented several influential languages.	/m/05fgl	Niklaus_Wirth	19	32	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The earliest imperative languages were the machine languages of the original computers. In these languages, instructions were very simple, which made hardware implementation easier, but hindered the creation of complex programs. FORTRAN, developed by John Backus at IBM starting in 1954, was the first major programming language to remove the obstacles presented by machine code in the creation of complex programs. FORTRAN was a compiled language that allowed named variables, complex expressions, subprograms, and many other features now common in imperative languages. The next two decades saw the development of a number of other major high-level imperative programming languages. In the late 1950s and 1960s, ALGOL was developed in order to allow mathematical algorithms to be more easily expressed, and even served as the operating system's target language for some computers. MUMPS (1966) carried the imperative paradigm to a logical extreme, by not having any statements at all, relying purely on commands, even to the extent of making the IF and ELSE commands independent of each other, connected only by an intrinsic variable named $TEST. COBOL (1960) and BASIC (1964) were both attempts to make programming syntax look more like English. In the 1970s, Pascal was developed by Niklaus Wirth, and C was created by Dennis Ritchie while he was working at Bell Laboratories. Wirth went on to design Modula-2 and Oberon. For the needs of the United States Department of Defense, Jean Ichbiah and a team at Honeywell began designing Ada in 1978, after a 4-year project to define the requirements for the language. The specification was first published in 1983, with revisions in 1995 and 2005/6.	In the 1970s, Pascal was developed by Niklaus Wirth, and C was created by Dennis Ritchie while he was working at Bell Laboratories.	/m/05fgl	Niklaus_Wirth	38	51	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
ALGOL W is a programming language. It was based on a proposal for ALGOL X by Niklaus Wirth and C. A. R. Hoare as a successor to ALGOL 60 in IFIP Working Group 2.1. When the committee decided that the proposal was not a sufficient advance over ALGOL 60, the proposal was published as A contribution to the development of ALGOL. After making small modifications to the language Wirth supervised a high quality implementation for the IBM/360 at Stanford University that was widely distributed.	It was based on a proposal for ALGOL X by Niklaus Wirth and C. A. R. Hoare as a successor to ALGOL 60 in IFIP Working Group 2.1.	/m/05fgl	Niklaus_Wirth	42	55	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Modula-3 project started in November 1986 when Maurice Wilkes wrote to Niklaus Wirth with some ideas for a new version of Modula. Wilkes had been working at DEC just prior to this point, and had returned to England and joined Olivetti's Research Strategy Board. Wirth had already moved on to Oberon, but had no problems with Wilkes's team continuing development under the Modula name. The language definition was completed in August 1988, and an updated version in January 1989. Compilers from DEC and Olivetti soon followed, and 3rd party implementations after that.	The Modula-3 project started in November 1986 when Maurice Wilkes wrote to Niklaus Wirth with some ideas for a new version of Modula.	/m/05fgl	Niklaus_Wirth	75	88	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
One of the earliest high-level assemblers was Niklaus Wirth's PL360 from 1968. More recent high-level assemblers are Borland's TASM, NASM, Microsoft's MASM, IBM's HLASM (for z/Architecture systems), Alessandro Ghignola's Linoleum and Ziron.	One of the earliest high-level assemblers was Niklaus Wirth's PL360 from 1968.	/m/05fgl	Niklaus_Wirth	46	59	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Niklaus Wirth has summed up the situation in Wirth's Law, which states that software speed is decreasing more quickly than hardware speed is increasing.	Niklaus Wirth has summed up the situation in Wirth's Law, which states that software speed is decreasing more quickly than hardware speed is increasing.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Oberon operating system was originally developed as part of the NS32032-based Ceres workstation project. It is written almost entirely in the Oberon programming language . The basic system was designed and implemented by Niklaus Wirth and J√ºrg Gutknecht and is fully documented in their book "Project Oberon" and Martin Reiser's book "The Oberon System". It was later extended and ported to other hardware     by a team at ETH-Z√ºrich and there was recognition in popular magazines    . Wirth and Gutknecht (although being active ICT professors) referred to themselves as 'part time programmers' in the book 'Project Oberon'.	The basic system was designed and implemented by Niklaus Wirth and J√ºrg Gutknecht and is fully documented in their book "Project Oberon" and Martin Reiser's book "The Oberon System".	/m/05fgl	Niklaus_Wirth	49	62	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Component Pascal is a programming language in the tradition of Niklaus Wirth's Pascal, Modula-2, Oberon and Oberon-2. It bears the name of the Pascal programming language but is incompatible with it. Instead, it is a minor variant and refinement of Oberon-2, designed and supported by a small ETH Z√ºrich spin-off company called Oberon microsystems. Their IDE (Integrated Development Environment) is called BlackBox Component Builder. At the time the first version was released (1994 as Oberon/F) it presented a novel approach to graphical user interface (GUI) construction based on editable forms, where fields and command buttons are linked to exported variables and executable procedures. This approach bears some similarity to the code-behind way used in Microsoft's .NET 3.0 to access code in XAML.	Component Pascal is a programming language in the tradition of Niklaus Wirth's Pascal, Modula-2, Oberon and Oberon-2.	/m/05fgl	Niklaus_Wirth	63	76	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In quicksort, one of the critical operations is choosing the pivot: the element around which the list is partitioned. The simplest pivot selection algorithm is to take the first or the last element of the list as the pivot, causing poor behavior for the case of sorted or nearly sorted input. Niklaus Wirth's variant uses the middle element to prevent these occurrences, degenerating to O(n¬≤) for contrived sequences. The median-of-3 pivot selection algorithm takes the median of the first, middle, and last elements of the list; however, even though this performs well on many real-world inputs, it is still possible to contrive a median-of-3 killer list that will cause dramatic slowdown of a quicksort based on this pivot selection technique. Such inputs could potentially be exploited by an aggressor, for example by sending such a list to an Internet server for sorting as a denial of service attack.	Niklaus Wirth's variant uses the middle element to prevent these occurrences, degenerating to O(n¬≤) for contrived sequences.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Lilith is the name of custom built workstation using the AMD 2901 bit-slice processor by the group of Niklaus Wirth at ETH Z√ºrich. The project started in 1977 and by 1984 several hundred workstations were in use. It had a high resolution full page display, a mouse, a laser printer interface, and a network interface. Its software was written completely in Modula-2 and included a relational database program called Lidas.	Lilith is the name of custom built workstation using the AMD 2901 bit-slice processor by the group of Niklaus Wirth at ETH Z√ºrich.	/m/05fgl	Niklaus_Wirth	102	115	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The development of Lilith was influenced by the Xerox Alto from the Xerox PARC (1973) where Niklaus Wirth spent a sabbatical from 1976 to 1977. Unable to bring back one of the Alto systems to Europe, Wirth decided to build a new system from scratch. In 1985 he had a second sabbatical leave to PARC, which led to the design of the Oberon System. Ceres, the follow-up to Lilith, was also released in 1985.	The development of Lilith was influenced by the Xerox Alto from the Xerox PARC (1973) where Niklaus Wirth spent a sabbatical from 1976 to 1977.	/m/05fgl	Niklaus_Wirth	92	105	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
It was developed in 1991 at ETH Zurich by Niklaus Wirth and Hanspeter M√∂ssenb√∂ck, who is now at Institut f√ºr Systemsoftware (SSW) of the University of Linz, Austria. Oberon-2 is a superset of Oberon, and is fully compatible with it. Oberon-2 was a redesign of Object Oberon.	It was developed in 1991 at ETH Zurich by Niklaus Wirth and Hanspeter M√∂ssenb√∂ck, who is now at Institut f√ºr Systemsoftware (SSW) of the University of Linz, Austria.	/m/05fgl	Niklaus_Wirth	42	55	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The other PL/0, covered here, is similar to but much simpler than the general-purpose programming language Pascal, intended as an educational programming language. It serves as an example of how to construct a compiler. It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1975. It features quite limited language constructs: there are no real numbers, very few basic arithmetic operations and no control-flow constructs other than "if" and "while" blocks. While these limitations make writing real applications in this language impractical, it helps the compiler remain compact and simple.	It was originally introduced in the book, Algorithms + Data Structures = Programs, by Niklaus Wirth in 1975.	/m/05fgl	Niklaus_Wirth	86	99	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Some Burroughs stack machines do support up-level refs directly in the hardware, with specialized address modes and a special 'display' register file holding the frame addresses of all outer scopes. No subsequent computer lines have done this in hardware. When Niklaus Wirth developed the first Pascal compiler for the CDC 6000, he found that it was faster overall to pass in the frame pointers as a chain, rather than constantly updating complete arrays of frame pointers. This software method also adds no overhead for common languages like C which lack up-level refs.	When Niklaus Wirth developed the first Pascal compiler for the CDC 6000, he found that it was faster overall to pass in the frame pointers as a chain, rather than constantly updating complete arrays of frame pointers.	/m/05fgl	Niklaus_Wirth	5	18	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The first award was given to immunologist Maurice Arthus (1862-1945) at the University of Lausanne. Other winners have included computer scientist Niklaus Wirth and astronomer Michel Mayor. As of 2003, nine Marcel Benoist winners have also won the Nobel Prize.	Other winners have included computer scientist Niklaus Wirth and astronomer Michel Mayor.	/m/05fgl	Niklaus_Wirth	47	60	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Object Pascal is an extension of the Pascal language that was developed at Apple Computer by a team led by Larry Tesler in consultation with Niklaus Wirth, the inventor of Pascal. It is descended from an earlier object-oriented version of Pascal called Clascal, which was available on the Lisa computer.	Object Pascal is an extension of the Pascal language that was developed at Apple Computer by a team led by Larry Tesler in consultation with Niklaus Wirth, the inventor of Pascal.	/m/05fgl	Niklaus_Wirth	141	154	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Niklaus Wirth based his own ALGOL W on ALGOL 60 before moving to develop Pascal. Algol-W was intended to be the next generation ALGOL but the ALGOL 68 committee decided on a design that was more complex and advanced rather than a cleaned simplified ALGOL 60. The official ALGOL versions are named after the year they were first published.	Niklaus Wirth based his own ALGOL W on ALGOL 60 before moving to develop Pascal.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In 1985, Tesler worked with Niklaus Wirth to add object-oriented language extensions to the Pascal programming language, calling the new language Object Pascal. He also was instrumental in developing MacApp, one of the first class libraries for application development. Eventually, these two technologies became shipping Apple products.	In 1985, Tesler worked with Niklaus Wirth to add object-oriented language extensions to the Pascal programming language, calling the new language Object Pascal.	/m/05fgl	Niklaus_Wirth	28	41	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In computer science and related disciplines, considered harmful is a phrase popularly used in the titles of diatribes and other critical essays (there are at least 65 such works). It was popularized by Edsger Dijkstra's letter Go To Statement Considered Harmful,  published in the March 1968 Communications of the ACM (CACM), in which he criticized the excessive use of the GOTO statement in programming languages of the day and advocated structured programming instead. The original title of the letter, as submitted to CACM, was A Case Against the Goto Statement, but CACM editor Niklaus Wirth changed the title to the now immortalized Go To Statement Considered Harmful. Regarding this new title, Donald Knuth quipped that "Dr. Goto cheerfully complained that he was always being eliminated."	The original title of the letter, as submitted to CACM, was A Case Against the Goto Statement, but CACM editor Niklaus Wirth changed the title to the now immortalized Go To Statement Considered Harmful.	/m/05fgl	Niklaus_Wirth	111	124	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Algol 68's many little-used language features (e.g. concurrent and parallel blocks) and its complex system of syntactic shortcuts and automatic type coercions made it unpopular with implementers and gained it a reputation of being difficult. Niklaus Wirth actually walked out of the design committee to create the simpler Pascal language.	Niklaus Wirth actually walked out of the design committee to create the simpler Pascal language.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
XCOM originally used a now-obsolete bottom-up parse table method called Mixed Strategy Precedence, invented by the XPL team. MSP is a generalization of the simple precedence parser method invented by Niklaus Wirth for PL360. Simple precedence is itself a generalization of the trivially simple operator precedence methods that work nicely for expressions like A+B*(C+D)-E. MSP tables include a list of expected triplets of language symbols. This list grows larger as the cube of the grammar size, and becomes quite large for typical full programming languages. XPL-derived compilers were difficult to fit onto minicomputers of the 1970s with limited memories. MSP is also not powerful enough to handle all likely grammars. It is applicable only when the language designer can tweak the language definition to fit MSP's restrictions, before the language is widely used.	MSP is a generalization of the simple precedence parser method invented by Niklaus Wirth for PL360.	/m/05fgl	Niklaus_Wirth	75	88	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Euler is a programming language created by Niklaus Wirth and Helmut Weber, conceived as an extension and generalization of ALGOL 60. The designers' goal was to create a language:	Euler is a programming language created by Niklaus Wirth and Helmut Weber, conceived as an extension and generalization of ALGOL 60.	/m/05fgl	Niklaus_Wirth	43	56	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Many other well-known computer experts like Niklaus Wirth made contributions to the project, but ultimately NELIAC fell out of favor after the Navy Department standardized on compilers with commercial support.	Many other well-known computer experts like Niklaus Wirth made contributions to the project, but ultimately NELIAC fell out of favor after the Navy Department standardized on compilers with commercial support.	/m/05fgl	Niklaus_Wirth	44	57	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Instruction set design was based on Niklaus Wirth's Modula-2 workstation Lilith, developed at the Swiss Federal Institute of Technology, which in turn was inspired by the legendary Alto developed at Xerox PARC.	Instruction set design was based on Niklaus Wirth's Modula-2 workstation Lilith, developed at the Swiss Federal Institute of Technology, which in turn was inspired by the legendary Alto developed at Xerox PARC.	/m/05fgl	Niklaus_Wirth	36	49	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
MacApp was a direct descendent of the Lisa Toolkit, Apple‚Äôs first effort in designing an object-oriented application framework. The MacApp and Lisa Toolkit projects were headed by Larry Tesler. The engineering team for the Toolkit and the initial implementation of MacApp included Larry Rosenstein, Scott Wallace, and Ken Doyle. MacApp was based on Object Pascal, Apple‚Äôs object-oriented extension to Pascal, developed in consultation with Pascal inventor Niklaus Wirth. At the time, Pascal was Apple's language of choice for Mac programming.	MacApp was based on Object Pascal, Apple‚Äôs object-oriented extension to Pascal, developed in consultation with Pascal inventor Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	127	140	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In 1969, Gillies received a preprint of Wirth's "Pascal User Manual and Report" and launched a project to build the first Pascal compiler written in North America. Ian Stocks was one of the graduate students who worked on this fast-turnaround in-memory 2-pass compiler, and the compiler (for the Digital Equipment PDP-11 minicomputer) was completed in the early 1970s. This work was part of the "PDP-11 Playpen" project which focused on getting graduate students direct access to low-cost computer hardware, such as the PDP-11/23, where the Pascal compiler ran.	In 1969, Gillies received a preprint of Wirth's "Pascal User Manual and Report" and launched a project to build the first Pascal compiler written in North America.	/m/05fgl	Niklaus_Wirth	40	45	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
When Niklaus Wirth designed Pascal, the desire was to limit the number of levels of precedence (fewer parse routines, after all). So the OR and exclusive OR operators are treated just like an Addop and processed at the level of a math expression. Similarly, the AND is treated like a Mulop and processed with Term. The precedence levels are	When Niklaus Wirth designed Pascal, the desire was to limit the number of levels of precedence (fewer parse routines, after all).	/m/05fgl	Niklaus_Wirth	5	18	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
However, the incorporation of C's lenient attitude towards types and type conversions can result in a Pascal that loses some or all of its type security. For example, Java and C# were created in part to address some of the perceived type security issues of C, and have "managed" pointers that cannot be used to create invalid references. In its original form (as described by Niklaus Wirth), Pascal qualifies as a managed pointer language, some 30 years before either Java or C#. However, a Pascal amalgamated with C would lose that protection by definition. In general, the lower dependence on pointers for basic tasks makes it safer than C in practice.	In its original form (as described by Niklaus Wirth), Pascal qualifies as a managed pointer language, some 30 years before either Java or C#.	/m/05fgl	Niklaus_Wirth	38	51	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
A simple precedence grammar is a context-free formal grammar that can be parsed with a simple precedence parser. The concept was first developed by Niklaus Wirth and Helmut Weber from the ideas of Robert Floyd in their paper, EULER: a generalization of ALGOL, and its formal definition, in the Communications of the ACM in 1966.	The concept was first developed by Niklaus Wirth and Helmut Weber from the ideas of Robert Floyd in their paper, EULER: a generalization of ALGOL, and its formal definition, in the Communications of the ACM in 1966.	/m/05fgl	Niklaus_Wirth	35	48	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Wirth-Weber relationship between a pair of symbols  is necessary to determine if a formal grammar is a Simple precedence grammar, and in such case the Simple precedence parser can be used.	The Wirth-Weber relationship between a pair of symbols  is necessary to determine if a formal grammar is a Simple precedence grammar, and in such case the Simple precedence parser can be used.	/m/05fgl	Niklaus_Wirth	4	9	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
IP Pascal starts with ISO 7185 Pascal (which standardized Niklaus Wirth's original language), and adds:	IP Pascal starts with ISO 7185 Pascal (which standardized Niklaus Wirth's original language), and adds:	/m/05fgl	Niklaus_Wirth	58	71	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Wirth's law is a computing adage made popular by Niklaus Wirth in 1995. It states that "software is getting slower more rapidly than hardware becomes faster."	Wirth's law is a computing adage made popular by Niklaus Wirth in 1995.	/m/05fgl	Niklaus_Wirth	49	62	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Wadley, Trevor -- Watson-Watt, Robert -- Watt, James -- Westinghouse, George -- Wheatstone, Charles -- Wheeler, Harold Alden -- Whitaker, Uncas A. -- Widlar, Bob -- Wiener , Norbert -- Wirth, Niklaus -- Wozniak, Steve --	-- Widlar, Bob -- Wiener , Norbert -- Wirth, Niklaus -- Wozniak, Steve --	/m/05fgl	Niklaus_Wirth	38	52	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
After five years at the National Bureau of Standards, Huskey joined the faculty of the University of California, Berkeley in 1954 and then University of California, Santa Cruz from 1966. While at Berkeley, he supervised the research of pioneering programming language designer Niklaus Wirth, who gained his PhD in 1963. During 1963-1964 Prof. Huskey participated in establishing the Computer Center at IIT Kanpur and convened a meeting there with many pioneers of computing technology. Participants included Forman Acton of Princeton University, Robert Archer of Case Institute, S. Barton of CDC, Australia, S. Beltran from the Centro de Calculo in Mexico City, John Makepeace Bennett of the University of Sidney, Launor Carter of SDC - author of the subsequent Carter Report on Computer Technology for Schools, David Evans of UC Berkeley, Bruce Gilchrist of IBM-SBC, Clay Perry of UC San Diego, Sigeiti Moriguti of the University of Tokyo, Adriaan van Wijngaarden of the Mathematisch Centrum in Amsterdam, Maurice Wilkes of Cambridge University, and Gio Wiederhold, also of UC Berkeley.	While at Berkeley, he supervised the research of pioneering programming language designer Niklaus Wirth, who gained his PhD in 1963.	/m/05fgl	Niklaus_Wirth	90	103	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Founded by Greg¬†Galanos in 1985 as Metropolis Computer Networks in Hudson, Quebec, Metrowerks originally developed software development tools for the Apple Macintosh and UNIX workstations. Its first product was a Modula-2 compiler originally developed by Niklaus Wirth, the creator of the ALGOL W, Pascal and Modula-2 programming languages. It had limited success with this product. In 1992, it began an effort to develop development tools for Macintosh computers based on the newly-announced PowerPC processor as well as legacy support for 68k chipsets. It shipped the first commercial release of CodeWarrior in May¬†1994 at Apple's Worldwide Developers Conference. The release was a great success. Metrowerks received much credit for helping Apple succeed in its risky transition to a new processor.	Its first product was a Modula-2 compiler originally developed by Niklaus Wirth, the creator of the ALGOL W, Pascal and Modula-2 programming languages.	/m/05fgl	Niklaus_Wirth	66	79	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In Pascal and other Wirth programming languages, it is a general rule that all entities must be declared before use, and thus forward declaration is necessary for mutual recursion, for instance. In C, the same general rule applies, but with an exception for undeclared functions and incomplete types. Thus, in C it is possible (although unwise) to implement a pair of mutually recursive functions thus:	In Pascal and other Wirth programming languages, it is a general rule that all entities must be declared before use, and thus forward declaration is necessary for mutual recursion, for instance.	/m/05fgl	Niklaus_Wirth	20	25	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Lagoona is an experimental programming language developed by Michael Franz, a former student of Niklaus Wirth. It explores component-oriented programming with the use of stand-alone messages and message sets, message forwarding, and by de-emphasizing classes.	Lagoona is an experimental programming language developed by Michael Franz, a former student of Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	96	109	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Lola is designed to be a simple hardware description language for describing synchronous, digital circuits. Niklaus Wirth developed the language to teach digital design on field-programmable gate arrays (FPGAs) to computer science students while a professor at ETH Z√ºrich.	Niklaus Wirth developed the language to teach digital design on field-programmable gate arrays (FPGAs) to computer science students while a professor at ETH Z√ºrich.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The term was invented at Stanford and is based on Niklaus Wirth's nickname "Bucky". Niklaus Wirth was first to suggest an EDIT key to set the eighth bit of a 7-bit ASCII character sometime in 1964 or 1965.	The term was invented at Stanford and is based on Niklaus Wirth's nickname "Bucky".	/m/05fgl	Niklaus_Wirth	50	63	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The term was invented at Stanford and is based on Niklaus Wirth's nickname "Bucky". Niklaus Wirth was first to suggest an EDIT key to set the eighth bit of a 7-bit ASCII character sometime in 1964 or 1965.	Niklaus Wirth was first to suggest an EDIT key to set the eighth bit of a 7-bit ASCII character sometime in 1964 or 1965.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The group was centered in the US, but input was solicited from international experts. European experts responded well, which was valuable since language research there, during the prior decade, was more active than in the US. Some highly accomplished academics were paid including Edsger W. Dijkstra, Charles Antony Richard Hoare, and Niklaus Wirth.	Some highly accomplished academics were paid including Edsger W. Dijkstra, Charles Antony Richard Hoare, and Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	109	122	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Syntax font family was chosen by Niklaus Wirth for the Oberon operating system. During part of the period that Oberon was under development, Meier worked in Wirth's group at ETH, developing hand-optimized bitmap versions of the Syntax fonts (this was in the days prior to font anti-aliasing).	The Syntax font family was chosen by Niklaus Wirth for the Oberon operating system.	/m/05fgl	Niklaus_Wirth	37	50	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Wirth syntax notation (WSN) is a metasyntax, that is, a formal way to describe formal languages. Originally proposed by Niklaus Wirth in 1977 as an alternative to Backus‚ÄìNaur Form (BNF), it has several advantages over BNF in that it can be defined using itself, it contains an explicit iteration construct, and it avoids the use of an explicit symbol for the empty string (such as <empty> or Œµ).	Originally proposed by Niklaus Wirth in 1977 as an alternative to Backus‚ÄìNaur Form (BNF), it has several advantages over BNF in that it can be defined using itself, it contains an explicit iteration construct, and it avoids the use of an explicit symbol for the empty string (such as <empty> or Œµ).	/m/05fgl	Niklaus_Wirth	23	36	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Urs Ammann, a student of Niklaus Wirth, originally presented p-code in his PhD thesis (see Urs Ammann, On Code Generation in a Pascal Compiler, Software‚ÄîPractice and Experience, Vol. 7, No. 3, 1977, pp. 391‚Äì423). The central idea is that a complex software system is coded for a non-existent, fictitious, minimal computer or virtual machine and that computer is realized on specific real hardware with an interpreting computer program that is typically small, simple, and quickly developed. The Pascal programming language had to be re-written for every new computer being acquired, so Ammann proposed writing the system one time to a virtual architecture. The successful academic implementation of Pascal was the UCSD p-System developed by Kenneth Bowles, a professor at UCSD, who began the project of developing a universal Pascal programming environment using the P-machine architecture for the multitude of different computing platforms in use at that time. McCormack was part of a team of undergraduates working on the project. He took this familiarity and experience with him to NCR.	Urs Ammann, a student of Niklaus Wirth, originally presented p-code in his PhD thesis (see Urs Ammann, On Code Generation in a Pascal Compiler, Software‚ÄîPractice and Experience, Vol.	/m/05fgl	Niklaus_Wirth	25	38	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
This architecture should be compared to the original P-code machine specification as proposed by Niklaus Wirth.	This architecture should be compared to the original P-code machine specification as proposed by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	97	110	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The end result was a 9"x11" board for the CPU that ran UCSD p-System faster than anything else, by a wide margin. As much as 35-50 times faster than the LSI-11 interpreter, and 7-9 times faster than the Western Digital Pascal MicroEngine did by replacing the LSI-11 microcode with p-code microcode. It also ran faster than the Niklaus Wirth Lilith machine but lacked the bit-mapped graphics capabilities, and around the same speed as a VAX-11/750 running native code. (But the VAX was hampered by the poor code coming out of the Berkeley Pascal compiler, and was also a 32-bit machine.)	It also ran faster than the Niklaus Wirth Lilith machine but lacked the bit-mapped graphics capabilities, and around the same speed as a VAX-11/750 running native code.	/m/05fgl	Niklaus_Wirth	28	41	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
A separate language, Sequential Pascal, is used as the language for applications programs run by the operating systems written in Concurrent Pascal. Both languages are extensions of Niklaus Wirth's Pascal, and share a common threaded code interpreter. The following describes how Concurrent Pascal differs from Wirth's Pascal.	Both languages are extensions of Niklaus Wirth's Pascal, and share a common threaded code interpreter.	/m/05fgl	Niklaus_Wirth	33	46	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
In 1989, he received his Ph.D. from ETH Zurich under the supervision of Niklaus Wirth, who is best known as the designer of several programming languages (including Pascal). He did postdoctoral work at IBM and Yale.	In 1989, he received his Ph.D. from ETH Zurich under the supervision of Niklaus Wirth, who is best known as the designer of several programming languages (including Pascal).	/m/05fgl	Niklaus_Wirth	72	85	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Devised by Niklaus Wirth in the late 1960s and early 1970s, Pascal is a programming language. Originally produced by Borland Software Corporation, Embarcadero Delphi is composed of an IDE, set of standard libraries, and a Pascal-based language commonly called either Object Pascal, Delphi Pascal, or simply 'Delphi' (Embarcadero's current documentation refers to it as 'the Delphi language (Object Pascal)'). Since first released, it has become the most popular commercial Pascal implementation.	Devised by Niklaus Wirth in the late 1960s and early 1970s, Pascal is a programming language.	/m/05fgl	Niklaus_Wirth	11	24	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
PL360 is a programming language designed by Niklaus Wirth and written by Niklaus Wirth, Joseph W. Wells, Jr., and Edwin Satterthwaite, Jr. for the IBM System/360 computer. documentation of PL360 first appeared in 1968.	PL360 is a programming language designed by Niklaus Wirth and written by Niklaus Wirth, Joseph W. Wells, Jr., and Edwin Satterthwaite, Jr. for the IBM System/360 computer.	/m/05fgl	Niklaus_Wirth	44	57	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
21655 Niklauswirth (1999 PC1) is a main-belt asteroid discovered on August 8, 1999 by L. Sarounov√° at Ondrejov. The name refers to the influential Swiss computer scientist Niklaus Wirth.	The name refers to the influential Swiss computer scientist Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	60	73	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
XPL0 is based on PL/0, an example compiler in the book Algorithms + Data Structures = Programs by Niklaus Wirth. The first XPL0 compiler was written in ALGOL. It generated instructions for a pseudo machine that was implemented as an interpreter on a Digital Group computer based on the 6502 microprocessor. The compiler was converted from ALGOL to XPL0 and was then able to compile itself and run on a microcomputer.	XPL0 is based on PL/0, an example compiler in the book Algorithms + Data Structures = Programs by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	98	111	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Recursive descent was popularised by Niklaus Wirth with PL/0, an educational programming language used to teach compiler construction in the 1970s.	Recursive descent was popularised by Niklaus Wirth with PL/0, an educational programming language used to teach compiler construction in the 1970s.	/m/05fgl	Niklaus_Wirth	37	50	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Niklaus Wirth defined Extended Backus‚ÄìNaur Form (EBNF), a refined version of BNF, in the early 1970s for PL/0. Augmented Backus‚ÄìNaur Form (ABNF) is another variant. Both EBNF and ABNF are widely used to specify the grammar of programming languages, as the inputs to parser generators, and in other fields such as defining communication protocols.	Niklaus Wirth defined Extended Backus‚ÄìNaur Form (EBNF), a refined version of BNF, in the early 1970s for PL/0.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The Ceres Workstation, as a follow-up project to the Lilith, was a machine based on bit-slice technology and the programming language Modula-2 that Niklaus Wirth's group started around 1985 as another workstation project based on the NS320xx CPU by National Semiconductor. Its operating system was completely written in Oberon and is an early example of an object oriented operating system.	The Ceres Workstation, as a follow-up project to the Lilith, was a machine based on bit-slice technology and the programming language Modula-2 that Niklaus Wirth's group started around 1985 as another workstation project based on the NS320xx CPU by National Semiconductor.	/m/05fgl	Niklaus_Wirth	148	161	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
ETH compiler written by Niklaus Wirth,	ETH compiler written by Niklaus Wirth,	/m/05fgl	Niklaus_Wirth	24	37	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Modula-2 is a computer programming language designed and developed between 1977 and 1980 by Niklaus Wirth at ETH Zurich as a revision of Pascal to serve as the sole programming language for the operating system and application software for the personal workstation Lilith. The principal concepts were:	Modula-2 is a computer programming language designed and developed between 1977 and 1980 by Niklaus Wirth at ETH Zurich as a revision of Pascal to serve as the sole programming language for the operating system and application software for the personal workstation Lilith.	/m/05fgl	Niklaus_Wirth	92	105	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
Modula-2 was understood by Niklaus Wirth as a successor to his earlier programming language Pascal. The language design was also influenced by the Mesa programming language and the new programming possibilities of the early personal computer Xerox Alto, both from Xerox, that Wirth saw during his 1976 sabbatical year at Xerox PARC. The computer magazine BYTE devoted the issue August 1984 to the language and its surrounding environment.	Modula-2 was understood by Niklaus Wirth as a successor to his earlier programming language Pascal.	/m/05fgl	Niklaus_Wirth	27	40	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
There are two major dialects of Modula-2. The first is PIM, named after the book "Programming in Modula-2" by Niklaus Wirth. There were three major editions of PIM, the second, third (corrected) and fourth editions, each describing slight variants of the language. The second major dialect is ISO, from the standardization effort by the International Organization for Standardization.	The first is PIM, named after the book "Programming in Modula-2" by Niklaus Wirth.	/m/05fgl	Niklaus_Wirth	68	81	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
SuperPascal is based on Niklaus Wirth's sequential language Pascal, extending it with features for safe and efficient concurrency. Pascal itself was used heavily as a publication language in the 1970s; it was used to teach structured programming practices and featured in text books, for example, on compilers and programming languages. Brinch Hansen had earlier developed the language Concurrent Pascal, one of the earliest concurrent languages for the design of operating systems and real-time control systems.	SuperPascal is based on Niklaus Wirth's sequential language Pascal, extending it with features for safe and efficient concurrency.	/m/05fgl	Niklaus_Wirth	24	37	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
At ETH Z√ºrich, Niklaus Wirth and his colleagues had also been investigating such topics as data abstraction and modular programming (although this had been in common use in the 1960s or earlier). Modula-2 (1978) included both, and their succeeding design, Oberon, included a distinctive approach to object orientation, classes, and such. The approach is unlike Smalltalk, and very unlike C++.	At ETH Z√ºrich, Niklaus Wirth and his colleagues had also been investigating such topics as data abstraction and modular programming (although this had been in common use in the 1960s or earlier).	/m/05fgl	Niklaus_Wirth	15	28	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
However, Niklaus Wirth (who popularized the adage now known as Wirth's law: "Software is getting slower more rapidly than hardware becomes faster") said of OOP in his paper, "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours" (contrast KISS principle).	However, Niklaus Wirth (who popularized the adage now known as Wirth's law: "Software is getting slower more rapidly than hardware becomes faster") said of OOP in his paper, "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours" (contrast KISS principle).	/m/05fgl	Niklaus_Wirth	9	22	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
When ALGOL 60 was designed, its intended scope of use was similar to that of FORTRAN: largely the field of numerical computation. IFIP WG 2.1 embarked on the design of a successor, code-named ALGOL X, to the ALGOL 60 programming language with a much wider application scope, including non-numerical programming, areas better served by languages like COBOL and Lisp than by ALGOL 60. Among several competing initial designs, including a proposal by Niklaus Wirth that eventually led to ALGOL W, the Working Group chose that by Aad van Wijngaarden, ultimately leading to ALGOL 68.	Among several competing initial designs, including a proposal by Niklaus Wirth that eventually led to ALGOL W, the Working Group chose that by Aad van Wijngaarden, ultimately leading to ALGOL 68.	/m/05fgl	Niklaus_Wirth	65	78	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
The keyboard attracts many visitors to the city and is today considered one of its top sights. It is also referred to as "one of the miracles of Russia" by some researchers. Niklaus Wirth, Pascal programming language designer, evaluated the object while it was being constructed and found it to be fascinating.	Niklaus Wirth, Pascal programming language designer, evaluated the object while it was being constructed and found it to be fascinating.	/m/05fgl	Niklaus_Wirth	0	13	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
J√ºrg Gutknecht (* January, 3rd, 1949 in B√ºlach) is a Swiss Computer Scientist. He developed (together with Niklaus Wirth) the programming language Oberon and the correspondent operating system Oberon.	He developed (together with Niklaus Wirth) the programming language Oberon and the correspondent operating system Oberon.	/m/05fgl	Niklaus_Wirth	28	41	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
From 1967 to 1970 he was a member of the real-time system programming group at Swissair. Then he studied mathematics at the ETH and worked in parallel at IBM as a student employee. In 1978 he received his doctorate in mathematics. He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2. After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2.	/m/05fgl	Niklaus_Wirth	10	23	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
From 1967 to 1970 he was a member of the real-time system programming group at Swissair. Then he studied mathematics at the ETH and worked in parallel at IBM as a student employee. In 1978 he received his doctorate in mathematics. He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2. After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	/m/05fgl	Niklaus_Wirth	70	83	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
From 1967 to 1970 he was a member of the real-time system programming group at Swissair. Then he studied mathematics at the ETH and worked in parallel at IBM as a student employee. In 1978 he received his doctorate in mathematics. He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2. After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2.	/m/05fgl	Niklaus_Wirth	10	23	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
From 1967 to 1970 he was a member of the real-time system programming group at Swissair. Then he studied mathematics at the ETH and worked in parallel at IBM as a student employee. In 1978 he received his doctorate in mathematics. He joined Niklaus Wirth's research team in 1981, working on the Lilith and Modula-2. After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	After a sabbatical at PARC in 1984/1985, he developed conjointly with Niklaus Wirth the Oberon System based on the Oberon programming language.	/m/05fgl	Niklaus_Wirth	70	83	/award/award_winner,/book/author,/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/influence/influence_node,/people/person,/user/narphorium/people/nndb_person
He studied to a B.Sc. in mathematics at Ursinus College (1964) and M.Sc. (1966) and Ph.D. (1969) in Computer Science at Purdue University, advised by Robert R. Korfhage. His research area was cycle generation, an area in graph theory. Gibbs joined the faculty at Bowdoin College in Maine, Arizona State University and College of William and Mary (mathematics) in Virginia before moving to Pittsburgh, joining Carnegie Mellon University as professor of computer science and becoming the first director of the educational program at the Software Engineering Institute (1987‚Äì97). Since then he was chief information officer at Guilford College in Greensboro and University of Connecticut, jointly serving as professor of Operations and Information management. He eventually worked for Ball State University as chair of computer science (2000‚Äì02).	(1966) and Ph.D. (1969) in Computer Science at Purdue University, advised by Robert R. Korfhage.	/m/03cw8m6	Robert_R._Korfhage	77	95	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
In 1985 a British subsidiary, Alsys ltd was formed with John Barnes as the MD.	In 1985 a British subsidiary, Alsys ltd was formed with John Barnes as the MD.	/m/03d77n	John_Barnes_(computer_scientist)	56	67	/computer/computer_scientist,/people/person
Contributors to the site have included Parry Aftab, Jart Armin, Robert D. Atkinson, John Barnes, Vint Cerf, Cory Doctorow, Tom Hayes, Andrew Keen, Paul Levinson, Kate Pullinger, Lawrence Roberts, Howard Schmidt and Stephen Viscusi. Guests on live streaming IE Radio have included Craig Newmark, Jason Calacanis, Aneesh Chopra, Clay Shirky, Ellen Miller, Philip Rosedale, Jimmy Wales, Gil Elbaz, Andrew Keen, and Richard Boly.	Contributors to the site have included Parry Aftab, Jart Armin, Robert D. Atkinson, John Barnes, Vint Cerf, Cory Doctorow, Tom Hayes, Andrew Keen, Paul Levinson, Kate Pullinger, Lawrence Roberts, Howard Schmidt and Stephen Viscusi.	/m/03d77n	John_Barnes_(computer_scientist)	84	95	/computer/computer_scientist,/people/person
The term state machine replication was first suggested by Leslie Lamport  and was widely adopted after publication of a survey paper written by Fred B. Schneider. The model covers any system in which some deterministic object (a state machine) is replicated in such a way that a series of commands can be applied to the replicas fault-tolerantly. A reconfigurable state machine is one that can vary its membership, adding new members or removing old ones. Some state machine protocols can also ride out the temporary unavailability of a subset of the current members without requiring reconfiguration when such situations arise, including Gbcast and also Paxos, Lamport‚Äôs widely cited protocol for state machine replication.	The term state machine replication was first suggested by Leslie Lamport  and was widely adopted after publication of a survey paper written by Fred B. Schneider.	/m/07s8hp7	Fred_B._Schneider	144	161	/people/person
In late 1953, John W. Backus submitted a proposal to his superiors at IBM to develop a more practical alternative to assembly language for programming their IBM 704 mainframe computer. Backus' historic FORTRAN team consisted of programmers Richard Goldberg, Sheldon F. Best, Harlan Herrick, Peter Sheridan, Roy Nutt, Robert Nelson, Irving Ziller, Lois Haibt, and David Sayre. Its concepts included easier entry of equations into a computer, an idea developed by J. Halcombe Laning and demonstrated in his GEORGE compiler of 1952.	Backus' historic FORTRAN team consisted of programmers Richard Goldberg, Sheldon F. Best, Harlan Herrick, Peter Sheridan, Roy Nutt, Robert Nelson, Irving Ziller, Lois Haibt, and David Sayre.	/m/02q3z7m	Lois_Haibt	162	172	/people/person
DKIM was initially produced by an informal industry consortium and was then submitted for enhancement and standardization by the IETF DKIM Working Group, chaired by Barry Leiba and Stephen Farrell, with Eric Allman of sendmail, Jon Callas of PGP Corporation, Mark Delany and Miles Libbey of Yahoo!, and Jim Fenton and Michael Thomas of Cisco Systems attributed as primary authors.	DKIM was initially produced by an informal industry consortium and was then submitted for enhancement and standardization by the IETF DKIM Working Group, chaired by Barry Leiba and Stephen Farrell, with Eric Allman of sendmail, Jon Callas of PGP Corporation, Mark Delany and Miles Libbey of Yahoo!, and Jim Fenton and Michael Thomas of Cisco Systems attributed as primary authors.	/m/04y70gg	Barry_Leiba	165	176	/people/person
KDE was founded in 1996 by Matthias Ettrich, who was then a student at the Eberhard Karls University of T√ºbingen. At the time, he was troubled by certain aspects of the Unix desktop. Among his concerns was that none of the applications looked, felt, or worked alike. He proposed the creation of not merely a set of applications but a desktop environment in which users could expect things to look, feel, and work consistently. He also wanted to make this desktop easy to use; one of his complaints about desktop applications of the time was that his girlfriend could not use them. His initial Usenet post spurred a lot of interest, and the KDE project was born.	KDE was founded in 1996 by Matthias Ettrich, who was then a student at the Eberhard Karls University of T√ºbingen.	/m/0123n4	Matthias_Ettrich	27	43	/computer/computer_scientist,/people/person
Matthias Ettrich started developing a shareware program called Lyrix in 1995. It was then announced on USENET, where it received a great deal of attention in the following years.	Matthias Ettrich started developing a shareware program called Lyrix in 1995.	/m/0123n4	Matthias_Ettrich	0	16	/computer/computer_scientist,/people/person
A "KImage Shop" was proposed by KDE founder Matthias Ettrich on 24 May 1999, following dissatisfaction with the GIMP's user interface. As that name clearly indicates, KImageShop was meant to be a Photoshop clone. Before any public release, it was called KImageShop and then later Krayon, until legal matters motivated a change from these names. As early as 2004 a desire for a change of focus was apparent: "I want Krita to occupy the niche Corel Painter has in the Windows world, not Photoshop."	A "KImage Shop" was proposed by KDE founder Matthias Ettrich on 24 May 1999, following dissatisfaction with the GIMP's user interface.	/m/0123n4	Matthias_Ettrich	44	60	/computer/computer_scientist,/people/person
KDE was founded in 1996 by Matthias Ettrich. At the time, he was troubled by the inconsistencies in UNIX applications. He proposed a new desktop environment. He also wanted to make this desktop easy to use. His initial Usenet post spurred a lot of interest.	KDE was founded in 1996 by Matthias Ettrich.	/m/0123n4	Matthias_Ettrich	27	43	/computer/computer_scientist,/people/person
The development started right after Matthias Ettrich‚Äôs announcement on 14¬†October¬†1996¬†(1996-10-14) to found the Kool Desktop Environment. The word Kool was dropped shortly afterward and the name became simply K Desktop Environment.	The development started right after Matthias Ettrich‚Äôs announcement on 14¬†October¬†1996¬†(1996-10-14) to found the Kool Desktop Environment.	/m/0123n4	Matthias_Ettrich	36	54	/computer/computer_scientist,/people/person
In August 1997, KDE One was held in Arnsberg, Germany. It's the first KDE community meeting with 15 participants, and budget is 14000 DEM (7158 EUR). Matthias Kalle Dalheimer realized that it wasn't a good idea to channel thousands of money through his personal account to run the meeting, so he wanted to found an association. In November 1997, Matthias Ettrich and Matthias Kalle Dalheimer registered KDE e.V. as association in T√ºbingen under German law, and became president and vice president. Additionally they had to drag in housemates and girlfriends to reach the minimum number of persons needed to create an eingetragener Verein (7 persons).	In November 1997, Matthias Ettrich and Matthias Kalle Dalheimer registered KDE e.V.	/m/0123n4	Matthias_Ettrich	18	34	/computer/computer_scientist,/people/person
KDE was founded in 1996 by Matthias Ettrich, who was then a student at the Eberhard Karls University of T√ºbingen. At the time, he was troubled by certain aspects of the Unix desktop. Among his qualms was that none of the applications looked, felt, or worked alike. He proposed the formation of not only a set of applications, but, rather, a desktop environment, in which users could expect things to look, feel, and work consistently. He also wanted to make this desktop easy to use; one of his complaints with desktop applications of the time was that his girlfriend could not use them. His initial Usenet post spurred a lot of interest, and the KDE project was born.	KDE was founded in 1996 by Matthias Ettrich, who was then a student at the Eberhard Karls University of T√ºbingen.	/m/0123n4	Matthias_Ettrich	27	43	/computer/computer_scientist,/people/person
In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem. The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete. In 1972, Richard Karp took this idea a leap forward with his landmark paper, "Reducibility Among Combinatorial Problems", in which he showed that 21 diverse combinatorial and graph theoretical problems, each infamous for its computational intractability, are NP-complete.	In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem.	/m/01svdr	Manuel_Blum	9	20	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Blum Blum Shub (B.B.S.) is a pseudorandom number generator proposed in 1986 by Lenore Blum, Manuel Blum and Michael Shub (Blum et al., 1986).	) is a pseudorandom number generator proposed in 1986 by Lenore Blum, Manuel Blum and Michael Shub (Blum et al., 1986).	/m/01svdr	Manuel_Blum	70	81	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The IACR has established the IACR Fellows Program, an honor to bestow upon its exceptional members. There are currently 38 IACR Fellows: Mihir Bellare, Tom Berson, Eli Biham, George Blakley, Manuel Blum, Gilles Brassard, David Chaum, Andrew Clark, Don Coppersmith, Ivan Damg√•rd, Yvo G. Desmedt, Whitfield Diffie, Oded Goldreich, Shafi Goldwasser, Martin Hellman, Hideki Imai, David Kahn, Arjen Lenstra, James Massey, Ueli Maurer, Kevin McCurley, Ralph Merkle, Silvio Micali, Moni Naor, Andrew Odlyzko, Jean-Jacques Quisquater, Michael O. Rabin, Charles Rackoff, Ronald Rivest, Phil Rogaway, Richard Schroeppel, Adi Shamir, Claus Schnorr, Jennifer Seberry, Gustavus Simmons, Jacques Stern, Scott Vanstone and Andrew Yao.	There are currently 38 IACR Fellows: Mihir Bellare, Tom Berson, Eli Biham, George Blakley, Manuel Blum, Gilles Brassard, David Chaum, Andrew Clark, Don Coppersmith, Ivan Damg√•rd, Yvo G. Desmedt, Whitfield Diffie, Oded Goldreich, Shafi Goldwasser, Martin Hellman, Hideki Imai, David Kahn, Arjen Lenstra, James Massey, Ueli Maurer, Kevin McCurley, Ralph Merkle, Silvio Micali, Moni Naor, Andrew Odlyzko, Jean-Jacques Quisquater, Michael O. Rabin, Charles Rackoff, Ronald Rivest, Phil Rogaway, Richard Schroeppel, Adi Shamir, Claus Schnorr, Jennifer Seberry, Gustavus Simmons, Jacques Stern, Scott Vanstone and Andrew Yao.	/m/01svdr	Manuel_Blum	91	102	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
A CAPTCHA (an initialism for "Completely Automated Public Turing test to tell Computers and Humans Apart", trademarked by Carnegie Mellon University) is a type of challenge-response test used in computing to determine whether or not the user is human. The term was coined in 2000 by Luis von Ahn, Manuel Blum, Nicholas J. Hopper of Carnegie Mellon University, and John Langford of IBM. A common type of CAPTCHA requires that the user type the letters of a distorted image, sometimes with the addition of an obscured sequence of letters or digits that appears on the screen. Because the test is administered by a computer, in contrast to the standard Turing test that is administered by a human, a CAPTCHA is sometimes described as a reverse Turing test. This term is ambiguous because it could also mean a Turing test in which the participants are both attempting to prove they are the computer.	The term was coined in 2000 by Luis von Ahn, Manuel Blum, Nicholas J. Hopper of Carnegie Mellon University, and John Langford of IBM.	/m/01svdr	Manuel_Blum	45	56	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Faculty members from the School of Computer Science have received international recognition for achievements within their fields. These honors include memberships and fellowships in the National Academy of Sciences, the National Academy of Engineering, the American Association for the Advancement of Science, the Association for Computing Machinery, the Institute for Electrical and Electronic Engineers and The Alfred P. Sloan Foundation. Twelve SCS faculty and alumni have won the A. M. Turing Award, the Association for Computing Machinery's most prestigious award, often called the "Nobel Prize of computing." These include Raj Reddy, Manuel Blum and Edmund M. Clarke of the active faculty, in addition to Emeritus Faculty Dana Scott.	" These include Raj Reddy, Manuel Blum and Edmund M. Clarke of the active faculty, in addition to Emeritus Faculty Dana Scott.	/m/01svdr	Manuel_Blum	27	38	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The concept of commitment schemes was first formalized by Gilles Brassard, David Chaum, and Claude Crepeau in 1988, but the concept was used without being treated formally prior to that. The notion of commitments appeared earliest in works by Manuel Blum, Shimon Even, and Shamir et al. The terminology seems to have been originated by Blum, although commitment schemes can be interchangeably called bit commitment schemes‚Äîsometimes reserved for the special case where the committed value is a binary bit.	The notion of commitments appeared earliest in works by Manuel Blum, Shimon Even, and Shamir et al.	/m/01svdr	Manuel_Blum	56	67	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The problem is notable as the only well-known mathematics paper ever written by Microsoft founder Bill Gates (as William Gates), entitled "Bounds for Sorting by Prefix Reversal". Published in 1979, it describes an efficient algorithm for pancake sorting. In addition, the most notable paper published by Futurama co-creator David X. Cohen (as David S. Cohen) concerned the burnt pancake problem. Their collaborators were Christos Papadimitriou (then at Harvard, now at Berkeley) and Manuel Blum (then at Berkeley, now at Carnegie Mellon University), respectively.	Their collaborators were Christos Papadimitriou (then at Harvard, now at Berkeley) and Manuel Blum (then at Berkeley, now at Carnegie Mellon University), respectively.	/m/01svdr	Manuel_Blum	87	98	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
A worst-case linear algorithm for the general case of selecting the kth largest element was published by Blum, Floyd, Pratt, Rivest and Tarjan in their 1973 paper "Time bounds for selection", sometimes called BFPRT after the last names of the authors. It is based on the quickselect algorithm and is also known as the median-of-medians algorithm.	A worst-case linear algorithm for the general case of selecting the kth largest element was published by Blum, Floyd, Pratt, Rivest and Tarjan in their 1973 paper "Time bounds for selection", sometimes called BFPRT after the last names of the authors.	/m/01svdr	Manuel_Blum	105	109	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
He earned a Bachelor's degree in mathematics from Princeton University in June 1979. He received a Ph.D., also in mathematics, from the University of California, Berkeley in June 1983. His doctoral thesis was entitled Metric Theory of Pierce Expansions and his advisor was Manuel Blum.	His doctoral thesis was entitled Metric Theory of Pierce Expansions and his advisor was Manuel Blum.	/m/01svdr	Manuel_Blum	88	99	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Micali graduated in mathematics at La Sapienza University of Rome in 1978 and earned a Ph.D. degree in computer science from the University of California, Berkeley in 1982; his PhD thesis adviser was Manuel Blum.	Micali graduated in mathematics at La Sapienza University of Rome in 1978 and earned a Ph.D. degree in computer science from the University of California, Berkeley in 1982; his PhD thesis adviser was Manuel Blum.	/m/01svdr	Manuel_Blum	200	211	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
A number of well-known algorithms bear Pratt's name. Pratt certificates, short proofs of the primality of a number, demonstrated in a practical way that primality can be efficiently verified, placing the primality testing problem in the complexity class NP and providing the first strong evidence that the problem is not co-NP-complete. The Knuth-Morris-Pratt algorithm, which Pratt designed in the early 1970s together with fellow Stanford professor Donald Knuth and independently from Morris, is still the most efficient general string searching algorithm known today. Along with Blum, Floyd, Rivest, and Tarjan, he described the first worst-case optimal selection algorithm.	Along with Blum, Floyd, Rivest, and Tarjan, he described the first worst-case optimal selection algorithm.	/m/01svdr	Manuel_Blum	11	15	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Lenore Blum is married to Manuel Blum and mother of Avrim Blum. All three are MIT alumni and professors of Computer Science at Carnegie Mellon.	Lenore Blum is married to Manuel Blum and mother of Avrim Blum.	/m/01svdr	Manuel_Blum	26	37	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Blum and Kannan have shown a program checker for graph isomorphism. Suppose P is a claimed polynomial-time procedure that checks if two graphs are isomorphic, but it is not trusted. To check if G and H are isomorphic:	Blum and Kannan have shown a program checker for graph isomorphism.	/m/01svdr	Manuel_Blum	0	4	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Blum integers were named for computer scientist Manuel Blum.	Blum integers were named for computer scientist Manuel Blum.	/m/01svdr	Manuel_Blum	48	59	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In computational complexity theory the Blum axioms or Blum complexity axioms are axioms which specify desirable properties of complexity measures on the set of computable functions. The axioms were first defined by Manuel Blum in 1967.	The axioms were first defined by Manuel Blum in 1967.	/m/01svdr	Manuel_Blum	33	44	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Russell Impagliazzo is a professor of computer science at the University of California, San Diego. He received his doctorate from the University of California, Berkeley. His advisor was Manuel Blum. He spent two years as a postdoc at the University of Toronto. He is a 2004 Guggenheim fellow.	His advisor was Manuel Blum.	/m/01svdr	Manuel_Blum	16	27	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In computational complexity theory Blum's speedup theorem, first stated by Manuel Blum in 1967, is a fundamental theorem about the complexity of computable functions.	In computational complexity theory Blum's speedup theorem, first stated by Manuel Blum in 1967, is a fundamental theorem about the complexity of computable functions.	/m/01svdr	Manuel_Blum	75	86	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The Blum-Goldwasser (BG) cryptosystem is an asymmetric key encryption algorithm proposed by Manuel Blum and Shafi Goldwasser in 1984. Blum-Goldwasser is a probabilistic, semantically secure cryptosystem with a constant-size ciphertext expansion. The encryption algorithm implements an XOR-based stream cipher using the Blum Blum Shub (BBS) pseudo-random number generator to generate the keystream. Decryption is accomplished by manipulating the final state of the BBS generator using the secret key, in order to find the initial seed and reconstruct the keystream.	The Blum-Goldwasser (BG) cryptosystem is an asymmetric key encryption algorithm proposed by Manuel Blum and Shafi Goldwasser in 1984.	/m/01svdr	Manuel_Blum	92	103	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Michael Fredric Sipser is a professor of Applied Mathematics in the Theory of Computation Group at the Massachusetts Institute of Technology. He received his Ph.D. in 1980 from the University of California, Berkeley under the direction of Manuel Blum.	He received his Ph.D. in 1980 from the University of California, Berkeley under the direction of Manuel Blum.	/m/01svdr	Manuel_Blum	97	108	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Von Ahn was born in and grew up in Guatemala City. He attended the American School of Guatemala and graduated from it in 1996. He received a B.S. in mathematics (summa cum laude) from Duke University in 2000 . He obtained a Ph.D. from Carnegie Mellon University in 2005 under the supervision of professor Manuel Blum, who is well known for advising some of the most prominent researchers in the field of computer science. In 2011, he was awarded the A. Nico Habermann development chair in computer science, which is awarded every three years to a junior faculty member of unusual promise in the School of Computer Science.	He obtained a Ph.D. from Carnegie Mellon University in 2005 under the supervision of professor Manuel Blum, who is well known for advising some of the most prominent researchers in the field of computer science.	/m/01svdr	Manuel_Blum	95	106	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In 2000, he did early pioneering work with Manuel Blum on CAPTCHAs, computer-generated tests that humans are routinely able to pass but that computers have not yet mastered. These devices are used by web sites to prevent automated programs, or bots, from perpetrating large-scale abuse, such as automatically registering for large numbers of accounts or purchasing huge number of tickets for resale by scalpers. CAPTCHAs brought von Ahn his first widespread fame among the general public due to its coverage in The New York Times, USA Today, Discovery Channel, NOVA scienceNOW, and other mainstream outlets.	In 2000, he did early pioneering work with Manuel Blum on CAPTCHAs, computer-generated tests that humans are routinely able to pass but that computers have not yet mastered.	/m/01svdr	Manuel_Blum	43	54	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Vazirani was himself a Ph.D. student at Berkeley, receiving his Ph.D. in 1986 under the supervision of Manuel Blum.	Vazirani was himself a Ph.D. student at Berkeley, receiving his Ph.D. in 1986 under the supervision of Manuel Blum.	/m/01svdr	Manuel_Blum	103	114	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Eric Bach is an American computer scientist who has made contributions to computational number theory. Bach completed his undergraduate studies at the University of Michigan, Ann Arbor, and got his Ph.D. in computer science from the University of California, Berkeley, in 1984 under the supervision of Manuel Blum. He is currently a professor at the Computer Science Department, University of Wisconsin‚ÄìMadison. Among other work, he gave explicit bounds for the Chebotarev density theorem which imply that if one assumes the generalized Riemann hypothesis then  is generated by its elements smaller than 2(log¬†n)2. This result shows that the generalized Riemann hypothesis implies tight bounds for the necessary run-time of the deterministic version of the Miller‚ÄìRabin primality test. Bach also did some of the first work on pinning down the actual expected run-time of the Pollard rho method where previous work relied on heuristic estimates and empirical data.	Bach completed his undergraduate studies at the University of Michigan, Ann Arbor, and got his Ph.D. in computer science from the University of California, Berkeley, in 1984 under the supervision of Manuel Blum.	/m/01svdr	Manuel_Blum	199	210	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Moni Naor (Hebrew: ◊û◊ï◊†◊ô ◊†◊ê◊ï◊®‚Äé) is an Israeli computer scientist, currently a professor at the Weizmann Institute of Science. Naor received his Ph.D. in 1989 at the University of California, Berkeley. His adviser was Manuel Blum.	His adviser was Manuel Blum.	/m/01svdr	Manuel_Blum	16	27	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
reCAPTCHA is a user-dialogue system originally developed by Luis von Ahn, Ben Maurer, Colin McMillen, David Abraham and Manuel Blum at Carnegie Mellon University's main Pittsburgh campus, and acquired by Google in September 2009. Like the CAPTCHA interface, reCAPTCHA asks users to enter words seen in distorted text images onscreen. By presenting two words it both protects websites from bots attempting to access restricted areas and helps digitize the text of books.	reCAPTCHA is a user-dialogue system originally developed by Luis von Ahn, Ben Maurer, Colin McMillen, David Abraham and Manuel Blum at Carnegie Mellon University's main Pittsburgh campus, and acquired by Google in September 2009.	/m/01svdr	Manuel_Blum	120	131	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Non-interactive zero-knowledge proofs are a variant of zero-knowledge proofs. Blum, Feldman, and Micali  showed that a common reference string shared between the prover and the verifier is enough to achieve computational zero-knowledge without requiring interaction. Goldreich and Oren gave impossibility results for one shot zero-knowledge protocols in the standard model. These two results are not contradictory, as the impossibility result of Goldreich and Oren does not hold in the common reference string model or the random oracle model. Non-interactive zero-knowledge proofs however show a separation between the cryptographic tasks that can be achieved in the standard model and those that can be achieved in 'more powerful' extended models.	Blum, Feldman, and Micali  showed that a common reference string shared between the prover and the verifier is enough to achieve computational zero-knowledge without requiring interaction.	/m/01svdr	Manuel_Blum	0	4	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Avrim is the son of two other famous computer scientists, Manuel Blum and Lenore Blum. Avrim is the father of Alex Blum and Aaron Blum.	Avrim is the son of two other famous computer scientists, Manuel Blum and Lenore Blum.	/m/01svdr	Manuel_Blum	58	69	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Miller received his Ph.D. from the University of California, Berkeley in 1975 under the direction of Manuel Blum. His Ph.D. thesis was titled Riemann's Hypothesis and Tests for Primality.	Miller received his Ph.D. from the University of California, Berkeley in 1975 under the direction of Manuel Blum.	/m/01svdr	Manuel_Blum	101	112	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Williams received his Ph.D in computer science in 2007 from Carnegie Mellon University under the supervision of Manuel Blum. As of 2010, he is a member of the Theory Group of IBM Almaden Research Center. Since Fall 2011, he's a professor at Stanford University.	Williams received his Ph.D in computer science in 2007 from Carnegie Mellon University under the supervision of Manuel Blum.	/m/01svdr	Manuel_Blum	112	123	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Fiat earned his Ph.D. in 1987 from the Weizmann Institute of Science under the supervision of Adi Shamir. After postdoctoral studies with Richard Karp and Manuel Blum at the University of California, Berkeley, he returned to Israel, taking a faculty position at Tel Aviv University.	After postdoctoral studies with Richard Karp and Manuel Blum at the University of California, Berkeley, he returned to Israel, taking a faculty position at Tel Aviv University.	/m/01svdr	Manuel_Blum	49	60	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The Rete algorithm (/ÀàriÀêtiÀê/ REE-tee or /Ààre…™tiÀê/ RAY-tee, rarely /ÀàriÀêt/ REET or /r…õÀàte…™/ re-TAY) is an efficient pattern matching algorithm for implementing production rule systems. The Rete algorithm was designed by Dr Charles L. Forgy of Carnegie Mellon University, first published in a working paper in 1974, and later elaborated in his 1979 Ph.D. thesis and a 1982 paper (see References). Rete was first used as the core engine of the OPS5 production system language which was used to build early systems including R1 for Digital Equipment Corporation. Rete has become the basis for many popular rule engines and expert system shells, including Tibco Business Events, CLIPS, Jess, Drools, JRules, OPSJ, Blaze Advisor, BizTalk Rules Engine and Soar. The word 'Rete' is Latin for 'net' or 'comb'. The same word is used in modern Italian to mean network. Charles Forgy has reportedly stated that he adopted the term 'Rete' because of its use in anatomy to describe a network of blood vessels and nerve fibers.	The Rete algorithm was designed by Dr Charles L. Forgy of Carnegie Mellon University, first published in a working paper in 1974, and later elaborated in his 1979 Ph.D. thesis and a 1982 paper (see References).	/m/02f29j	Charles_Forgy	38	54	/book/author,/computer/computer_scientist,/people/person
In the 1980s, Dr Charles Forgy developed a successor to the Rete algorithm named Rete II. Unlike the original Rete (which is public domain) this algorithm was not disclosed. Rete II claims better performance for more complex problems (even orders of magnitude), and is officially implemented in CLIPS/R2.	In the 1980s, Dr Charles Forgy developed a successor to the Rete algorithm named Rete II.	/m/02f29j	Charles_Forgy	17	30	/book/author,/computer/computer_scientist,/people/person
In 2010, Dr Charles Forgy developed a new generation of the Rete algorithm. In an InfoWorld benchmark, the algorithm was deemed 500 times faster than the original Rete algorithm and 10 times faster than its predecessor, Rete III. This algorithm is now licensed to Sparkling Logic, the company that Charles joined as investor and strategic advisor, as the inference engine of the SMARTS product.	In 2010, Dr Charles Forgy developed a new generation of the Rete algorithm.	/m/02f29j	Charles_Forgy	12	25	/book/author,/computer/computer_scientist,/people/person
CLIPS is a public domain software tool for building expert systems. The name is an acronym for "C Language Integrated Production System." The syntax and name was inspired by Charles Forgy's OPS ("Official Production System," although there was nothing really official about it). The first versions of CLIPS were developed starting in 1985 at NASA-Johnson Space Center (as an alternative for existing system ART*Inference) until the mid-1990s when the development group's responsibilities ceased to focus on expert system technology. The original name of the project was NASA's AI Language (NAIL).	" The syntax and name was inspired by Charles Forgy's OPS ("Official Production System," although there was nothing really official about it).	/m/02f29j	Charles_Forgy	38	51	/book/author,/computer/computer_scientist,/people/person
In many applications, where large volume of data are concerned and/or when performance time considerations are critical, the computation of the conflict set is a non-trivial problem. Earlier research work on inference engines focused on better algorithms for matching rules to data. The Rete algorithm, developed by Charles Forgy, is an example of such a matching algorithm; it was used in the OPS series of production system languages. Daniel P. Miranker later improved on Rete with another algorithm, TREAT, which combined it with optimization techniques derived from relational database systems.	The Rete algorithm, developed by Charles Forgy, is an example of such a matching algorithm; it was used in the OPS series of production system languages.	/m/02f29j	Charles_Forgy	33	46	/book/author,/computer/computer_scientist,/people/person
The OPS (said to be short for "Official Production System") family was developed in the late 1970s by Charles Forgy while at Carnegie Mellon University. Allen Newell's research group in artificial intelligence had been working on production systems for some time, but Forgy's implementation, based on his Rete algorithm, was especially efficient, sufficiently so that it was possible to scale up to larger problems involving hundreds or thousands of rules.	The OPS (said to be short for "Official Production System") family was developed in the late 1970s by Charles Forgy while at Carnegie Mellon University.	/m/02f29j	Charles_Forgy	102	115	/book/author,/computer/computer_scientist,/people/person
The latter is illustrated by the RETE algorithm, designed by Charles L. Forgy in 1983, which is used in a series of production systems, called OPS and originally developed at Carnegie Mellon University culminating in OPS5 in the early eighties. OPS5 may be viewed as a full-fledged programming language for production system programming.	The latter is illustrated by the RETE algorithm, designed by Charles L. Forgy in 1983, which is used in a series of production systems, called OPS and originally developed at Carnegie Mellon University culminating in OPS5 in the early eighties.	/m/02f29j	Charles_Forgy	61	77	/book/author,/computer/computer_scientist,/people/person
Drools is a rules engine implementation based on Charles Forgy's Rete algorithm tailored for the Java language. Adapting Rete to an object-oriented interface allows for more natural expression of business rules with regard to business objects. Drools is written in Java, but able to run on Java and .NET.	Drools is a rules engine implementation based on Charles Forgy's Rete algorithm tailored for the Java language.	/m/02f29j	Charles_Forgy	49	62	/book/author,/computer/computer_scientist,/people/person
rCOS stands for refinement of object and component systems. It is a formal method component-based model-driven software development. It was originally developed by He Jifeng, Zhiming Liu and Xiaoshan Li at UNU-IIST, and consists of a unified multi-view modeling notation with a theory of relational semantic and graph-based operational semantics, a refinement calculus and tool support for model construction, model analysis and verification, and model transformations. Model transformations automate refinement rules and design patterns and generate conditions as proof obligations. rCOS support multiple dimensional modeling: models at different levels of abstraction related by refinement relations, hierarchy of compositions of components, and models of different views of the system (interaction protocols of components, reactive behaviors of components, data functionality, and class structures and data types). For details, please visit http://rcos.iist.unu.edu/ .	It was originally developed by He Jifeng, Zhiming Liu and Xiaoshan Li at UNU-IIST, and consists of a unified multi-view modeling notation with a theory of relational semantic and graph-based operational semantics, a refinement calculus and tool support for model construction, model analysis and verification, and model transformations.	/m/02pw5cj	Liu_Zhiming_(computer_scientist)	42	53	/computer/computer_scientist,/education/academic,/people/person
In the late-1980s, Quantum realized that the market was rapidly moving towards the POSIX model and decided to rewrite the kernel to be much more compatible at a lower level. The result was QNX 4. During this time Patrick Hayden, while working as an intern, along with Robin Burgener (a full-time employee at the time), developed a new concept for a windowing system. This patented concept was developed into the embeddable GUI named the QNX Photon microGUI. QNX also provided a version of the X Window System. Thanks to the POSIX interface, porting Unix and BSD packages to QNX became much easier.	During this time Patrick Hayden, while working as an intern, along with Robin Burgener (a full-time employee at the time), developed a new concept for a windowing system.	/m/0drz2xb	Patrick_Hayden_(scientist)	17	31	/people/person
It was created by researchers Lee Giles, Kurt Bollacker and Steve Lawrence in 1997 while they were at the NEC Research Institute (now NEC Labs), Princeton, New Jersey, USA. CiteSeer's goal was to actively crawl and harvest academic and scientific documents on the web and use autonomous citation indexing to permit querying by citation or by document, ranking them by citation impact.	It was created by researchers Lee Giles, Kurt Bollacker and Steve Lawrence in 1997 while they were at the NEC Research Institute (now NEC Labs), Princeton, New Jersey, USA.	/m/05ytg0	Kurt_Bollacker	41	55	/computer/computer_scientist,/people/person,/user/kurt/default_domain/thoughtranker
Autonomous citation indexing was introduced in 1998 by Lee Giles, Steve Lawrence and Kurt Bollacker  and enabled automatic algorithmic extraction and grouping of citations for any digital academic and scientific document. Where previous citation extraction was a manual process, citation measures could now scale up and be computed for any scholarly and scientific field and document venue, not just those selected by organizations such as ISI. This led to the creation of new systems for public and automated citation indexing, the first being CiteSeer (now CiteSeerX, soon followed by Cora, which focused primarily on the field of computer science and information science. These were later followed by large scale academic domain citation systems such as the Google Scholar and Microsoft Academic. Such autonomous citation indexing is not yet perfect in citation extraction or citation clustering with an error rate estimated by some at 10% though a careful statistical sampling has yet to be done. This has resulted in such authors as Ann Arbor, Milton Keynes, and Walton Hall being credited with extensive academic output. SCI claims to create automatic citation indexing through purely programmatic methods. Even the older records have a similar magnitude of error.	Autonomous citation indexing was introduced in 1998 by Lee Giles, Steve Lawrence and Kurt Bollacker  and enabled automatic algorithmic extraction and grouping of citations for any digital academic and scientific document.	/m/05ytg0	Kurt_Bollacker	85	99	/computer/computer_scientist,/people/person,/user/kurt/default_domain/thoughtranker
With Steve Lawrence and Kurt Bollacker, Giles was responsible for the creation in 1997 of automatic citation indexing and CiteSeer, a public academic search engine and digital library for Computer and Information Science. Under his direction CiteSeer was moved to and is being maintained at the Pennsylvania State University. CiteSeer has been replaced by the Next Generation CiteSeer, CiteSeerX.	With Steve Lawrence and Kurt Bollacker, Giles was responsible for the creation in 1997 of automatic citation indexing and CiteSeer, a public academic search engine and digital library for Computer and Information Science.	/m/05ytg0	Kurt_Bollacker	24	38	/computer/computer_scientist,/people/person,/user/kurt/default_domain/thoughtranker
He is an associate director and founding faculty member of CERIAS at Purdue University along with Gene Spafford and Mikhail Atallah.	He is an associate director and founding faculty member of CERIAS at Purdue University along with Gene Spafford and Mikhail Atallah.	/m/0h7lqcs	Mikhail_Atallah	116	131	/people/person
He received his B.A. in Mathematics and Computer Science from Calvin College in 1983 and his PhD in Computer Sciences from Purdue University in 1987 under the supervision of Mikhail Atallah. He then served as a professor in the Department of Computer Science at Johns Hopkins University until 2001 and has since been a Chancellor's Professor at the University of California, Irvine where he is the Associate Dean for Faculty Development in the Donald Bren School of Information and Computer Sciences and Technical Director for the ICS Secure Computing and Networking Center (SCONCE).	in Mathematics and Computer Science from Calvin College in 1983 and his PhD in Computer Sciences from Purdue University in 1987 under the supervision of Mikhail Atallah.	/m/0h7lqcs	Mikhail_Atallah	153	168	/people/person
In 1999, Madhu Sudan and Venkatesan Guruswami at MIT published "Improved Decoding of Reed‚ÄìSolomon and Algebraic-Geometry Codes" introducing an algorithm that allowed for the correction of errors beyond half the minimum distance of the code. It applies to Reed‚ÄìSolomon codes and more generally to algebraic geometric codes. This algorithm produces a list of codewords (it is a list-decoding algorithm) and is based on interpolation and factorization of polynomials over  and its extensions.	In 1999, Madhu Sudan and Venkatesan Guruswami at MIT published "Improved Decoding of Reed‚ÄìSolomon and Algebraic-Geometry Codes" introducing an algorithm that allowed for the correction of errors beyond half the minimum distance of the code.	/m/021zh3	Madhu_Sudan	9	20	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
M. Night Shyamalan - Machalpur - Macherla - Machhiwara - Machhlishahr - Machilipatnam - Madambakkam - Madanpur - Madanrting - Madaram - Madathukulam - Madavaram - Maddur - Madhav National Park - Madhavnagar - Madhavrao Scindia - Madhoganj - Madhogarh - Madhugiri - Madhupur - Madhuri Dixit - Madhusudanpur - Madhya Bharat - Madhya Pradesh - Madhya Pradesh cricket team - Madhya Pradesh High Court - Madhya Pradesh Stock Exchange - Madhya Pradesh Vikas Congress - Madhu Sudan - Madippakkam - Madras (cloth) - Madras (city) - Madras bashai - Madras Presidency - Madukkarai - Madurai - Madurai District - Maduranthakam - Magadha - Magadhi language - Magadi - Magam - Mahabalipuram - Mahaban - Mahabharata - Mahadevapura - Mahadji Sindhia - Mahadula - Mahakali River - Mahalingpur - Prasanta Chandra Mahalanobis - Maham - Mahanadi River - Mahananda River - Maharaja - Maharajganj - Mahar - Maharashtra - Maharashtra Housing and Development Authority - Mahatma Gandhi - Mahbubnagar - Mahemdavad - Maheshtala - Mahi Kantha - Mahi River - Mahiari - Mahilpur - Mahira - Mahmud of Ghazni - Mahnar Bazar - Mahoba - Maholi - Mahona - Mahrajganj - Mahroni - Mahu Kalan - Mahua Dabra Haripura - Mahua Kheraganj - Mahudha - Mahuri - Mahuva - Mahuvar - Mahwa - Maibong - Maidan (Karnataka) - Maidan (Kolkata) - Mainaguri - Maindargi - Mairang - Mairwa - Maithili language - Maithon - Maitraka - Majgaon - Majhara Pipar Ehatmali - Majhauli Raj - Majholi - Majitha - Majuli - Makarba - Makardaha - Makhdumpur - Makhu - Makronia - Maksi - Maktampur - Makum - Makundapur - Malabar region - Malabar Coast - Malabar Coast moist forests - Malabar District - Malabar Hill - Malabars - Malaj Khand - Malankara Syrian Orthodox Church - Malappuram - Malappuram District - Malavalli - Malayalam calendar - Malayalam cinema - Malayalam language - Malayalam literature - Malhargarh - Malihabad - Malkangiri - Malkangiri District - Malkapur - Malkera - Malibu Hindu Temple - Mallamooppampatti - Mallankinaru - Mallar - Mallasamudram - Mallawan - Mallur, Ariyalur - Mallur, Karnataka - Mallur, Salem - Malluru - Malnad - Malwa - Maloud - Malout - Malpura - Malwan - Mamit - Manachanallur - Manadur - Manalmedu - Manalurpet - Manamadurai - Manapakkam - Manapparai - Manas National Park - Manavalakurichi - Manawar - Mancherial - Mandaikadu - Mandala - Mandalgarh - Mandamarri - Mandapam - Mandapeta - Mandarbani - Mandav - Mandawar - Mandi Dabwali - Mandideep - Mandla - Mandla District - Mandovi River - Mandsaur - Mandsaur District - Mandu - Mandya - Mandya District - Manegaon - Maneka Gandhi - Maner - Mangalampet - Mangaldoi - Mangalore - Mangalvedhe - Mangawan - Manglaur - Manglaya Sadak - Mango - Mangrol - Mangrulpir - Manihari - Manikpur - Manikpur Sarhat - Manimutharu - Manipur - Maniyar - Manjhanpur - Manjula Ghattamaneni - Manjula Vijayakumar - Manmohan Singh - Manmohan Waris - Manoj Das- Manipal Institute of Technology - Manjlegaon - Mankachar - Mankapur - Manohar Thana - Mansar - Mansinhapur - Mant Khas - Manugur - Manwath - Mappilaiurani - Maradu - Maraimalainagar - Marakkanam - Maramangalathupatti - Marandahalli - Marathakkara - Marathi language - Marathi television - Marathwada - Marehra - Marhaura - Mariahu - Mariani - Markayankottai - Maruadih Railway Settlement - Marudur - Maruti Udyog - Marwar - Marwar Junction - Marwari language - Marwaris - Masaurhi - Maslandapur - Master of Computer Applications - Masulipatnam - Mathura - Maswasi - Mataundh - Mathabhanga - Mathigiri - Mathura District - Mattan - Mau Aima - Maudaha - Mauganj - Maunath Bhanjan - Maur - Maurawan - Mauryan dynasty - Mausimaa Temple - Mavilayi - Mavoor - Mawana - Mawlai - Mawsynram - Mayang Imphal - Mayiladuthurai - Mayurbhanj - Mecheri - Media of India - Meenakshi - Meena Kumari - Meenas - Meerpet - Meerut - Meerut District - Meerut Division - Meghahatuburu Forest village - Meghalaya - Meghalaya subtropical forests - Meghna River - Meghnagar - Meghraj - Mehara Gaon - Mehatpur Basdehra - Mehdawal - Meher Baba - Mehgaon - Mehmand - Mehnagar - Mekliganj - Melacheval - Melachokkanathapuram - Melagaram - Melamadai - Melamaiyur - Melathiruppanthuruthi - Melattur, Kerala - Melpattampakkam - Melvisharam - Memnagar - Memon people -Memunda- Mendu - Merta City - Metrication in India - Mettupalayam - Mewar - Mewat - Mhasla - Mhaswad - Mhow - Mhowgaon - Middle kingdoms of India - Midnight's Children - Mihijam - Mihona - Milak - Military of India - Minjur - Mira-Bhayandar - Mira Nair - Miranpur - Mirganj - Mirpur Turk -miryalaguda Mirza Ghalib - Mirzapur-cum-Vindhyachal - Misrikh-cum-Neemsar - Miss India - Mithapur - Mithe Pur - Mithila - Mitra (Vedic) - Mizoram - Modakurichi - Mogra Badshahpur - Mogravadi - Mohali - Mohammadabad - Mohammadi - Mohanpur - Mohanpur Mohammadpur - Mohanur - Mohgaon - Mohiniaattam - Mohiuddinagar - Mohiuddinpur - Mohpa - Mohpada Alias Wasambe - Mokameh - Molakalmuru - Molar Band - Monoharpur - Monsoon - Moolakaraipatti - Moonak - Moovarasampettai - Mopperipalayam - Moragudi - Moran Town - Moranhat - Morar Cantonment - Morarji Desai - Morena, India - Morena District - Morshi - Mother India - Mother Teresa - Motipur - Mount Abu - Mount Everest - Mowa - Mowad - Mowgli - Mrigala - Mudalgi - Mudbidri - Muddebihal - Mudgal - Mudigere - Mudkhed - Mudukulathur - Mudushedde - Mughal architecture - Mughal Empire - Mughalsarai Railway Settlement - Mugma - Muhajir (Pakistan) - Muhajir Urdu - Muhamma - Muhammad Ali Jinnah - Muhammad of Ghor - Muhammadabad - Mukandgarh - Mukasipidariyur - Mukerian - Mukhiguda - Mukkudal - Mukrampur Khema - Muktsar - Mulagumudu - Mulanur - Mulavukad - Mulayam Singh Yadav - Mulgund - Mulk Raj Anand - Mulki - Mullanpur Dakha - Mullanpur- Garibdas - Multai - Mulur - Mumbai - Mumbai Police - Mumbai Suburban District - Mumbai University Institute of Chemical Technology - Mumtaz Mahal - Munda languages - Mundargi - Mundera Bazar - Munderi - Mundgod - Mundi - Mundia - Mundka - Mundra - Mundwa - Mungaoli - Mungeli - Muni Ki Reti - Munirabad Project Area - Munnur - Munsiyari - Murli Manohar Joshi - Muradnagar - Muragachha - Murbad - Murgathaul - Murgud - Murliganj - Murtijapur - Muruganpalayam - Murum - Murwara (Katni) - Musabani - Musafirkhana - Musi River - Music of India - Musiri - Muslim - Mussoori - Mustafabad - Muthupet - Muthur - Muttayyapuram - Muzaffarid dynasty - Mysore - Mysore District - Mysore Division - Mysore (region) - Mysore Kingdom - Mysore state	M. Night Shyamalan - Machalpur - Macherla - Machhiwara - Machhlishahr - Machilipatnam - Madambakkam - Madanpur - Madanrting - Madaram - Madathukulam - Madavaram - Maddur - Madhav National Park - Madhavnagar - Madhavrao Scindia - Madhoganj - Madhogarh - Madhugiri - Madhupur - Madhuri Dixit - Madhusudanpur - Madhya Bharat - Madhya Pradesh - Madhya Pradesh cricket team - Madhya Pradesh High Court - Madhya Pradesh Stock Exchange - Madhya Pradesh Vikas Congress - Madhu Sudan - Madippakkam - Madras (cloth) - Madras (city) - Madras bashai - Madras Presidency - Madukkarai - Madurai - Madurai District - Maduranthakam - Magadha - Magadhi language - Magadi - Magam - Mahabalipuram - Mahaban - Mahabharata - Mahadevapura - Mahadji Sindhia - Mahadula - Mahakali River - Mahalingpur - Prasanta Chandra Mahalanobis - Maham - Mahanadi River - Mahananda River - Maharaja - Maharajganj - Mahar - Maharashtra - Maharashtra Housing and Development Authority - Mahatma Gandhi - Mahbubnagar - Mahemdavad - Maheshtala - Mahi Kantha - Mahi River - Mahiari - Mahilpur - Mahira - Mahmud of Ghazni - Mahnar Bazar - Mahoba - Maholi - Mahona - Mahrajganj - Mahroni - Mahu Kalan - Mahua Dabra Haripura - Mahua Kheraganj - Mahudha - Mahuri - Mahuva - Mahuvar - Mahwa - Maibong - Maidan (Karnataka) - Maidan (Kolkata) - Mainaguri - Maindargi - Mairang - Mairwa - Maithili language - Maithon - Maitraka - Majgaon - Majhara Pipar Ehatmali - Majhauli Raj - Majholi - Majitha - Majuli - Makarba - Makardaha - Makhdumpur - Makhu - Makronia - Maksi - Maktampur - Makum - Makundapur - Malabar region - Malabar Coast - Malabar Coast moist forests - Malabar District - Malabar Hill - Malabars - Malaj Khand - Malankara Syrian Orthodox Church - Malappuram - Malappuram District - Malavalli - Malayalam calendar - Malayalam cinema - Malayalam language - Malayalam literature - Malhargarh - Malihabad - Malkangiri - Malkangiri District - Malkapur - Malkera - Malibu Hindu Temple - Mallamooppampatti - Mallankinaru - Mallar - Mallasamudram - Mallawan - Mallur, Ariyalur - Mallur, Karnataka - Mallur, Salem - Malluru - Malnad - Malwa - Maloud - Malout - Malpura - Malwan - Mamit - Manachanallur - Manadur - Manalmedu - Manalurpet - Manamadurai - Manapakkam - Manapparai - Manas National Park - Manavalakurichi - Manawar - Mancherial - Mandaikadu - Mandala - Mandalgarh - Mandamarri - Mandapam - Mandapeta - Mandarbani - Mandav - Mandawar - Mandi Dabwali - Mandideep - Mandla - Mandla District - Mandovi River - Mandsaur - Mandsaur District - Mandu - Mandya - Mandya District - Manegaon - Maneka Gandhi - Maner - Mangalampet - Mangaldoi - Mangalore - Mangalvedhe - Mangawan - Manglaur - Manglaya Sadak - Mango - Mangrol - Mangrulpir - Manihari - Manikpur - Manikpur Sarhat - Manimutharu - Manipur - Maniyar - Manjhanpur - Manjula Ghattamaneni - Manjula Vijayakumar - Manmohan Singh - Manmohan Waris - Manoj Das- Manipal Institute of Technology - Manjlegaon - Mankachar - Mankapur - Manohar Thana - Mansar - Mansinhapur - Mant Khas - Manugur - Manwath - Mappilaiurani - Maradu - Maraimalainagar - Marakkanam - Maramangalathupatti - Marandahalli - Marathakkara - Marathi language - Marathi television - Marathwada - Marehra - Marhaura - Mariahu - Mariani - Markayankottai - Maruadih Railway Settlement - Marudur - Maruti Udyog - Marwar - Marwar Junction - Marwari language - Marwaris - Masaurhi - Maslandapur - Master of Computer Applications - Masulipatnam - Mathura - Maswasi - Mataundh - Mathabhanga - Mathigiri - Mathura District - Mattan - Mau Aima - Maudaha - Mauganj - Maunath Bhanjan - Maur - Maurawan - Mauryan dynasty - Mausimaa Temple - Mavilayi - Mavoor - Mawana - Mawlai - Mawsynram - Mayang Imphal - Mayiladuthurai - Mayurbhanj - Mecheri - Media of India - Meenakshi - Meena Kumari - Meenas - Meerpet - Meerut - Meerut District - Meerut Division - Meghahatuburu Forest village - Meghalaya - Meghalaya subtropical forests - Meghna River - Meghnagar - Meghraj - Mehara Gaon - Mehatpur Basdehra - Mehdawal - Meher Baba - Mehgaon - Mehmand - Mehnagar - Mekliganj - Melacheval - Melachokkanathapuram - Melagaram - Melamadai - Melamaiyur - Melathiruppanthuruthi - Melattur, Kerala - Melpattampakkam - Melvisharam - Memnagar - Memon people -Memunda- Mendu - Merta City - Metrication in India - Mettupalayam - Mewar - Mewat - Mhasla - Mhaswad - Mhow - Mhowgaon - Middle kingdoms of India - Midnight's Children - Mihijam - Mihona - Milak - Military of India - Minjur - Mira-Bhayandar - Mira Nair - Miranpur - Mirganj - Mirpur Turk -miryalaguda Mirza Ghalib - Mirzapur-cum-Vindhyachal - Misrikh-cum-Neemsar - Miss India - Mithapur - Mithe Pur - Mithila - Mitra (Vedic) - Mizoram - Modakurichi - Mogra Badshahpur - Mogravadi - Mohali - Mohammadabad - Mohammadi - Mohanpur - Mohanpur Mohammadpur - Mohanur - Mohgaon - Mohiniaattam - Mohiuddinagar - Mohiuddinpur - Mohpa - Mohpada Alias Wasambe - Mokameh - Molakalmuru - Molar Band - Monoharpur - Monsoon - Moolakaraipatti - Moonak - Moovarasampettai - Mopperipalayam - Moragudi - Moran Town - Moranhat - Morar Cantonment - Morarji Desai - Morena, India - Morena District - Morshi - Mother India - Mother Teresa - Motipur - Mount Abu - Mount Everest - Mowa - Mowad - Mowgli - Mrigala - Mudalgi - Mudbidri - Muddebihal - Mudgal - Mudigere - Mudkhed - Mudukulathur - Mudushedde - Mughal architecture - Mughal Empire - Mughalsarai Railway Settlement - Mugma - Muhajir (Pakistan) - Muhajir Urdu - Muhamma - Muhammad Ali Jinnah - Muhammad of Ghor - Muhammadabad - Mukandgarh - Mukasipidariyur - Mukerian - Mukhiguda - Mukkudal - Mukrampur Khema - Muktsar - Mulagumudu - Mulanur - Mulavukad - Mulayam Singh Yadav - Mulgund - Mulk Raj Anand - Mulki - Mullanpur Dakha - Mullanpur- Garibdas - Multai - Mulur - Mumbai - Mumbai Police - Mumbai Suburban District - Mumbai University Institute of Chemical Technology - Mumtaz Mahal - Munda languages - Mundargi - Mundera Bazar - Munderi - Mundgod - Mundi - Mundia - Mundka - Mundra - Mundwa - Mungaoli - Mungeli - Muni Ki Reti - Munirabad Project Area - Munnur - Munsiyari - Murli Manohar Joshi - Muradnagar - Muragachha - Murbad - Murgathaul - Murgud - Murliganj - Murtijapur - Muruganpalayam - Murum - Murwara (Katni) - Musabani - Musafirkhana - Musi River - Music of India - Musiri - Muslim - Mussoori - Mustafabad - Muthupet - Muthur - Muttayyapuram - Muzaffarid dynasty - Mysore - Mysore District - Mysore Division - Mysore (region) - Mysore Kingdom - Mysore state	/m/021zh3	Madhu_Sudan	463	474	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
The 2001 G√∂del Prize was awarded to Sanjeev Arora, Uriel Feige, Shafi Goldwasser, Carsten Lund, L√°szl√≥ Lov√°sz, Rajeev Motwani, Shmuel Safra, Madhu Sudan, and Mario Szegedy for work on the PCP theorem and its connection to hardness of approximation.	The 2001 G√∂del Prize was awarded to Sanjeev Arora, Uriel Feige, Shafi Goldwasser, Carsten Lund, L√°szl√≥ Lov√°sz, Rajeev Motwani, Shmuel Safra, Madhu Sudan, and Mario Szegedy for work on the PCP theorem and its connection to hardness of approximation.	/m/021zh3	Madhu_Sudan	141	152	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
Thomas Jakobsen introduced a probabilistic version of the interpolation attack using Madhu Sudan's algorithm for improved decoding of Reed-Solomon codes. This attack can work even when an algebraic relationship between plaintexts and ciphertexts holds for only a fraction of values.	Thomas Jakobsen introduced a probabilistic version of the interpolation attack using Madhu Sudan's algorithm for improved decoding of Reed-Solomon codes.	/m/021zh3	Madhu_Sudan	85	96	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
Venkatesan Guruswami (born 1976) is a computer scientist at Carnegie Mellon University in Pittsburgh, USA. He did his schooling at Padma Seshadri Bala Bhavan, one of the premier educational institutions in Chennai, India. He completed his undergraduate in Computer Science from IIT Madras and his doctorate from Massachusetts Institute of Technology under the supervision of Madhu Sudan in 2001 . After receiving his PhD, he spent a year at UC Berkeley as a Miller Fellow, and then was a member of the faculty at the University of Washington from 2002 to 2009. His primary area of research is Computer Science, where he is well known for his work on error-correcting codes. Following 2007, he was on leave from University of Washington. During 2007-2008, he visited IAS at Princeton University as a Member of School of Mathematics. He also visited SCS at Carnegie Mellon University during 2008-09 as a Visiting Faculty. In July 2009, he joined the School of Computer Science at Carnegie Mellon University as Associate Professor in the Computer Science Department.	He completed his undergraduate in Computer Science from IIT Madras and his doctorate from Massachusetts Institute of Technology under the supervision of Madhu Sudan in 2001 .	/m/021zh3	Madhu_Sudan	153	164	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
The contributors to The Princeton Companion to Mathematics consist of 133 of the world's best mathematicians. Timothy Gowers, its editor, is the recipient of the Fields Medal, considered to be the top honor in mathematics. Other contributors include Fields medalists Michael Atiyah, Alain Connes, Charles Fefferman, and Terence Tao, and well-known mathematicians Noga Alon, George Andrews, B√©la Bollob√°s, John P. Burgess, Clifford Cocks, Ingrid Daubechies, Persi Diaconis, Jordan Ellenberg, Oded Goldreich, Andrew Granville, Jeremy Gray, Frank Kelly, Sergiu Klainerman, Jon Kleinberg, J√°nos Koll√°r, Peter Lax, Dusa McDuff, Barry Mazur, Carl Pomerance, Eleanor Robson, Peter Sarnak, Madhu Sudan, Clifford Taubes, and Avi Wigderson.	Other contributors include Fields medalists Michael Atiyah, Alain Connes, Charles Fefferman, and Terence Tao, and well-known mathematicians Noga Alon, George Andrews, B√©la Bollob√°s, John P. Burgess, Clifford Cocks, Ingrid Daubechies, Persi Diaconis, Jordan Ellenberg, Oded Goldreich, Andrew Granville, Jeremy Gray, Frank Kelly, Sergiu Klainerman, Jon Kleinberg, J√°nos Koll√°r, Peter Lax, Dusa McDuff, Barry Mazur, Carl Pomerance, Eleanor Robson, Peter Sarnak, Madhu Sudan, Clifford Taubes, and Avi Wigderson.	/m/021zh3	Madhu_Sudan	459	470	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
He is also known for his joint work with Sanjeev Arora, Madhu Sudan, Rajeev Motwani, and Mario Szegedy that discovered the existence of probabilistically checkable proofs for NP-hard problems and used them to prove hardness results for approximation problems; in 2001 he and his co-authors received the G√∂del Prize for their share in these discoveries.	He is also known for his joint work with Sanjeev Arora, Madhu Sudan, Rajeev Motwani, and Mario Szegedy that discovered the existence of probabilistically checkable proofs for NP-hard problems and used them to prove hardness results for approximation problems; in 2001 he and his co-authors received the G√∂del Prize for their share in these discoveries.	/m/021zh3	Madhu_Sudan	56	67	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
In coding theory, folded Reed‚ÄìSolomon codes are like Reed‚ÄìSolomon codes, which are obtained by mapping  Reed‚ÄìSolomon codewords over a larger alphabet by careful bundling of codeword symbols. They are also a special case of Parvaresh‚ÄìVardy codes. Using optimal parameters one can decode with a rate of R, and achieve a decoding radius of 1¬†‚àí¬†R. The term "folded Reed‚ÄìSolomon codes" was coined in a paper by V.Y. Krachkovsky with an algorithm that presented Reed‚ÄìSolomon codes with many random "phased burst" errors . The list-decoding algorithm for folded RS codes corrects beyond the  bound for Reed‚ÄìSolomon codes achieved by the Guruswami‚ÄìSudan algorithm for such phased burst errors.	The list-decoding algorithm for folded RS codes corrects beyond the  bound for Reed‚ÄìSolomon codes achieved by the Guruswami‚ÄìSudan algorithm for such phased burst errors.	/m/021zh3	Madhu_Sudan	124	129	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
There are many efficient algorithms that can perform List decoding. list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first. Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first.	/m/021zh3	Madhu_Sudan	55	60	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
There are many efficient algorithms that can perform List decoding. list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first. Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	/m/021zh3	Madhu_Sudan	34	39	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
There are many efficient algorithms that can perform List decoding. list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first. Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first.	/m/021zh3	Madhu_Sudan	55	60	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
There are many efficient algorithms that can perform List decoding. list decoding algorithm for Reed‚ÄìSolomon (RS) codes by Sudan which can correct up to  errors is give first. Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	Later on more efficient Guruswami‚ÄìSudan list decoding algorithm, which can correct up to  errors is discussed.	/m/021zh3	Madhu_Sudan	34	39	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
Fuzzy extractors convert biometric data into random strings, which makes it possible to apply cryptographic techniques for biometric security. They are used to encrypt and authenticate users records, with biometric inputs as a key. Historically, the first biometric system of this kind was designed by Juels and Wattenberg and was called "Fuzzy commitment", where the cryptographic key is decommitted using biometric data. "Fuzzy", in that context, implies that the value close to the original one can extract the committed value. Later, Juels and Sudan came up with Fuzzy vault schemes which are order invariant for the fuzzy commitment scheme but uses a Reed‚ÄìSolomon code. Codeword is evaluated by polynomial and the secret message is inserted as the coefficients of the polynomial. The polynomial is evaluated for different values of a set of features of the biometric data. So Fuzzy commitment and Fuzzy Vault were per-cursor to Fuzzy extractors. Fuzzy extractor is a biometric tool to authenticate a user using its own biometric template as a key. They extract uniform and random string  from its input  that has tolerance for noise. If the input changes to  but is still close to , the string  can still be re-constructed. When  is used first time to re-construct, it outputs a helper string  which can be made public without compromising the security of  (used for encryption and authentication key) and  (helper string) is stored to recover . They remain secure even when the adversary modifies  (key agreement between a user and a server based only on a biometric input). This article is based on the papers "Fuzzy Extractors: A Brief Survey of Results from 2004 to 2006" and "Fuzzy Extractors: How to Generate Strong Keys from Biometrics and Other Noisy Data" by Yevgeniy Dodis, Rafail Ostrovsky, Leonid Reyzin and Adam Smith	Later, Juels and Sudan came up with Fuzzy vault schemes which are order invariant for the fuzzy commitment scheme but uses a Reed‚ÄìSolomon code.	/m/021zh3	Madhu_Sudan	17	22	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
Foundations and Trends in Theoretical Computer Science is a peer-reviewed scientific journal that publishes long survey and tutorial articles in the field of theoretical computer science. It was established in 2005 and is published by Now Publishers. The founding editor-in-chief is Madhu Sudan (Microsoft Research).	The founding editor-in-chief is Madhu Sudan (Microsoft Research).	/m/021zh3	Madhu_Sudan	32	43	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person
The Paris Kanellakis Theory and Practice Award is granted yearly by the Association for Computing Machinery (ACM) to honor "specific theoretical accomplishments that have had a significant and demonstrable effect on the practice of computing". It was instituted in 1996, in memory of Paris C. Kanellakis, a computer scientist who died with his immediate family in an airplane crash in South America in 1995 (American Airlines Flight 965). The award is accompanied by a prize of $10,000 and is endowed by contributions from Kanellakis's parents, with additional financial support provided by four ACM Special Interest Groups (SIGACT, SIGDA, SIGMOD, and SIGPLAN), the ACM SIG Projects Fund, and individual contributions.	It was instituted in 1996, in memory of Paris C. Kanellakis, a computer scientist who died with his immediate family in an airplane crash in South America in 1995 (American Airlines Flight 965).	/m/08hfh9	Paris_Kanellakis	40	59	/computer/computer_scientist,/education/academic,/people/deceased_person,/people/person
SAT was the first known NP-complete problem, as proved by Stephen Cook in 1971 and independently by Leonid Levin in 1973. Until that time, the concept of an NP-complete problem did not even exist. The problem remains NP-complete even if all expressions are written in conjunctive normal form with 3 variables per clause (3-CNF), yielding the 3SAT problem. This means the expression has the form:	SAT was the first known NP-complete problem, as proved by Stephen Cook in 1971 and independently by Leonid Levin in 1973.	/m/09tcd	Stephen_Cook	58	70	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The P versus NP problem is a major unsolved problem in computer science. Informally, it asks whether every problem whose solution can be quickly verified by a computer can also be quickly solved by a computer. It was introduced in 1971 by Stephen Cook in his seminal paper "The complexity of theorem proving procedures" and is considered by many to be the most important open problem in the field. It is one of the seven Millennium Prize Problems selected by the Clay Mathematics Institute to carry a US$ 1,000,000 prize for the first correct solution.	It was introduced in 1971 by Stephen Cook in his seminal paper "The complexity of theorem proving procedures" and is considered by many to be the most important open problem in the field.	/m/09tcd	Stephen_Cook	29	41	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
But such changes may pale in significance compared to the revolution an efficient method for solving NP-complete problems would cause in mathematics itself. According to Stephen Cook,	According to Stephen Cook,	/m/09tcd	Stephen_Cook	13	25	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 1967, Manuel Blum developed an axiomatic complexity theory based on his axioms and proved an important result, the so-called, speed-up theorem. The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete. In 1972, Richard Karp took this idea a leap forward with his landmark paper, "Reducibility Among Combinatorial Problems", in which he showed that 21 diverse combinatorial and graph theoretical problems, each infamous for its computational intractability, are NP-complete.	The field really began to flourish in 1971 when the US researcher Stephen Cook and, working independently, Leonid Levin in the USSR, proved that there exist practically relevant problems that are NP-complete.	/m/09tcd	Stephen_Cook	66	78	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In complexity theory, the class NC (for "Nick's Class") is the set of decision problems decidable in polylogarithmic time on a parallel computer with a polynomial number of processors. In other words, a problem is in NC if there exist constants c and k such that it can be solved in time O(logc¬†n) using O(nk) parallel processors. Stephen Cook coined the name "Nick's class" after Nick Pippenger, who had done extensive research on circuits with polylogarithmic depth and polynomial size.	Stephen Cook coined the name "Nick's class" after Nick Pippenger, who had done extensive research on circuits with polylogarithmic depth and polynomial size.	/m/09tcd	Stephen_Cook	0	12	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
More than 250 Michigan graduates have served as legislators as either United States Senator (40 graduates) or as a Congressional representative (over 200 graduates), including former House Minority Leader Dick Gephardt and U.S. Representative Justin Amash, who represents Michigan's Third Congressional District. U-M's contributions to aeronautics include aircraft designer Clarence "Kelly" Johnson of Lockheed Skunk Works fame, Lockheed president Willis Hawkins, and several astronauts including the all-U-M crew of Gemini 4 and the all-Michigan crew of Apollo 15. U-M counts among its matriculants nineteen billionaires and prominent company founders and co-founders including Google co-founder Larry Page and Dr. J. Robert Beyster who founded Science Applications International Corporation (SAIC) in 1969. Several U-M graduates contributed greatly to the field of computer science, including Claude Shannon (who made major contributions to the mathematics of information theory), and Turing Award winners Edgar Codd, Stephen Cook, and Frances E. Allen.	Several U-M graduates contributed greatly to the field of computer science, including Claude Shannon (who made major contributions to the mathematics of information theory), and Turing Award winners Edgar Codd, Stephen Cook, and Frances E. Allen.	/m/09tcd	Stephen_Cook	211	223	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The time hierarchy theorem for nondeterministic Turing machines was originally proven by Stephen Cook in 1972. It was improved to its current form via a complex proof by Joel Seiferas, Michael Fischer, and Albert Meyer in 1978. Finally in 1983, Stanislav ≈Ω√°k achieved the same result with the simple proof taught today. The time hierarchy theorem for nondeterministic Turing machines states that if g(n) is a time-constructible function, and f(n+1) = o(g(n)), then	The time hierarchy theorem for nondeterministic Turing machines was originally proven by Stephen Cook in 1972.	/m/09tcd	Stephen_Cook	89	101	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The clique decision problem is NP-complete. It was one of Richard Karp's original 21 problems shown NP-complete in his 1972 paper "Reducibility Among Combinatorial Problems". This problem was also mentioned in Stephen Cook's paper introducing the theory of NP-complete problems. Thus, the problem of finding a maximum clique is NP-hard: if one could solve it, one could also solve the decision problem, by comparing the size of the maximum clique to the size parameter given as input in the decision problem.	This problem was also mentioned in Stephen Cook's paper introducing the theory of NP-complete problems.	/m/09tcd	Stephen_Cook	35	47	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
These developments have led to the modern study of logic and computability, and indeed the field of theoretical computer science as a whole. Information theory was added to the field with a 1948 mathematical theory of communication by Claude Shannon. In the same decade, Donald Hebb introduced a mathematical model of learning in the brain. With mounting biological data supporting this hypothesis with some modification, the fields of neural networks and parallel distributed processing were established. In 1971, Stephen Cook and, working independently, Leonid Levin, proved that there exist practically relevant problems that are NP-complete ‚Äì a landmark result in computational complexity theory.	In 1971, Stephen Cook and, working independently, Leonid Levin, proved that there exist practically relevant problems that are NP-complete ‚Äì a landmark result in computational complexity theory.	/m/09tcd	Stephen_Cook	9	21	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Toom‚ÄìCook, sometimes known as Toom-3, named after Andrei Toom and Stephen Cook, is a multiplication algorithm, a method of multiplying two large integers.	Toom‚ÄìCook, sometimes known as Toom-3, named after Andrei Toom and Stephen Cook, is a multiplication algorithm, a method of multiplying two large integers.	/m/09tcd	Stephen_Cook	66	78	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Levin and Stephen Cook independently discovered the existence of NP-complete problems. This NP-completeness theorem, often called the Cook-Levin Theorem, was a basis for one of the seven Millennium Prize Problems declared by the Clay Mathematics Institute with a $1,000,000 prize offered. The Cook‚ÄìLevin theorem was a breakthrough in computer science and an important step in the development of the theory of computational complexity. Levin's journal article on this theorem was published in 1973; he had lectured on the ideas in it for some years before that time (see Trakhtenbrot's survey), though complete formal writing of the results took place after Cook's publication.	Levin and Stephen Cook independently discovered the existence of NP-complete problems.	/m/09tcd	Stephen_Cook	10	22	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The complexity class, Nick's Class (NC), of problems quickly solvable on a parallel computer, was named by Stephen Cook after Nick Pippenger for his research on circuits with polylogarithmic depth and polynomial size.	The complexity class, Nick's Class (NC), of problems quickly solvable on a parallel computer, was named by Stephen Cook after Nick Pippenger for his research on circuits with polylogarithmic depth and polynomial size.	/m/09tcd	Stephen_Cook	107	119	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The question of whether such an algorithm exists is called the P versus NP problem and it is widely considered the most important unsolved problem in theoretical computer science. The theorem is named after Stephen Cook and Leonid Levin.	The theorem is named after Stephen Cook and Leonid Levin.	/m/09tcd	Stephen_Cook	27	39	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The concept of NP-completeness was developed in the late 1960s and early 1970s in parallel by researchers in the US and the USSR. In the US in 1971, Stephen Cook published his paper "The complexity of theorem proving procedures" in conference proceedings of the newly founded ACM Symposium on Theory of Computing. Richard Karp's subsequent paper, "Reducibility among combinatorial problems", generated renewed interest in Cook's paper by providing a list of 21 NP-complete problems. Cook and Karp received a Turing Award for this work.	In the US in 1971, Stephen Cook published his paper "The complexity of theorem proving procedures" in conference proceedings of the newly founded ACM Symposium on Theory of Computing.	/m/09tcd	Stephen_Cook	19	31	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A polynomial-time Turing reduction is known as a Cook reduction, after Stephen Cook.	A polynomial-time Turing reduction is known as a Cook reduction, after Stephen Cook.	/m/09tcd	Stephen_Cook	71	83	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In computational complexity theory, Karp's 21 NP-complete problems are a set of computational problems which are NP-complete. In his 1972 paper, "Reducibility Among Combinatorial Problems", Richard Karp used Stephen Cook's 1971 theorem that the boolean satisfiability problem is NP-complete (also called the Cook-Levin theorem) to show that there is a polynomial time many-one reduction from the boolean satisfiability problem to each of 21 combinatorial and graph theoretical computational problems, thereby showing that they are all NP-complete. This was one of the first demonstrations that many natural computational problems occurring throughout computer science are computationally intractable. This demonstration drove interest in the study of NP-completeness and the P = NP problem.	In his 1972 paper, "Reducibility Among Combinatorial Problems", Richard Karp used Stephen Cook's 1971 theorem that the boolean satisfiability problem is NP-complete (also called the Cook-Levin theorem) to show that there is a polynomial time many-one reduction from the boolean satisfiability problem to each of 21 combinatorial and graph theoretical computational problems, thereby showing that they are all NP-complete.	/m/09tcd	Stephen_Cook	82	94	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Savitch received his PhD in mathematics from UC Berkeley in 1969 under the supervision of Stephen Cook. Since then he has been a professor at UCSD where he is currently a professor emeritus in the computer science department.	Savitch received his PhD in mathematics from UC Berkeley in 1969 under the supervision of Stephen Cook.	/m/09tcd	Stephen_Cook	90	102	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The following 2003‚Äì04 season, Bosman finished second in the batting charts behind Stephen Cook, scoring 491 runs at an average of 61.37. The campaign was highlighted by a 57 ball 99 not out, in which he hit 13 boundaries, including eight sixes against Eastern Province. The end of that season saw the introduction of Pro20 cricket to South Africa. Bosman topped the batting charts in this form, making 219 runs for Eagles, the combined Free State and Griqualand West cricket team. In his first match of the campaign, he made his best score of the season, hitting 84 not out in 44 balls as Eagles beat Dolphins by 4 runs.	The following 2003‚Äì04 season, Bosman finished second in the batting charts behind Stephen Cook, scoring 491 runs at an average of 61.37.	/m/09tcd	Stephen_Cook	82	94	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In an influential paper Stephen A. Cook and Robert A. Reckhow define their version of a RASP:	In an influential paper Stephen A. Cook and Robert A. Reckhow define their version of a RASP:	/m/09tcd	Stephen_Cook	24	39	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In computational complexity theory, SC (Steve's Class, named after Stephen Cook) is the complexity class of problems solvable by a deterministic Turing machine in polynomial time (class P) and polylogarithmic space (class PolyL) (that is, O((log n)k) space for some constant k). It may also be called DTISP(poly, polylog), where DTISP stands for deterministic time and space. Note that the definition of SC differs from P  PolyL, since for the former, it is required that the algorithm runs both in polynomial time and polylogarithmic space; while for the latter, two separate algorithms will suffice: One that runs in polynomial time, and another which runs in polylogarithmic space (it is unknown whether these are equivalent).	In computational complexity theory, SC (Steve's Class, named after Stephen Cook) is the complexity class of problems solvable by a deterministic Turing machine in polynomial time (class P) and polylogarithmic space (class PolyL) (that is, O((log n)k) space for some constant k).	/m/09tcd	Stephen_Cook	67	79	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The prize carries a monetary award of $10,000, funded jointly by the three institutes. The prize winners have often gone on to win other prizes. The inaugral prize winner was H.S.M. Coxeter. Other prominent prize winners include Stephen Cook and William Thomas Tutte. The prize is usually given to individuals with the exception of 2003 when it was given jointly to John McKay and Edwin Perkins.	Other prominent prize winners include Stephen Cook and William Thomas Tutte.	/m/09tcd	Stephen_Cook	38	50	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Allmusic review should probably, as usual, be ignored as uninformative, stuffy and snobbish. Stephen Cook describes the album as "appealing without being especially challenging" and "a good introduction to the Art Ensemble of Chicago's vast catalog".	Stephen Cook describes the album as "appealing without being especially challenging" and "a good introduction to the Art Ensemble of Chicago's vast catalog".	/m/09tcd	Stephen_Cook	0	12	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The concept of NP-completeness was introduced in 1971 by Stephen Cook in a paper entitled The complexity of theorem-proving procedures on pages 151‚Äì158 of the Proceedings of the 3rd Annual ACM Symposium on Theory of Computing, though the term NP-complete did not appear anywhere in his paper. At that computer science conference, there was a fierce debate among the computer scientists about whether NP-complete problems could be solved in polynomial time on a deterministic Turing machine. John Hopcroft brought everyone at the conference to a consensus that the question of whether NP-complete problems are solvable in polynomial time should be put off to be solved at some later date, since nobody had any formal proofs for their claims one way or the other. This is known as the question of whether P=NP.	The concept of NP-completeness was introduced in 1971 by Stephen Cook in a paper entitled The complexity of theorem-proving procedures on pages 151‚Äì158 of the Proceedings of the 3rd Annual ACM Symposium on Theory of Computing, though the term NP-complete did not appear anywhere in his paper.	/m/09tcd	Stephen_Cook	57	69	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The official statement of the problem was given by Stephen Cook.	The official statement of the problem was given by Stephen Cook.	/m/09tcd	Stephen_Cook	51	63	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Historically, Frege's propositional calculus was the first propositional proof system. The general definition of a propositional proof system is due to Stephen Cook and Robert A. Reckhow (1979).	The general definition of a propositional proof system is due to Stephen Cook and Robert A. Reckhow (1979).	/m/09tcd	Stephen_Cook	65	77	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Pitassi earned bachelors and masters degrees at Pennsylvania State University before moving to the University of Toronto for her doctoral studies; she earned her Ph.D. in 1992 from Toronto under the supervision of Stephen Cook. After postdoctoral studies at the University of California, San Diego and faculty positions at the University of Pittsburgh and University of Arizona, she returned to Toronto in 2001, and is now a professor in the University of Toronto Department of Computer Science and University of Toronto Department of Mathematics.	Pitassi earned bachelors and masters degrees at Pennsylvania State University before moving to the University of Toronto for her doctoral studies; she earned her Ph.D. in 1992 from Toronto under the supervision of Stephen Cook.	/m/09tcd	Stephen_Cook	214	226	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Gordon Cook (born December 3, 1978, in Toronto) is a two-time Canadian Olympic sailor. He sails for the Royal Canadian Yacht Club. He is the son of Stephen Cook and Linda Cook.	He is the son of Stephen Cook and Linda Cook.	/m/09tcd	Stephen_Cook	17	29	/award/award_winner,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The first published literate programming environment was WEB, introduced by Donald Knuth in 1981 for his TeX typesetting system; it uses Pascal as its underlying programming language and TeX for typesetting of the documentation. The complete commented TeX source code was published in Knuth's TeX: The program, volume B of his 5-volume Computers and Typesetting. Knuth had privately used a literate programming system called DOC as early as 1979. He was inspired by the ideas of Pierre-Arnoul de Marneffe. The free CWEB, written by Knuth and Silvio Levy, is WEB adapted for C and C++, runs on most operating systems and can produce TeX and PDF documentation.	He was inspired by the ideas of Pierre-Arnoul de Marneffe.	/m/0615vz	Pierre-Arnoul_de_Marneffe	32	57	/people/person
Engelbart's research was funded by DARPA, and SRI's ARC became involved with the ARPANET, the precursor of the Internet. The first message on the ARPANET was sent by UCLA student programmer Charley Kline, at 10:30 p.m, on October 29, 1969 from Boelter Hall 3420. Supervised by Leonard Kleinrock, Kline transmitted from the university's SDS Sigma 7 Host computer to the Stanford Research Institute's SDS 940 Host computer. The message text was the word "login"; the "l" and the "o" letters were transmitted, but the system then crashed. Hence, the literal first message over the ARPANET was "lo". About an hour later, having recovered from the crash, the SDS Sigma 7 computer effected a full "login".	Supervised by Leonard Kleinrock, Kline transmitted from the university's SDS Sigma 7 Host computer to the Stanford Research Institute's SDS 940 Host computer.	/m/02cp3j	Leonard_Kleinrock	14	31	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
At the tip of the problem lay the issue of connecting separate physical networks to form one logical network. During the 1960s, Paul Baran (RAND Corporation) produced a study of survivable networks for the US military. Information transmitted across Baran's network would be divided into what he called 'message-blocks'. Independently, Donald Davies (National Physical Laboratory, UK), proposed and developed a similar network based on what he called packet-switching, the term that would ultimately be adopted. Leonard Kleinrock (MIT) developed a mathematical theory behind this technology. Packet-switching provides better bandwidth utilization and response times than the traditional circuit-switching technology used for telephony, particularly on resource-limited interconnection links.	Leonard Kleinrock (MIT) developed a mathematical theory behind this technology.	/m/02cp3j	Leonard_Kleinrock	0	17	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The first two nodes of what would become the ARPANET were interconnected between Leonard Kleinrock's Network Measurement Center at the UCLA's School of Engineering and Applied Science and Douglas Engelbart's NLS system at SRI International (SRI) in Menlo Park, California, on 29 October 1969. The third site on the ARPANET was the Culler-Fried Interactive Mathematics center at the University of California at Santa Barbara, and the fourth was the University of Utah Graphics Department. In an early sign of future growth, there were already fifteen sites connected to the young ARPANET by the end of 1971. These early years were documented in the 1972 film Computer Networks: The Heralds of Resource Sharing.	The first two nodes of what would become the ARPANET were interconnected between Leonard Kleinrock's Network Measurement Center at the UCLA's School of Engineering and Applied Science and Douglas Engelbart's NLS system at SRI International (SRI) in Menlo Park, California, on 29 October 1969.	/m/02cp3j	Leonard_Kleinrock	81	98	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Since radio circuits inherently possess a broadcast network topology (i.e., many or all nodes are connected to the network simultaneously), one of the first technical challenges faced in the implementation of packet radio networks was a means to control access to a shared communications channel. Professor Norman Abramson of the University of Hawaii developed a packet radio network known as ALOHAnet and performed a number of experiments around 1970 to develop methods to arbitrate access to a shared radio channel by network nodes. This system operated on UHF frequencies at 9600 baud. From this work the Aloha multiple access protocol was derived. Subsequent enhancements in channel access techniques made by Leonard Kleinrock et al. in 1975 would lead Robert Metcalfe to use carrier sense multiple access (CSMA) protocols in the design of the now commonplace Ethernet local area network (LAN) technology.	Subsequent enhancements in channel access techniques made by Leonard Kleinrock et al.	/m/02cp3j	Leonard_Kleinrock	61	78	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Cerf was born in New Haven, Connecticut, the son of Muriel (n√©e Gray), a homemaker, and Vinton Thurston Cerf, an aerospace executive. Cerf's first job after obtaining his B.S. degree in Mathematics from Stanford University was at IBM, where he worked for two years as a systems engineer supporting QUIKTRAN. He left IBM to attend graduate school at UCLA where he earned his M.S. degree in 1970 and his PhD degree in 1972. During his graduate student years, he studied under Professor Gerald Estrin, worked in Professor Leonard Kleinrock's data packet networking group that connected the first two nodes of the ARPANet, the predecessor to the Internet, and "contributed to a host-to-host protocol" for the ARPANet. While at UCLA, he also met Robert E. Kahn, who was working on the ARPANet hardware architecture. After receiving his doctorate, Cerf became an assistant professor at Stanford University from 1972‚Äì1976, where he conducted research on packet network interconnection protocols and co-designed the DoD TCP/IP protocol suite with Kahn. Cerf then moved to DARPA in 1976, where he stayed until 1982.	During his graduate student years, he studied under Professor Gerald Estrin, worked in Professor Leonard Kleinrock's data packet networking group that connected the first two nodes of the ARPANet, the predecessor to the Internet, and "contributed to a host-to-host protocol" for the ARPANet.	/m/02cp3j	Leonard_Kleinrock	97	114	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Leonard Kleinrock conducted early research in queueing theory which proved important in packet switching, and published a book in the related field of digital message switching (without the packets) in 1961; he also later played a leading role in building and management of the world's first packet-switched network, the ARPANET.	Leonard Kleinrock conducted early research in queueing theory which proved important in packet switching, and published a book in the related field of digital message switching (without the packets) in 1961; he also later played a leading role in building and management of the world's first packet-switched network, the ARPANET.	/m/02cp3j	Leonard_Kleinrock	0	17	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Work on queueing theory used in modern packet switching networks was performed in the early 1960s by Leonard Kleinrock. It was in this period that John Little gave a proof of the formula which now bears his name: Little's law. In 1961 John Kingman gave a formula for the mean waiting time in a G/G/1 queue: Kingman's formula.	Work on queueing theory used in modern packet switching networks was performed in the early 1960s by Leonard Kleinrock.	/m/02cp3j	Leonard_Kleinrock	101	118	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In telecommunications, message switching was the precursor of packet switching, where messages were routed in their entirety, one hop at a time. It was first introduced by Leonard Kleinrock in 1961. Message switching systems are nowadays mostly implemented over packet-switched or circuit-switched data networks. Each message is treated as a separate entity. Each message contains addressing information, and at each switch this information is read and the transfer path to the next switch is decided. Depending on network conditions, a conversation of several messages may not be transferred over the same path. Each message is stored (usually on hard drive due to RAM limitations) before being transmitted to the next switch. Because of this it is also known as a 'store-and-forward' network. Email is a common application for Message Switching. A delay in delivering email is allowed unlike real time data transfer between two computers.	It was first introduced by Leonard Kleinrock in 1961.	/m/02cp3j	Leonard_Kleinrock	27	44	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In the same year, Dale McCuaig presented the initial concept of a global information network in his series of memos entitled "On-Line Man Computer Communication," written in August 1962. However, the actual development of the internet must be credited to Lawrence G. Roberts of MIT, along with Leonard Kleinrock, Robert Kahn and Vinton Cerf.	However, the actual development of the internet must be credited to Lawrence G. Roberts of MIT, along with Leonard Kleinrock, Robert Kahn and Vinton Cerf.	/m/02cp3j	Leonard_Kleinrock	107	124	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Senator Albert Gore, Jr. began to craft the High Performance Computing and Communication Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report toward a National Research Network submitted to Congress by a group chaired by Leonard Kleinrock, professor of computer science at UCLA. The bill was passed on 9 December 1991 and led to the National Information Infrastructure (NII) which Al Gore called the "information superhighway". ARPANET was the subject of two IEEE Milestones, both dedicated in 2009.	Senator Albert Gore, Jr. began to craft the High Performance Computing and Communication Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report toward a National Research Network submitted to Congress by a group chaired by Leonard Kleinrock, professor of computer science at UCLA.	/m/02cp3j	Leonard_Kleinrock	252	269	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In 2010, Rabin was awarded the Tel Aviv University Dan David Prize ("Future" category), jointly with Leonard Kleinrock and Gordon E. Moore, for Computers and Telecommunications.	In 2010, Rabin was awarded the Tel Aviv University Dan David Prize ("Future" category), jointly with Leonard Kleinrock and Gordon E. Moore, for Computers and Telecommunications.	/m/02cp3j	Leonard_Kleinrock	101	118	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
On October 29, 1969, the world's first electronic computer network, ARPANET, was established between nodes at Leonard Kleinrock's lab at UCLA and Douglas Engelbart's lab at SRI. Interface Message Processors at both sites served as the backbone of the first Internet. The following year, Engelbart's lab installed the first TENEX system outside of BBN where it was developed. In addition to SRI and UCLA, UCSB and the University of Utah were part of the original four network nodes. By December 5, 1969, the entire four-node network was connected. In the 1970s, SRI developed packet-switched radio (a precursor to wireless networking), over-the-horizon radar, Deafnet, vacuum microelectronics, and software-implemented fault tolerance.	On October 29, 1969, the world's first electronic computer network, ARPANET, was established between nodes at Leonard Kleinrock's lab at UCLA and Douglas Engelbart's lab at SRI.	/m/02cp3j	Leonard_Kleinrock	110	127	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Ferguson attended UCLA where he earned a Ph.D. in computer science (focusing on virtual network algorithms) in 1999 after five years as an undergraduate and 13 years as a graduate student. His Ph.D. advisor was Leonard Kleinrock.	His Ph.D. advisor was Leonard Kleinrock.	/m/02cp3j	Leonard_Kleinrock	22	39	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
While Baran preferred the term "message blocks" for his units of communication, Donald Davies at the National Physical Laboratory in the United Kingdom coined the term "packet switching" in 1965 and applied the concept to a general-purpose computer network. Davies' key insight came with the realization that computer network traffic was inherently "bursty" with periods of silence, compared with relatively constant telephone traffic. Both men independently arrived at similar conclusions that the digital age required a new kind of communications network. Leonard Kleinrock, a contemporary working on analyzing data flow, also reached parallel conclusions when he developed a theoretical basis for the operation of packet networks in his Ph.D. thesis in 1961.	Leonard Kleinrock, a contemporary working on analyzing data flow, also reached parallel conclusions when he developed a theoretical basis for the operation of packet networks in his Ph.D. thesis in 1961.	/m/02cp3j	Leonard_Kleinrock	0	17	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
In December 1966 SDS shipped the entirely new Sigma series, starting with the 16-bit Sigma 2 and the 32-bit Sigma 7, both using common hardware internally. The success of the IBM System/360 and the rise of the 7-bit ASCII character standard was pushing all vendors to the 8-bit standard from their earlier 6-bit ones. SDS was one of the first companies to offer a machine intended as an alternative to the IBM System/360; although not compatible with the 360, it used similar data formats, the EBCDIC character code, and in other ways, such as its use of multiple registers rather than an accumulator, it was designed to have specifications that were comparable to those of the 360. Various versions of the Sigma 7 followed, including the cut-down Sigma 5 and re-designed Sigma 6. The Xerox Sigma 9 was a major re-design with instruction lookahead and other advanced features, while the Sigma 8 and Sigma 9 mod 3 were low-end machines offered as a migration path for the Sigma 5. Meanwhile, the French national champion CII, as licencee of SDS, sold about 60 Sigma 7 in Europe, and developed an upgrade with virtual memory and biprocessor capability, Iris 80. CII also manufactured and sold some 160 Sigma 2. The Sigma range was very successful in the niche real-time processing field, due to the sophisticated hardware interrupt structure and independent I/O processor. The first node of ARPANET was established by Leonard Kleinrock at UCLA with an SDS Sigma 7 system.	The first node of ARPANET was established by Leonard Kleinrock at UCLA with an SDS Sigma 7 system.	/m/02cp3j	Leonard_Kleinrock	45	62	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The first IMP was delivered to Leonard Kleinrock's group at UCLA on August 30, 1969. It used an SDS Sigma-7 host computer. Douglas Engelbart's group at the Stanford Research Institute (SRI) received the second IMP on October 1, 1969. It was attached to an SDS-940 host. The third IMP was installed in University of California, Santa Barbara on November 1, 1969. The fourth and final IMP was installed in the University of Utah in December 1969. The first communication test between two systems (UCLA and SRI) took place on October 29, 1969 when a login to the SRI machine was attempted, but only the first two letters could be transmitted. The SRI machine crashed upon reception of the 'g' character. A few minutes later the bug was fixed and the login attempt was successfully completed.	The first IMP was delivered to Leonard Kleinrock's group at UCLA on August 30, 1969.	/m/02cp3j	Leonard_Kleinrock	31	48	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
As a Senator, Gore began to craft the High Performance Computing Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science, Leonard Kleinrock, one of the central creators of the ARPANET (the ARPANET, first deployed by Kleinrock and others in 1969, is the predecessor of the Internet). The bill was passed on December 9, 1991 and led to the National Information Infrastructure (NII) which Gore referred to as the "information superhighway."	As a Senator, Gore began to craft the High Performance Computing Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science, Leonard Kleinrock, one of the central creators of the ARPANET (the ARPANET, first deployed by Kleinrock and others in 1969, is the predecessor of the Internet).	/m/02cp3j	Leonard_Kleinrock	264	281	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
It is notable for the lengthy interview with Leonard Kleinrock, who describes in detail his involvement with ARPANET. It also features interviews with:	It is notable for the lengthy interview with Leonard Kleinrock, who describes in detail his involvement with ARPANET.	/m/02cp3j	Leonard_Kleinrock	45	62	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Senator Al Gore developed the Act after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science Leonard Kleinrock, one of the creators of the ARPANET, which is regarded as the eve network of the Internet.	Senator Al Gore developed the Act after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science Leonard Kleinrock, one of the creators of the ARPANET, which is regarded as the eve network of the Internet.	/m/02cp3j	Leonard_Kleinrock	178	195	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
As a Senator, Gore began to craft the High Performance Computing and Communication Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science, Leonard Kleinrock, one of the central creators of the ARPANET (the ARPANET, first deployed by Kleinrock and others in 1969, is the predecessor of the Internet).	As a Senator, Gore began to craft the High Performance Computing and Communication Act of 1991 (commonly referred to as "The Gore Bill") after hearing the 1988 report Toward a National Research Network submitted to Congress by a group chaired by UCLA professor of computer science, Leonard Kleinrock, one of the central creators of the ARPANET (the ARPANET, first deployed by Kleinrock and others in 1969, is the predecessor of the Internet).	/m/02cp3j	Leonard_Kleinrock	282	299	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The contribution of Dr. Kamoun in the domain of hierarchical routing begun in 1979 with his professor at the University of California UCLA, Leonard Kleinrock. They argued that the optimal number of levels for an  router subnet is , requiring a total of  entries per router. They also shown that the increase in effective mean path length caused by hierarchical routing is sufficiently small that it is usually acceptable.	The contribution of Dr. Kamoun in the domain of hierarchical routing begun in 1979 with his professor at the University of California UCLA, Leonard Kleinrock.	/m/02cp3j	Leonard_Kleinrock	140	157	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
He received a French engineering degree in 1970, a Master's and a PhD degree from the University of California at Los Angeles Computer Science Department. His PhD work, undertaken under the supervision of Dr Leonard Kleinrock, a pioneer in the area of networking, was related to the design of large computer networks. They were among the first to introduce and evaluate cluster-based hierarchical routing. Results obtained then are still very relevant and have recently inspired considerable work in the area of ad-hoc networking.	His PhD work, undertaken under the supervision of Dr Leonard Kleinrock, a pioneer in the area of networking, was related to the design of large computer networks.	/m/02cp3j	Leonard_Kleinrock	53	70	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
ARPANET, the world's first electronic computer network, was deployed on the UCLA campus by student programmer Charley Kline, at 10:30 p.m, on October 29, 1969 from Boelter Hall 3420. Supervised by Prof. Leonard Kleinrock, Kline transmitted from the university's SDS Sigma 7 Host computer to Douglas Engelbart's lab at Stanford Research Institute, in Menlo Park, California. SDS 940 Host computer. The message text was the word "login"; the "l" and the "o" letters were transmitted, but the system then crashed. Hence, the literal first message over the ARPANET was "lo". About an hour later, having recovered from the crash, the SDS Sigma 7 computer effected a full "login". The first permanent ARPANET link was established on November 21, 1969, between the IMP at UCLA and the IMP at the Stanford Research Institute. By December 5, 1969, the entire four-node network was established.	Supervised by Prof. Leonard Kleinrock, Kline transmitted from the university's SDS Sigma 7 Host computer to Douglas Engelbart's lab at Stanford Research Institute, in Menlo Park, California.	/m/02cp3j	Leonard_Kleinrock	20	37	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
While at University of California, Los Angeles he developed the Jackson's theorem and some of the first models that could predict the performance of networks with several nodes. Jackson's work was inspired by his experience in the Los Angeles aircraft industry, but the results found applications in the design of computers, manufacturing and the then emerging packet switched networks, such as those undertaken by Leonard Kleinrock in 1961.	Jackson's work was inspired by his experience in the Los Angeles aircraft industry, but the results found applications in the design of computers, manufacturing and the then emerging packet switched networks, such as those undertaken by Leonard Kleinrock in 1961.	/m/02cp3j	Leonard_Kleinrock	237	254	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Cofounded by Dr. Richard Schroth and Chunka Mui, Vanguard's programs are developed and led by its Advisory Board‚ÄîJohn Perry Barlow, Gordon Bell, Maria Bezaitis, Peter Cochrane, Eric Haseltine, Mike Hawley, Alan Kay, Len Kleinrock, Doug Lenat, Bob Lucky, Nicholas Negroponte, and David Reed. They identify thought leaders and innovators from a multiplicity of backgrounds and disciplines and invite them to speak at TTI/Vanguard meetings.	Cofounded by Dr. Richard Schroth and Chunka Mui, Vanguard's programs are developed and led by its Advisory Board‚ÄîJohn Perry Barlow, Gordon Bell, Maria Bezaitis, Peter Cochrane, Eric Haseltine, Mike Hawley, Alan Kay, Len Kleinrock, Doug Lenat, Bob Lucky, Nicholas Negroponte, and David Reed.	/m/02cp3j	Leonard_Kleinrock	216	229	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
The school is credited as the birthplace of the Internet, where the first message was sent to a computer at Stanford University on October 29, 1969 by Professor Leonard Kleinrock and his research team at UCLA. On September 29, 2008, President George W. Bush presented the 2007 National Medal of Science to Kleinrock for "his fundamental contributions to the mathematical theory of modern data networks, and for the functional specification of packet switching, which is the foundation of Internet technology. His mentoring of generations of students has led to the commercialization of technologies that have transformed the world."  Room 3420 at Boelter Hall, where the first message was sent, has been converted into The Kleinrock Internet Heritage Site and Archive (renamed KIHC ‚Äì The Kleinrock Internet History Center at UCLA).	The school is credited as the birthplace of the Internet, where the first message was sent to a computer at Stanford University on October 29, 1969 by Professor Leonard Kleinrock and his research team at UCLA.	/m/02cp3j	Leonard_Kleinrock	161	178	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
He earned his Ph.D. from UCLA in 1972. At UCLA he worked in Professor Leonard Kleinrock's networking group that connected the first two nodes of the ARPANET and contributed to the ARPANET host-to-host protocol. Cerf was an assistant professor at Stanford University from 1972‚Äì1976, where he conducted research on packet network interconnection protocols and co-designed the DoD TCP/IP protocol suite with Bob Kahn. He was a program manager for the Advanced Research Projects Agency (ARPA) from 1976 to 1982. Cerf was instrumental in the formation of both the Internet Society and Internet Corporation for Assigned Names and Numbers (ICANN), serving as founding president of the Internet Society from 1992‚Äì1995 and in 1999 as Chairman of the Board and as ICANN Chairman from 2000 to 2007. His many awards include the National Medal of Technology, the Turing Award, the Presidential Medal of Freedom, and membership in the National Academy of Engineering and the Internet Society's Internet Hall of Fame.	At UCLA he worked in Professor Leonard Kleinrock's networking group that connected the first two nodes of the ARPANET and contributed to the ARPANET host-to-host protocol.	/m/02cp3j	Leonard_Kleinrock	31	48	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Plan 55-A was a store and forward message switching system developed by Western Union and used from 1948 to 1976. Western Union's own system handled telegrams, and a military version of the system was used by the U.S. Department of Defense. Leonard Kleinrock analyzed the queueing delays of Plan 55-A in his PhD thesis, and this work formed part of the theoretical basis for the ARPAnet.	Leonard Kleinrock analyzed the queueing delays of Plan 55-A in his PhD thesis, and this work formed part of the theoretical basis for the ARPAnet.	/m/02cp3j	Leonard_Kleinrock	0	17	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Linkabit was a technology company founded in 1968 by Irwin M. Jacobs, Andrew Viterbi and Leonard Kleinrock. Linkabit created a large number of technology companies, most notably, Qualcomm. Linkabit is currently a division of L-3 Communications.	Linkabit was a technology company founded in 1968 by Irwin M. Jacobs, Andrew Viterbi and Leonard Kleinrock.	/m/02cp3j	Leonard_Kleinrock	89	106	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Linkabit Corporation was formed in mid-1968 in Los Angeles by Irwin M. Jacobs, Andrew Viterbi and Leonard Kleinrock (who soon left).	Linkabit Corporation was formed in mid-1968 in Los Angeles by Irwin M. Jacobs, Andrew Viterbi and Leonard Kleinrock (who soon left).	/m/02cp3j	Leonard_Kleinrock	98	115	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Not to be confused with a separate application known as the World wide web which was invented much later in the early 1990s (see article on the English inventor Tim Berners-Lee), the Internet is the global system of overall interconnected computer networks that use the standardized Internet Protocol Suite (TCP/IP) to serve billions of users worldwide. It is a network of networks that consists of millions of private and public, academic, business, and government networks of local to global scope that are linked by copper wires, fiber-optic cables, wireless connections, and other technologies. The concept of packet switching of a network was first explored by Paul Baran in the early 1960s, and the mathematical formulations behind packet switching were later devised by Leonard Kleinrock. On October 29, 1969, the world's first electronic computer network, the ARPANET, was established between nodes at Leonard Kleinrock's lab at UCLA and Douglas Engelbart's lab at the Stanford Research Institute (SRI). Another milestone occurred in 1973 when Bob Kahn and Vinton Cerf co-invented Internet Protocol and Transmission Control Protocol while working on ARPANET at the United States Department of Defense. The first TCP/IP-wide area network was operational on January 1, 1983, when the United States' National Science Foundation (NSF) constructed the university network backbone that would later become the NSFNet. This date is held as the "birth" of the Internet.	The concept of packet switching of a network was first explored by Paul Baran in the early 1960s, and the mathematical formulations behind packet switching were later devised by Leonard Kleinrock.	/m/02cp3j	Leonard_Kleinrock	178	195	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
Not to be confused with a separate application known as the World wide web which was invented much later in the early 1990s (see article on the English inventor Tim Berners-Lee), the Internet is the global system of overall interconnected computer networks that use the standardized Internet Protocol Suite (TCP/IP) to serve billions of users worldwide. It is a network of networks that consists of millions of private and public, academic, business, and government networks of local to global scope that are linked by copper wires, fiber-optic cables, wireless connections, and other technologies. The concept of packet switching of a network was first explored by Paul Baran in the early 1960s, and the mathematical formulations behind packet switching were later devised by Leonard Kleinrock. On October 29, 1969, the world's first electronic computer network, the ARPANET, was established between nodes at Leonard Kleinrock's lab at UCLA and Douglas Engelbart's lab at the Stanford Research Institute (SRI). Another milestone occurred in 1973 when Bob Kahn and Vinton Cerf co-invented Internet Protocol and Transmission Control Protocol while working on ARPANET at the United States Department of Defense. The first TCP/IP-wide area network was operational on January 1, 1983, when the United States' National Science Foundation (NSF) constructed the university network backbone that would later become the NSFNet. This date is held as the "birth" of the Internet.	On October 29, 1969, the world's first electronic computer network, the ARPANET, was established between nodes at Leonard Kleinrock's lab at UCLA and Douglas Engelbart's lab at the Stanford Research Institute (SRI).	/m/02cp3j	Leonard_Kleinrock	114	131	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/law/inventor,/people/person
AWK was created at Bell Labs in the 1970s, and its name is derived from the family names of its authors ‚Äì Alfred Aho, Peter Weinberger, and Brian Kernighan. The name is not commonly pronounced as a string of separate letters but rather as an acronym, to sound the same as the name of the bird, auk (which acts as an emblem of the language such as on The AWK Programming Language book cover - the book is often referred to by the abbreviation TAPL). When written in all lowercase letters, as awk, it refers to the Unix or Plan 9 program that runs scripts written in the AWK programming language.	AWK was created at Bell Labs in the 1970s, and its name is derived from the family names of its authors ‚Äì Alfred Aho, Peter Weinberger, and Brian Kernighan.	/m/02xdsq	Peter_J._Weinberger	118	134	/computer/computer_scientist,/computer/programming_language_designer,/people/person
Aho is also widely known for his co-authorship of the AWK programming language with Peter J. Weinberger and Brian Kernighan (the 'A' stands for "Aho").	Aho is also widely known for his co-authorship of the AWK programming language with Peter J. Weinberger and Brian Kernighan (the 'A' stands for "Aho").	/m/02xdsq	Peter_J._Weinberger	84	103	/computer/computer_scientist,/computer/programming_language_designer,/people/person
Google Shopping, formerly Google Product Search, Google Products and Froogle, is a Google service invented by Craig Nevill-Manning which allows users to search for products on online shopping websites and compare prices between different vendors.	Google Shopping, formerly Google Product Search, Google Products and Froogle, is a Google service invented by Craig Nevill-Manning which allows users to search for products on online shopping websites and compare prices between different vendors.	/m/0cfyqy	Craig_Nevill-Manning	110	130	/computer/computer_scientist,/people/person
Created by Craig Nevill-Manning and launched in December 2002, Froogle was different from most other price comparison services in that it used Google's web crawler to index product data from the websites of vendors instead of using paid submissions. As with Google Search, Froogle was instead monetized using Google's AdWords keyword advertising platform.	Created by Craig Nevill-Manning and launched in December 2002, Froogle was different from most other price comparison services in that it used Google's web crawler to index product data from the websites of vendors instead of using paid submissions.	/m/0cfyqy	Craig_Nevill-Manning	11	31	/computer/computer_scientist,/people/person
Sequitur (or Nevill-Manning algorithm) is a recursive algorithm developed by Craig Nevill-Manning and Ian H. Witten in 1997 that infers a hierarchical structure (context-free grammar) from a sequence of discrete symbols. The algorithm operates in linear space and time. It can be used in data compression software applications.	Sequitur (or Nevill-Manning algorithm) is a recursive algorithm developed by Craig Nevill-Manning and Ian H. Witten in 1997 that infers a hierarchical structure (context-free grammar) from a sequence of discrete symbols.	/m/0cfyqy	Craig_Nevill-Manning	77	97	/computer/computer_scientist,/people/person
Action semantics is a framework for the formal specification of semantics of programming languages invented by David Watt and Peter D. Mosses. It is a mixture of denotational, operational and algebraic semantics.	Action semantics is a framework for the formal specification of semantics of programming languages invented by David Watt and Peter D. Mosses.	/m/0bwxv8	David_Watt_(computer_scientist)	111	121	/book/author,/computer/computer_scientist,/people/person
Mosses has spent most of his career at BRICS in Denmark. He returned to a chair at Swansea University, Wales. His main contribution has been in the area of formal program semantics. In particular, with David Watt he developed action semantics, a combination of denotational, operational and algebraic semantics.	In particular, with David Watt he developed action semantics, a combination of denotational, operational and algebraic semantics.	/m/0bwxv8	David_Watt_(computer_scientist)	20	30	/book/author,/computer/computer_scientist,/people/person
The first link-state routing concept was published in 1979 by John M. McQuillan (then at Bolt, Beranek and Newman) as a mechanism that would calculate routes more quickly when network conditions changed, and thus lead to more stable routing.	The first link-state routing concept was published in 1979 by John M. McQuillan (then at Bolt, Beranek and Newman) as a mechanism that would calculate routes more quickly when network conditions changed, and thus lead to more stable routing.	/m/04ljjzx	John_M._McQuillan	62	79	/people/person
Born in Brooklyn, Buzen received a Sc.B. in applied mathematics from Brown University (1965), and at Harvard University received a M.Sc. (1966) and Ph.D. (1971). He was a systems programmer at the NIH in Bethesda, MD (1967‚Äì69), studying the performance of realtime systems, which led to his first publication in a 1969 IEEE conference. From 1971 to 1976, he held various appointments as a Lecturer in Computer Science at Harvard, and as a Systems Engineer at Honeywell. Some of his students at Harvard have gone on to become well known figures in the computer industry. Robert M. Metcalfe co-invented Ethernet, John M. McQuillan developed routing algorithms used by ARPAnet, and Bill Gates co-founded Microsoft.	Robert M. Metcalfe co-invented Ethernet, John M. McQuillan developed routing algorithms used by ARPAnet, and Bill Gates co-founded Microsoft.	/m/04ljjzx	John_M._McQuillan	41	58	/people/person
Proximity communication is a Sun microsystems technology of wireless chip-to-chip communications. Partly by Robert Drost and Ivan Sutherland. Research done as part of High Productivity Computing Systems DARPA project.	Partly by Robert Drost and Ivan Sutherland.	/m/04h8rb	Robert_Drost	10	22	/book/author,/people/person
In 1984, Bob Scheifler and Jim Gettys set out the early principles of X:	In 1984, Bob Scheifler and Jim Gettys set out the early principles of X:	/m/04wtg3	Bob_Scheifler	9	22	/book/author,/computer/programming_language_designer,/people/person
The original idea of X emerged at MIT in 1984 as a collaboration between Jim Gettys (of Project Athena) and Bob Scheifler (of the MIT Laboratory for Computer Science). Scheifler needed a usable display environment for debugging the Argus system. Project Athena (a joint project between Digital Equipment Corporation (DEC), MIT and IBM to provide easy access to computing resources for all students) needed a platform-independent graphics system to link together its heterogeneous multiple-vendor systems; the window system then under development in Carnegie Mellon University's Andrew Project did not make licenses available, and no alternatives existed.	The original idea of X emerged at MIT in 1984 as a collaboration between Jim Gettys (of Project Athena) and Bob Scheifler (of the MIT Laboratory for Computer Science).	/m/04wtg3	Bob_Scheifler	108	121	/book/author,/computer/programming_language_designer,/people/person
In computing, on the X Window System, X11 color names are represented in a simple text file, which maps certain strings to RGB color values. It is shipped with every X11 installation, hence the name, and is usually located in <X11root>/lib/X11/rgb.txt. They were defined by Bob Scheifler.	They were defined by Bob Scheifler.	/m/04wtg3	Bob_Scheifler	21	34	/book/author,/computer/programming_language_designer,/people/person
In 1984, Bob Scheifler of MIT replaced the synchronous protocol of W with an asynchronous alternative and named the result X.	In 1984, Bob Scheifler of MIT replaced the synchronous protocol of W with an asynchronous alternative and named the result X.	/m/04wtg3	Bob_Scheifler	9	22	/book/author,/computer/programming_language_designer,/people/person
Bob Scheifler and Jim Gettys set out the early principles of X as follows (as listed in Scheifler/Gettys 1996):	Bob Scheifler and Jim Gettys set out the early principles of X as follows (as listed in Scheifler/Gettys 1996):	/m/04wtg3	Bob_Scheifler	0	13	/book/author,/computer/programming_language_designer,/people/person
X originated at MIT in 1984 (its current release X11 appeared in September 1987). Its designers Bob Scheifler and Jim Gettys set as an early principle that its core protocol was to "create mechanism, not policy". As a result, the core protocol does not specify the interaction between clients and between a client and the user. These interactions are the subject of separate specifications, such as the ICCCM and the freedesktop.org specifications, and are typically enforced automatically by using a given widget set.	Its designers Bob Scheifler and Jim Gettys set as an early principle that its core protocol was to "create mechanism, not policy".	/m/04wtg3	Bob_Scheifler	14	27	/book/author,/computer/programming_language_designer,/people/person
Argus is a programming language created at MIT by Barbara Liskov between 1982 and 1988, in collaboration with Maurice Herlihy, Paul Johnson, Robert Scheifler, and William Weihl. It is an extension of the CLU language, and utilizes most of the same syntax and semantics. Argus was designed to support the creation of distributed programs, by encapsulating related procedures within objects called guardians, and by supporting atomic operations called actions.	Argus is a programming language created at MIT by Barbara Liskov between 1982 and 1988, in collaboration with Maurice Herlihy, Paul Johnson, Robert Scheifler, and William Weihl.	/m/04wtg3	Bob_Scheifler	141	157	/book/author,/computer/programming_language_designer,/people/person
The Data Base Task Group (DBTG) was a working group founded in 1965 (initially named the List Processing Task Force and later renamed to DBTG in 1967) by the Cobol Committee, formerly Programming Language Committee, of the Conference of Data Systems Language (CODASYL). The DBTG was chaired by William Olle of RCA.	The DBTG was chaired by William Olle of RCA.	/m/05c1_yt	T._William_Olle	24	36	/book/author,/people/person
Charles H. Lindsey has another ALGOL 68 implementation called ALGOL 68S for Sun3, Sun Sparc (under SunOS 4.1), Sun Sparc (under Solaris 2), Atari ST (under GEMDOS) and Acorn Archimedes (under RISC OS), c.f.	Charles H. Lindsey has another ALGOL 68 implementation called ALGOL 68S for Sun3, Sun Sparc (under SunOS 4.1), Sun Sparc (under Solaris 2), Atari ST (under GEMDOS) and Acorn Archimedes (under RISC OS), c.f.	/m/04m_lsm	Charles_H._Lindsey	0	18	/people/person
This creates a tree of B call frames that refer to each other and to the containing A call frames, each of which has its own copy of k that changes every time the associated B is called. Trying to work it through on paper is probably fruitless, but the correct answer is ‚àí67, despite the fact that in the original paper Knuth conjectured it to be ‚àí121. The survey paper by Charles H. Lindsey mentioned in the references contains a table for different starting values. Even modern machines quickly run out of stack space for larger values of k.	The survey paper by Charles H. Lindsey mentioned in the references contains a table for different starting values.	/m/04m_lsm	Charles_H._Lindsey	20	38	/people/person
-- Lindsey	-- Lindsey	/m/04m_lsm	Charles_H._Lindsey	3	10	/people/person
The calendrical arithmetic discussed here is adapted from Gregorian and Julian calendar arithmetic published by Dershowitz and Reingold, although those authors explicitly ignored the Revised Julian calendar. Their book, which will be referred to hereinafter as "CC3", should be consulted for methods to handle BC dates and the traditional omission of a year zero, both of which will be ignored here. They define the MOD operator as x MOD y = x ‚àí y √ó floor(x / y), because that expression is valid for negative and floating point operands, returning the remainder from dividing x by y while discarding the quotient. Expressions like floor(x / y) return the quotient from dividing x by y while discarding the remainder.	The calendrical arithmetic discussed here is adapted from Gregorian and Julian calendar arithmetic published by Dershowitz and Reingold, although those authors explicitly ignored the Revised Julian calendar.	/m/02qh17f	Edward_Reingold	127	135	/computer/computer_scientist,/people/person
Rata Die (RD) is a system for assigning numbers to calendar days (optionally with time of day), independent of any calendar, for the purposes of calendrical calculations. It was named (after the Latin for "fixed date") by Edward Reingold and Nachum Dershowitz for their book Calendrical Calculations. However, essentially the same system (including the same epoch) was used previously by the REXX programming language and by others.	It was named (after the Latin for "fixed date") by Edward Reingold and Nachum Dershowitz for their book Calendrical Calculations.	/m/02qh17f	Edward_Reingold	51	66	/computer/computer_scientist,/people/person
And so the New Oxford English Dictionary (NOED) project began. More than 120 keyboarders of the International Computaprint Corporation in Tampa, Florida, and Fort Washington, Pennsylvania, USA, started keying in over 350,000,000 characters, their work checked by 55 proof-readers in England. Retyping the text alone was not sufficient; all the information represented by the complex typography of the original dictionary had to be retained, which was done by marking up the content in SGML. A specialized search engine and display software were also needed to access it. Under a 1985 agreement, some of this software work was done at the University of Waterloo, Canada, at the Centre for the New Oxford English Dictionary, led by Frank Tompa and Gaston Gonnet; this search technology went on to become the basis for the Open Text Corporation. Computer hardware, database and other software, development managers, and programmers for the project were donated by the British subsidiary of IBM; the colour syntax-directed editor for the project, LEXX, was written by Mike Cowlishaw of IBM. The University of Waterloo, in Canada, volunteered to design the database. A. Walton Litz, an English professor at Princeton University who served on the Oxford University Press advisory council, was quoted in Time as saying "I've never been associated with a project, I've never even heard of a project, that was so incredibly complicated and that met every deadline."	Under a 1985 agreement, some of this software work was done at the University of Waterloo, Canada, at the Centre for the New Oxford English Dictionary, led by Frank Tompa and Gaston Gonnet; this search technology went on to become the basis for the Open Text Corporation.	/m/03dzrs	Gaston_Gonnet	175	188	/people/person
A significant number of prominent business leaders have worked or studied at Waterloo. Examples include John Baker, founder of Desire2Learn, David Cheriton, co-founder and chief scientist of Arista Networks, Mike Lazaridis, co-founder and former co-CEO of Research in Motion, Prem Watsa, chairman of Fairfax Financial and the current chancellor of the Waterloo, Steven Woods, co-founder of NeoEdge Networks and Quack.com. and co-founders of Waterloo Maple, Keith Geddes and Gaston Gonnet. Gonnet was also the co-founder of Open Text Corporation. Several university's faculty members and students have also gained local and national prominence for serving in government. David Johnston, the former president of Waterloo, currently serves as the Governor General of Canada.	and co-founders of Waterloo Maple, Keith Geddes and Gaston Gonnet.	/m/03dzrs	Gaston_Gonnet	52	65	/people/person
Waterloo Maple Inc. was first incorporated under the name Waterloo Maple Software in April 1988 by Keith Geddes and Gaston Gonnet, who were both then professors in the Symbolic Computation Group, a part of the computer science department (now the David R. Cheriton School of Computer Science) at the University of Waterloo.	Waterloo Maple Inc. was first incorporated under the name Waterloo Maple Software in April 1988 by Keith Geddes and Gaston Gonnet, who were both then professors in the Symbolic Computation Group, a part of the computer science department (now the David R. Cheriton School of Computer Science) at the University of Waterloo.	/m/03dzrs	Gaston_Gonnet	116	129	/people/person
The bitap algorithm for exact string searching was invented by B√°lint D√∂m√∂lki in 1964 and extended by R. K. Shyamasundar in 1977, before being reinvented in the context of fuzzy string searching by Manber and Wu in 1991 based on work done by Ricardo Baeza-Yates and Gaston Gonnet. The algorithm was improved by Baeza-Yates and Navarro in 1996 and later by Gene Myers for long patterns in 1998.	The bitap algorithm for exact string searching was invented by B√°lint D√∂m√∂lki in 1964 and extended by R. K. Shyamasundar in 1977, before being reinvented in the context of fuzzy string searching by Manber and Wu in 1991 based on work done by Ricardo Baeza-Yates and Gaston Gonnet.	/m/03dzrs	Gaston_Gonnet	266	279	/people/person
Ricardo A. Baeza-Yates (born March 21, 1961) is a Chilean computer scientist and currently VP for Europe and Latin America leading the Yahoo! Research labs at Barcelona, Spain and Santiago, Chile. His Ph.D. from the University of Waterloo was entitled Efficient Text Searching, supervised by Gaston Gonnet and granted in 1989.	His Ph.D. from the University of Waterloo was entitled Efficient Text Searching, supervised by Gaston Gonnet and granted in 1989.	/m/03dzrs	Gaston_Gonnet	95	108	/people/person
The Isearch search/indexing text algorithms were based on Gaston Gonnet's seminal work into PAT arrays and trees for text retrieval--- ideas that were developed for the New Oxford English Dictionary Project at the Univ. of Waterloo, and provided the seeds for Tim Bray's PAT SGML engine that formed the basis of Open Text. One of the limiting factors, however, of the Isearch design was that it was not well suited to handle the extremely large data sets that became popular in the mid to late 1990s. In many cases Isearch was adapted or modified to use different algorithms but usually retained the document type model and the architectural relationship with Isite.	The Isearch search/indexing text algorithms were based on Gaston Gonnet's seminal work into PAT arrays and trees for text retrieval--- ideas that were developed for the New Oxford English Dictionary Project at the Univ.	/m/03dzrs	Gaston_Gonnet	58	71	/people/person
In 1990, in collaboration with Prof. Gaston Gonnet, the Benner laboratory introduced ], the first bioinformatics workbench. DARWIN supported the first exhaustive matching of a modern genomic sequence databases, and generated information that showed how natural proteins divergently evolve under functional constraints by accumulating mutations, insertions, and deletions.	In 1990, in collaboration with Prof. Gaston Gonnet, the Benner laboratory introduced ], the first bioinformatics workbench.	/m/03dzrs	Gaston_Gonnet	37	50	/people/person
Computer scientist and number theorist Jeffrey Shallit states in an expert report that despite common claims in the popular and religious press, Dembski is not a scientist by any reasonable standard, has not published any experimental or empirical tests of his claims, submitted his claims to the scrutiny of his peers or published in a scientific journal. In a footnote Shallit states that he does not consider mathematics to be science. Shallit describes Dembski's published mathematical output as "extremely small" for a research mathematician, and remarks that "it is very unlikely that his meagre output would merit tenure at any major university".	Computer scientist and number theorist Jeffrey Shallit states in an expert report that despite common claims in the popular and religious press, Dembski is not a scientist by any reasonable standard, has not published any experimental or empirical tests of his claims, submitted his claims to the scrutiny of his peers or published in a scientific journal.	/m/03f5lp	Jeffrey_Shallit	39	54	/computer/computer_scientist,/people/person
Michael O. Rabin and Jeffrey Shallit have found randomized polynomial-time algorithms for computing a representation n = x12 + x22 + x32 + x42 for a given integer n, in expected running time O((logn)2).	Michael O. Rabin and Jeffrey Shallit have found randomized polynomial-time algorithms for computing a representation n = x12 + x22 + x32 + x42 for a given integer n, in expected running time O((logn)2).	/m/03f5lp	Jeffrey_Shallit	21	36	/computer/computer_scientist,/people/person
Dembski's book No Free Lunch was criticised for not addressing the work of researchers who use computer simulations to investigate artificial life. According to Jeffrey Shallit:	According to Jeffrey Shallit:	/m/03f5lp	Jeffrey_Shallit	13	28	/computer/computer_scientist,/people/person
Dembski derives what he purports to be an instance of what Peter Medawar (in 1984) identified as the law of conservation of information. However mathematician Jeffrey Shallit has rebutted this claim, stating that "Medawar‚Äôs 'law' is not the same as Dembski‚Äôs" in that Medawar "makes no mention of probabilities or the name Shannon", and that "Medawar‚Äôs law, by the way, can be made rigorous, but in the context of Kolmogorov information, not Shannon information or Dembski‚Äôs 'complex specified information'."	However mathematician Jeffrey Shallit has rebutted this claim, stating that "Medawar‚Äôs 'law' is not the same as Dembski‚Äôs" in that Medawar "makes no mention of probabilities or the name Shannon", and that "Medawar‚Äôs law, by the way, can be made rigorous, but in the context of Kolmogorov information, not Shannon information or Dembski‚Äôs 'complex specified information'.	/m/03f5lp	Jeffrey_Shallit	22	37	/computer/computer_scientist,/people/person
Mathematician Jeffrey Shallit criticises the book for evasion and dissembling. This is an index of his detractors: Rich Baldwin, Eli Chiprout, Taner Edis, Ellery Eels, Branden Fitelson, Philip Kitcher, Peter Milne, Massimo Pigliucci, Del Ratzsch, Jeff Shallit, Niall Shanks, Jordan H. Sobel, Jason Rosenhouse, Christopher Stephenson, Richard Wein, and Matt Young. All these writers have analyzed in detail Dembski's literary output and demonstrated multiple errors, fallacious concepts and inconsistencies which are a trademark of his prolific production. |Mark Perakh|The design revolution? How William Dembski Is Dodging Questions About Intelligent Design|}}	Mathematician Jeffrey Shallit criticises the book for evasion and dissembling.	/m/03f5lp	Jeffrey_Shallit	14	29	/computer/computer_scientist,/people/person
Erd≈ës, R√©nyi, and Sz√ºsz asked for nontrivial bounds on the length of the finite Engel expansion of a rational number x/y; this question was answered by Erd≈ës and Shallit, who proved that the number of terms in the expansion is O(y1/3 + Œµ) for any Œµ > 0.	Erd≈ës, R√©nyi, and Sz√ºsz asked for nontrivial bounds on the length of the finite Engel expansion of a rational number x/y; this question was answered by Erd≈ës and Shallit, who proved that the number of terms in the expansion is O(y1/3 + Œµ) for any Œµ > 0.	/m/03f5lp	Jeffrey_Shallit	162	169	/computer/computer_scientist,/people/person
The first edition of Introduction to Automata Theory, Languages, and Computation was published in 1979, the second edition in November 2000, and the third edition appeared in February 2006. Since the second edition, Rajeev Motwani has joined Hopcroft and Ullman as third author. Starting with the second edition, the book features extended coverage of examples where automata theory is applied, whereas large parts of more advanced theory were taken out. While this makes the second and third editions more accessible to beginners, it makes it less suited for more advanced courses. The new bias away from theory is not seen positive by all: As Shallit quotes one professor, "they have removed all good parts." (Shallit 2008).	The new bias away from theory is not seen positive by all: As Shallit quotes one professor, "they have removed all good parts.	/m/03f5lp	Jeffrey_Shallit	62	69	/computer/computer_scientist,/people/person
The first edition of Introduction to Automata Theory, Languages, and Computation was published in 1979, the second edition in November 2000, and the third edition appeared in February 2006. Since the second edition, Rajeev Motwani has joined Hopcroft and Ullman as third author. Starting with the second edition, the book features extended coverage of examples where automata theory is applied, whereas large parts of more advanced theory were taken out. While this makes the second and third editions more accessible to beginners, it makes it less suited for more advanced courses. The new bias away from theory is not seen positive by all: As Shallit quotes one professor, "they have removed all good parts." (Shallit 2008).	" (Shallit 2008).	/m/03f5lp	Jeffrey_Shallit	3	10	/computer/computer_scientist,/people/person
He was married to Louise Lee Outlaw Shallit, an author, and was survived by two sons, Jonathan Shallit, a music professor and Jeffrey Shallit, a computer scientist.	He was married to Louise Lee Outlaw Shallit, an author, and was survived by two sons, Jonathan Shallit, a music professor and Jeffrey Shallit, a computer scientist.	/m/03f5lp	Jeffrey_Shallit	126	141	/computer/computer_scientist,/people/person
The Coates cluster is named for Clarence L. "Ben" Coates, who came to Purdue in 1973 to head the School of Electrical Engineering (now Electrical and Computer Engineering) where, for the next decade, he emphasized computer education and the development of computing facilities. He was a driving force behind the high-performance computing and networking plan that led to the creation of the Engineering Computer Network (ECN) serving all of Purdue‚Äôs engineering schools. He also initiated a degree program in computer engineering at Purdue. As a research scientist at the General Electric Research Laboratory in New York, Coates developed five patents involving waveform recognition devices, circuit gates and accumulators on computer chips. The Coates cluster continues Purdue's practice of naming new supercomputers after notable figures in the university's computing history.	The Coates cluster is named for Clarence L. "Ben" Coates, who came to Purdue in 1973 to head the School of Electrical Engineering (now Electrical and Computer Engineering) where, for the next decade, he emphasized computer education and the development of computing facilities.	/m/05c2l93	Clarence_L._%22Ben%22_Coates	32	56	/people/deceased_person,/people/person
Following the publication of the original version of CSP, Hoare, Stephen Brookes, and A. W. Roscoe developed and refined the theory of CSP into its modern, process algebraic form. The approach taken in developing CSP into a process algebra was influenced by Robin Milner's work on the Calculus of Communicating Systems (CCS), and vice versa. The theoretical version of CSP was initially presented in a 1984 article by Brookes, Hoare, and Roscoe, and later in Hoare's book Communicating Sequential Processes, which was published in 1985. In September 2006, that book was still the third-most cited computer science reference of all time according to Citeseer (albeit an unreliable source due to the nature of its sampling). The theory of CSP has undergone a few minor changes since the publication of Hoare's book. Most of these changes were motivated by the advent of automated tools for CSP process analysis and verification. Roscoe's The Theory and Practice of Concurrency describes this newer version of CSP.	Following the publication of the original version of CSP, Hoare, Stephen Brookes, and A. W. Roscoe developed and refined the theory of CSP into its modern, process algebraic form.	/m/04pfmk	Bill_Roscoe	86	98	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Computing Service for the University was split off in 1977. It moved from Banbury Road to 8‚Äì11 Keble Road opposite Keble College, with the Wolfson Building, expanding the accommodation significantly behind the original row of Victorian buildings in 1993. For many years, the Department was led by Sir Tony Hoare, who initiated the computer science undergraduate course at Oxford University. Since 2003, the Head of Department has been Professor Bill Roscoe.	Since 2003, the Head of Department has been Professor Bill Roscoe.	/m/04pfmk	Bill_Roscoe	44	65	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Tony Hoare, Stephen Brookes, and A. W. Roscoe developed and refined the theory of CSP into its modern form. The approach taken in developing the theoretical version of CSP was heavily influenced by Robin Milner's work on the Calculus of Communicating Systems (CCS), and vice versa. Over the years there have been many fruitful exchanges of ideas between the researchers working on both CSP and CCS.	Tony Hoare, Stephen Brookes, and A. W. Roscoe developed and refined the theory of CSP into its modern form.	/m/04pfmk	Bill_Roscoe	33	45	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
FDR (Failures-Divergences Refinement) and subsequently FDR2 are refinement checking software tools, designed to check formal models expressed in Communicating sequential processes (CSP). The tools were originally developed by Formal Systems (Europe) Ltd. Bill Roscoe of the Department of Computer Science, University of Oxford devised many of the algorithms used by the tool and Michael Goldsmith was instrumental in the implementation. FDR2 is presently developed by Oxford University Department of Computer Science from where is it is freely available for academic and other non-commercial use:	The tools were originally developed by Formal Systems (Europe) Ltd. Bill Roscoe of the Department of Computer Science, University of Oxford devised many of the algorithms used by the tool and Michael Goldsmith was instrumental in the implementation.	/m/04pfmk	Bill_Roscoe	68	79	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Sattler completed her PhD in 1998 under the supervision of Franz Baader at RWTH Aachen University. She moved to the University of Manchester as lecturer in 2002.	Sattler completed her PhD in 1998 under the supervision of Franz Baader at RWTH Aachen University.	/m/02p7lnf	Franz_Baader	59	71	/people/person
Allman, who is openly gay, lives in Berkeley, California with his partner of more than 30 years, Marshall Kirk McKusick. McKusick is a lead developer of BSD; the two first met in graduate school.	Allman, who is openly gay, lives in Berkeley, California with his partner of more than 30 years, Marshall Kirk McKusick.	/m/031sb7	Marshall_Kirk_McKusick	97	119	/book/author,/computer/computer_scientist,/people/person
The copyright of the official BSD daemon images is held by Marshall Kirk McKusick (a very early BSD developer who worked with Bill Joy). He has freely licensed the mascot for individual "personal use within the bounds of good taste (an example of bad taste was a picture of the BSD daemon blowtorching a Solaris logo)." Any use requires both a copyright notice and attribution.	The copyright of the official BSD daemon images is held by Marshall Kirk McKusick (a very early BSD developer who worked with Bill Joy).	/m/031sb7	Marshall_Kirk_McKusick	59	81	/book/author,/computer/computer_scientist,/people/person
Noted former members of the CSRG include Keith Bostic, Bill Joy and Marshall Kirk McKusick. Berkeley Software Design and Sleepycat Software (later acquired by Oracle) can be considered spin-off companies of the Group.	Noted former members of the CSRG include Keith Bostic, Bill Joy and Marshall Kirk McKusick.	/m/031sb7	Marshall_Kirk_McKusick	68	90	/book/author,/computer/computer_scientist,/people/person
The book is edited by Chris DiBona, Sam Ockman and Mark Stone. The essays contained were written by Chris DiBona, Sam Ockman, Mark Stone, Brian Behlendorf, Scott Bradner, Jim Hamerly, Marshall Kirk McKusick, Tim O'Reilly, Tom Paquin, Bruce Perens, Eric Raymond, Richard Stallman, Michael Tiemann, Linus Torvalds, Paul Vixie, Larry Wall, and Bob Young.	The essays contained were written by Chris DiBona, Sam Ockman, Mark Stone, Brian Behlendorf, Scott Bradner, Jim Hamerly, Marshall Kirk McKusick, Tim O'Reilly, Tom Paquin, Bruce Perens, Eric Raymond, Richard Stallman, Michael Tiemann, Linus Torvalds, Paul Vixie, Larry Wall, and Bob Young.	/m/031sb7	Marshall_Kirk_McKusick	121	143	/book/author,/computer/computer_scientist,/people/person
4.2BSD would take over two years to implement and contained several major overhauls. Before its official release came three intermediate versions: 4.1a incorporated a modified version of BBN's preliminary TCP/IP implementation; 4.1b included the new Berkeley Fast File System, implemented by Marshall Kirk McKusick; and 4.1c was an interim release during the last few months of 4.2BSD's development. Back at Bell Labs, 4.1cBSD became the basis of the Eight Edition of Research Unix, and a commercially supported version was available from mtXinu.	Before its official release came three intermediate versions: 4.1a incorporated a modified version of BBN's preliminary TCP/IP implementation; 4.1b included the new Berkeley Fast File System, implemented by Marshall Kirk McKusick; and 4.1c was an interim release during the last few months of 4.2BSD's development.	/m/031sb7	Marshall_Kirk_McKusick	207	229	/book/author,/computer/computer_scientist,/people/person
The official 4.2BSD release came in August 1983. It was notable as the first version released after the 1982 departure of Bill Joy to co-found Sun Microsystems; Mike Karels and Marshall Kirk McKusick took on leadership roles within the project from that point forward. On a lighter note, it also marked the debut of BSD's daemon mascot in a drawing by John Lasseter that appeared on the cover of the printed manuals distributed by USENIX.	It was notable as the first version released after the 1982 departure of Bill Joy to co-found Sun Microsystems; Mike Karels and Marshall Kirk McKusick took on leadership roles within the project from that point forward.	/m/031sb7	Marshall_Kirk_McKusick	128	150	/book/author,/computer/computer_scientist,/people/person
OpenBSD at first used the BSD daemon mascot created by Phil Foglio, updated by John Lasseter and copyright Marshall Kirk McKusick. Subsequent releases saw variations, eventually settling on Puffy, described as a pufferfish. Since then Puffy has appeared on OpenBSD promotional material and featured in release songs and artwork. The promotional material of early OpenBSD releases did not have a cohesive theme or design but later the CD-ROMs, release songs, posters and tee-shirts for each release have been produced with a single style and theme, sometimes contributed to by Ty Semaka of the Plaid Tongued Devils. These have become a part of OpenBSD advocacy, with each release expanding a moral or political point important to the project, often through parody. Past themes have included: in OpenBSD 3.8, the Hackers of the Lost RAID, a parody of Indiana Jones linked to the new RAID tools featured as part of the release; The Wizard of OS, making its debut in OpenBSD 3.7, based on the work of Pink Floyd and a parody of The Wizard of Oz related to the project's recent wireless work; and OpenBSD 3.3's Puff the Barbarian, including an 80s rock-style song and parody of Conan the Barbarian, alluding to open documentation.	OpenBSD at first used the BSD daemon mascot created by Phil Foglio, updated by John Lasseter and copyright Marshall Kirk McKusick.	/m/031sb7	Marshall_Kirk_McKusick	107	129	/book/author,/computer/computer_scientist,/people/person
Her widower is Calvin Gotlieb, a computer science professor; they lived in Toronto, Ontario.	Her widower is Calvin Gotlieb, a computer science professor; they lived in Toronto, Ontario.	/m/07ytc4	Calvin_Gotlieb	15	29	/computer/computer_scientist,/education/academic,/people/person
The DRB soon provided a grant of $6,500 to set up the Computation Center, with the Committee eventually selecting Kelly Gotlieb to run it. Additional funding followed in February 1948 with a $20,000 a year grant from a combined pool set up by the DRB and NRC. Although this was less than was hoped for, the IBM machinery was soon in place and being used to calculate several tables for Atomic Energy of Canada Limited (AECL). Additionally a small version of the differential analyzer was completed by September 1948, although it appears to have seen little use.	The DRB soon provided a grant of $6,500 to set up the Computation Center, with the Committee eventually selecting Kelly Gotlieb to run it.	/m/07ytc4	Calvin_Gotlieb	114	127	/computer/computer_scientist,/education/academic,/people/person
Calvin Gotlieb helped found CIPS in 1958, serving as its president from 1960 to 1961. Calvin was elected as founding fellow in 2006. The first President of CIPS was Fred Thomas serving in 1958 to 1959 and the last President and Chair of the National Board was founding fellow Stephen Ibaraki, serving 2007 to 2008. 2008 was the 50th anniversary of CIPS, and a new governance model was approved by the national board that year where CIPS is governed by the Canadian Council of IT Professionals (CCITP) and its Chair. Prime Minister of Canada Stephen Harper provided a message to CIPS on the 50th anniversary."I am pleased to extend my warmest greetings to everyone marking the 50th anniversary of the Canadian Information Processing Society (CIPS), the professional association for information technology (IT) practitioners in Canada. This special milestone offers a wonderful opportunity to reflect upon past achievements, while setting goals for the future. Since 1958, CIPS has represented its membership on important issues affecting the IT industry and profession. The association has promoted high ideals of competence and ethical practices through certification, accreditation programs, and professional development. I would like to commend CIPS members for carrying out their responsibilities with integrity, expertise and professionalism. You may take pride in having earned the privilege of joining an organization that ensures its members merit the confidence and trust of those who engage professional IT services. Your efforts have made positive and lasting contributions to Canada‚Äôs economic growth and competitiveness."	Calvin Gotlieb helped found CIPS in 1958, serving as its president from 1960 to 1961.	/m/07ytc4	Calvin_Gotlieb	0	14	/computer/computer_scientist,/education/academic,/people/person
Corneil earned a bachelor's degree in mathematics and physics from Queen's University in 1964, and went on to graduate studies at the University of Toronto, earning a master's degree and then in 1968 a doctorate in computer science under the supervision of Calvin Gotlieb. After postdoctoral studies at the Eindhoven University of Technology, Corneil returned to Toronto as a faculty member in 1970. He was chair of the computer science department from 1985 until 1990, and retired in 2010.	Corneil earned a bachelor's degree in mathematics and physics from Queen's University in 1964, and went on to graduate studies at the University of Toronto, earning a master's degree and then in 1968 a doctorate in computer science under the supervision of Calvin Gotlieb.	/m/07ytc4	Calvin_Gotlieb	257	271	/computer/computer_scientist,/education/academic,/people/person
At the Computer History Museum TX-0 alumni reunion in 1984, Gordon Bell said DEC's products developed directly from the TX-2, the successor to the TX-0 which had been developed at what Bell thought was a bargain price at the time, about US$3 million. At the same meeting, Jack Dennis said Ben Gurley's design for the PDP-1 was influenced by his work on the TX-0 display.	At the same meeting, Jack Dennis said Ben Gurley's design for the PDP-1 was influenced by his work on the TX-0 display.	/m/03vtwb	Jack_Dennis	21	32	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
SISAL (Streams and Iteration in a Single Assignment Language) is a general-purpose single assignment functional programming language with strict semantics, implicit parallelism, and efficient array handling. SISAL outputs a dataflow graph in Intermediary Form 1 (IF1). It was derived from VAL (Value-oriented Algorithmic Language, designed by Jack Dennis), and adds recursion and finite streams. It has a Pascal-like syntax and was designed to be a common high-level language for numerical programs on a variety of multiprocessors.	It was derived from VAL (Value-oriented Algorithmic Language, designed by Jack Dennis), and adds recursion and finite streams.	/m/03vtwb	Jack_Dennis	74	85	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
The club's members, who shared a passion to find out how things worked and then to master them, were among the first hackers. Some of the key early members of the club were Jack Dennis and Peter Samson, who compiled the 1959 Dictionary of the TMRC Language and who are credited with originating the concept "Information wants to be free". The atmosphere was casual; members disliked authority. Members received a key to the room after logging 40 hours of work on the layout.	Some of the key early members of the club were Jack Dennis and Peter Samson, who compiled the 1959 Dictionary of the TMRC Language and who are credited with originating the concept "Information wants to be free".	/m/03vtwb	Jack_Dennis	47	58	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
1. The Tech Model Railroad Club (TMRC) is a club at MIT that built sophisticated railroad and trains models. The members were among the first hackers. Key figures of the club were Peter Samson, Alan Kotok, Jack Dennis, and Bob Saunders. The club was composed of two groups, those who were interested in the modeling and landscaping, and those who comprised the Signals and Power Subcommittee and created the circuits that made the trains run. The latter would be among the ones who popularized the term hacker among many other slang terms, and who eventually moved on to computers and computer programming. They were initially drawn to the IBM 704, the multimillion-dollar mainframe that was operated at Building 26, but access and time to the mainframe was restricted to more important people. The group really began being involved with computers when Jack Dennis, a former member, introduced them to the TX-0, a three-million-dollar computer on long-term-loan from Lincoln Laboratory. They would usually stake out the place where the TX-0 was housed until late in the night in hopes that someone who had signed up for computer time did not show up.	Key figures of the club were Peter Samson, Alan Kotok, Jack Dennis, and Bob Saunders.	/m/03vtwb	Jack_Dennis	55	66	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
1. The Tech Model Railroad Club (TMRC) is a club at MIT that built sophisticated railroad and trains models. The members were among the first hackers. Key figures of the club were Peter Samson, Alan Kotok, Jack Dennis, and Bob Saunders. The club was composed of two groups, those who were interested in the modeling and landscaping, and those who comprised the Signals and Power Subcommittee and created the circuits that made the trains run. The latter would be among the ones who popularized the term hacker among many other slang terms, and who eventually moved on to computers and computer programming. They were initially drawn to the IBM 704, the multimillion-dollar mainframe that was operated at Building 26, but access and time to the mainframe was restricted to more important people. The group really began being involved with computers when Jack Dennis, a former member, introduced them to the TX-0, a three-million-dollar computer on long-term-loan from Lincoln Laboratory. They would usually stake out the place where the TX-0 was housed until late in the night in hopes that someone who had signed up for computer time did not show up.	The group really began being involved with computers when Jack Dennis, a former member, introduced them to the TX-0, a three-million-dollar computer on long-term-loan from Lincoln Laboratory.	/m/03vtwb	Jack_Dennis	58	69	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Hardware architectures for dataflow was a major topic in Computer architecture research in the 1970s and early 1980s. Jack Dennis of MIT pioneered the field of static dataflow architectures. Designs that use conventional memory addresses as data dependency tags are called static dataflow machines. These machines did not allow multiple instances of the same routines to be executed simultaneously because the simple tags could not differentiate between them. Designs that use Content-addressable memory are called dynamic dataflow machines by Arvind. They use tags in memory to facilitate parallelism. Data flows around the computer through the components of the computer. It gets entered from the input devices and can leave through output devices (printer etc.).	Jack Dennis of MIT pioneered the field of static dataflow architectures.	/m/03vtwb	Jack_Dennis	0	11	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
At Princeton University from 1968 to 1972, he wrote his classic book, Operating Systems Principles, with E G Coffman. He collaborated with Alfred Aho and Jeffrey Ullman on optimality proofs for paging algorithms and on a simple proof that compilers based on precedence parsing do not need to backtrack. At Purdue University (1972‚Äì1983) he supervised numerous PhD theses validating locality-based theories of memory management and extending the new mathematics of operational analysis of queueing networks. He co-founded CSNET. He became department head in 1979. He completed another book on computational models, Machines, Languages, and Computation, with Jack Dennis and Joe Qualitz.	He completed another book on computational models, Machines, Languages, and Computation, with Jack Dennis and Joe Qualitz.	/m/03vtwb	Jack_Dennis	94	105	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Born in Bethlehem, Pennsylvania, Rumbaugh received has a B.S. in physics from Massachusetts Institute of Technology (MIT), an M.S. in astronomy from California Institute of Technology (Caltech), and in 1975 a Ph.D. in computer science from MIT under Professor Jack Dennis.	in astronomy from California Institute of Technology (Caltech), and in 1975 a Ph.D. in computer science from MIT under Professor Jack Dennis.	/m/03vtwb	Jack_Dennis	129	140	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Hardware architectures for dataflow was a major topic in computer architecture research in the 1970s and early 1980s. Jack Dennis of MIT pioneered the field of static dataflow architectures while the Manchester Dataflow Machine and MIT Tagged Token architecture were major projects in dynamic dataflow.	Jack Dennis of MIT pioneered the field of static dataflow architectures while the Manchester Dataflow Machine and MIT Tagged Token architecture were major projects in dynamic dataflow.	/m/03vtwb	Jack_Dennis	0	11	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Darlington, Sidney -- Darrieus, George -- Davenport, Thomas -- De Forest, Lee -- de Mestral, Georges -- Dennard, Robert H. -- Dennis, Jack -- Deprez, Marcel -- D√©ri, Miksa -- Dibner, Bern -- Doherty, Robert -- Dolivo-Dobrovolsky, Mikhail -- Dolby, Ray -- Duddell, William -- DuMont, Allen B. --	Darlington, Sidney -- Darrieus, George -- Davenport, Thomas -- De Forest, Lee -- de Mestral, Georges -- Dennard, Robert H. -- Dennis, Jack -- Deprez, Marcel -- D√©ri, Miksa -- Dibner, Bern -- Doherty, Robert -- Dolivo-Dobrovolsky, Mikhail -- Dolby, Ray -- Duddell, William -- DuMont, Allen B.	/m/03vtwb	Jack_Dennis	126	138	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
At MIT, Kotok earned bachelor's and master's degrees in electrical engineering. He was influenced by teachers such as Jack Dennis and John McCarthy and by his involvement in the student-organized Tech Model Railroad Club (TMRC), which he joined soon after starting college in 1958.	He was influenced by teachers such as Jack Dennis and John McCarthy and by his involvement in the student-organized Tech Model Railroad Club (TMRC), which he joined soon after starting college in 1958.	/m/03vtwb	Jack_Dennis	38	49	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Working with Jack Dennis on the TX-0 at MIT Building 26, he developed an interest in computing waveforms to synthesize music. For the PDP-1 he wrote the Harmony Compiler with which PDP-1 users coded music.	Working with Jack Dennis on the TX-0 at MIT Building 26, he developed an interest in computing waveforms to synthesize music.	/m/03vtwb	Jack_Dennis	13	24	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Friends from the MIT Tech Model Railroad Club, Wagner and a group of fellow students had access to these room-sized machines outside classes, signing up for time during off hours. Overseen by Jack Dennis, John McKenzie and faculty advisors, they were personal computer users as early as the late 1950s.	Overseen by Jack Dennis, John McKenzie and faculty advisors, they were personal computer users as early as the late 1950s.	/m/03vtwb	Jack_Dennis	12	23	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
According to Kotok, the project was, "digital recording more than 20 years ahead of its time." In 1984, when Jack Dennis asked if they could recognize Beethoven, Computer Museum meeting minutes record the authors as saying, "It wasn't bad, considering." Digital audio pioneer Thomas Stockham worked with Dennis and like Kotok helped develop a contemporary debugger. Whether he was first influenced by Expensive Tape Recorder or more by the work of Kenneth N. Stevens is unknown.	" In 1984, when Jack Dennis asked if they could recognize Beethoven, Computer Museum meeting minutes record the authors as saying, "It wasn't bad, considering.	/m/03vtwb	Jack_Dennis	16	27	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Jack Dennis noticed and had mentioned to Samson that the sound on or off state of the TX-0's speaker could be enough to play music. They succeeded in building a WYSIWYG program for one voice before or by 1960.	Jack Dennis noticed and had mentioned to Samson that the sound on or off state of the TX-0's speaker could be enough to play music.	/m/03vtwb	Jack_Dennis	0	11	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Students of Jack Dennis and John McCarthy discovered a stunning array of uses for the very expensive room-sized computers that were given to MIT. They were privileged to be enrolled when the school's first programming courses were taught.	Students of Jack Dennis and John McCarthy discovered a stunning array of uses for the very expensive room-sized computers that were given to MIT.	/m/03vtwb	Jack_Dennis	12	23	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
Professor Gao received his Master ('82) and Doctorate degrees ('86) from the Massachusetts Institute of Technology (MIT), becoming the first Chinese student in graduating from Computer Sciences at that university. His research work was supervised by Jack Dennis, with whom Professor Gao still collaborates in several research projects.	His research work was supervised by Jack Dennis, with whom Professor Gao still collaborates in several research projects.	/m/03vtwb	Jack_Dennis	36	47	/award/award_winner,/base/engineering/engineering_person,/computer/computer_scientist,/film/editor,/people/person,/projects/project_participant
The key insights on how to introduce lexical scoping into a Lisp dialect were popularized in Sussman and Steele's 1975 Lambda Paper, "Scheme: An Interpreter for Extended Lambda Calculus", where they adopted the concept of the lexical closure (on page 21), which had been described in an AI Memo in 1970 by Joel Moses, who attributed the idea to Peter J. Landin.	The key insights on how to introduce lexical scoping into a Lisp dialect were popularized in Sussman and Steele's 1975 Lambda Paper, "Scheme: An Interpreter for Extended Lambda Calculus", where they adopted the concept of the lexical closure (on page 21), which had been described in an AI Memo in 1970 by Joel Moses, who attributed the idea to Peter J. Landin.	/m/066vzt	Joel_Moses	306	316	/computer/computer_scientist,/film/actor,/film/person_or_entity_appearing_in_film,/influence/influence_node,/people/person
Peter J. Landin defined the term closure in 1964 as having an environment part and a control part as used by his SECD machine for evaluating expressions. Joel Moses credits Landin with introducing the term closure to refer to a lambda expression whose open bindings (free variables) have been closed by (or bound in) the lexical environment, resulting in a closed expression, or closure. This usage was subsequently adopted by Sussman and Steele when they defined Scheme in 1975, and became widespread.	Joel Moses credits Landin with introducing the term closure to refer to a lambda expression whose open bindings (free variables) have been closed by (or bound in) the lexical environment, resulting in a closed expression, or closure.	/m/066vzt	Joel_Moses	0	10	/computer/computer_scientist,/film/actor,/film/person_or_entity_appearing_in_film,/influence/influence_node,/people/person
The case of the purely transcendental functions (which do not involve roots of polynomials) is relatively easy and has been implemented early in most computer algebra systems. The first implementation was done by Joel Moses in Macsyma soon after the publication of Risch's paper.	The first implementation was done by Joel Moses in Macsyma soon after the publication of Risch's paper.	/m/066vzt	Joel_Moses	37	47	/computer/computer_scientist,/film/actor,/film/person_or_entity_appearing_in_film,/influence/influence_node,/people/person
The project was initiated in July, 1968 by Carl Engelman , William A. Martin (front end, expression display, polynomial arithmetic) and Joel Moses (simplifier, indefinite integration: heuristic/Risch). Bill Martin was in charge of the project until 1971, and Moses ran it for the next decade. Engelman and his staff left in 1969 to return to The MITRE Corporation. Later major contributors to the core mathematics engine were: Yannis Avgoustis (special functions), David Barton (algsys), Richard Bogen (special functions), Bill Dubuque (limits, Grobner, TriangSys, indefinite integration: Bronstein, power series, number theory, special functions, functional equations, pattern matching, sign queries), Richard Fateman (rational functions, pattern matching, arbitrary precision floating-point), Michael Genesereth (comparison, knowledge database), Jeff Golden (simplifier, language, system), R. W. Gosper (definite summation, special functions, simplification, number theory), Charles Karney (plotting), John Kulp, Ed Lafferty (ODE solution, special functions), Stavros Macrakis (real/imaginary parts, compiler, system), Richard Pavelle (indicial tensor calculus, general relativity package, ordinary and partial differential equations), Barry Trager (algebraic integration, factoring, Grobner), Paul Wang (polynomial factorization, limits, definite integration), David Y. Y. Yun, Gail Zacharias (Grobner), and Rich Zippel (power series, polynomial factorization, number theory, combinatorics).	The project was initiated in July, 1968 by Carl Engelman , William A. Martin (front end, expression display, polynomial arithmetic) and Joel Moses (simplifier, indefinite integration: heuristic/Risch).	/m/066vzt	Joel_Moses	136	146	/computer/computer_scientist,/film/actor,/film/person_or_entity_appearing_in_film,/influence/influence_node,/people/person
Joel Moses may have coined the phrase in the 1970s:	Joel Moses may have coined the phrase in the 1970s:	/m/066vzt	Joel_Moses	0	10	/computer/computer_scientist,/film/actor,/film/person_or_entity_appearing_in_film,/influence/influence_node,/people/person
The term Needham‚ÄìSchroeder protocol can refer to one of the two communication protocols intended for use over an insecure network, both proposed by Roger Needham and Michael Schroeder. These are:	The term Needham‚ÄìSchroeder protocol can refer to one of the two communication protocols intended for use over an insecure network, both proposed by Roger Needham and Michael Schroeder.	/m/0g8myl	Michael_Schroeder	166	183	/book/author,/computer/computer_scientist,/education/academic,/film/director,/influence/influence_node,/people/person
Among his theoretical contributions is the development of the Burrows-Abadi-Needham logic for authentication, generally known as the BAN logic. His Needham-Schroeder (coinvented with Michael Schroeder) security protocol forms the basis of the Kerberos authentication and key exchange system. He also codesigned the TEA and XTEA encryption algorithms.	His Needham-Schroeder (coinvented with Michael Schroeder) security protocol forms the basis of the Kerberos authentication and key exchange system.	/m/0g8myl	Michael_Schroeder	39	56	/book/author,/computer/computer_scientist,/education/academic,/film/director,/influence/influence_node,/people/person
Dead On: Relentless II is a 1992 action thriller directed by Michael Schroeder. The tagline for the movie was: The first killer was unpredictable. This one is unstoppable. The movie was filmed in Los Angeles, California, USA. It is the second installment in the Relentless series.	Dead On: Relentless II is a 1992 action thriller directed by Michael Schroeder.	/m/0g8myl	Michael_Schroeder	61	78	/book/author,/computer/computer_scientist,/education/academic,/film/director,/influence/influence_node,/people/person
Kasparov is currently collaborating with Max Levchin and Peter Thiel on The Blueprint, a book calling for a revival of world innovation, due out in March 2013 from W. W. Norton & Company.	Kasparov is currently collaborating with Max Levchin and Peter Thiel on The Blueprint, a book calling for a revival of world innovation, due out in March 2013 from W. W. Norton & Company.	/m/037zb2	Max_Levchin	41	52	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
The current incarnation of PayPal is the result of a March 2000 merger between Confinity and X.com. Confinity was founded in December 1998 by Max Levchin, Peter Thiel, Luke Nosek, and Ken Howery, initially as a Palm Pilot payments and cryptography company. X.com was founded by Elon Musk in March 1999, initially as an Internet financial services company. Both Confinity and X.com launched their websites in late 1999. Both companies were located on University Avenue in Palo Alto. Confinity's website was initially focused on reconciling beamed payments from Palm Pilots and X.com's website initially featured financial services. Both services offered email payments as a feature.	Confinity was founded in December 1998 by Max Levchin, Peter Thiel, Luke Nosek, and Ken Howery, initially as a Palm Pilot payments and cryptography company.	/m/037zb2	Max_Levchin	42	53	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Peter Andreas Thiel (German: ; born October 11, 1967) is a German-born American entrepreneur, venture capitalist, and hedge fund manager. Thiel co-founded PayPal with Max Levchin and served as its CEO. He currently serves as president of Clarium Capital, a global macro hedge fund with under $700¬†million in assets under management; a managing partner in Founders Fund, a $275¬†million venture capital fund that he launched with Ken Howery and Luke Nosek in¬†2005; and co-founder and investment committee chair of Mithril Capital Management. He was the first outside investor in Facebook, the popular social-networking site, with a 10.2% stake acquired in 2004 for $500,000, and sits on the company's board of directors. Thiel was ranked #293 on the Forbes¬†400 in 2011, with a net worth of $1.5¬†billion as of March¬†2012. Thiel lives in San Francisco, California.	Thiel co-founded PayPal with Max Levchin and served as its CEO.	/m/037zb2	Max_Levchin	29	40	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In 1998 Thiel co-founded PayPal, an online payments system, with Max Levchin. The company later merged with X.com, then headed by Elon Musk. PayPal went public on February¬†15,¬†2002, and was sold to eBay for $1.5¬†billion later that year. Thiel's 3.7¬†percent stake in PayPal was worth approximately $55¬†million at the time of the acquisition.	In 1998 Thiel co-founded PayPal, an online payments system, with Max Levchin.	/m/037zb2	Max_Levchin	65	76	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
MIT Technology Review has become well-known for its annual TR35 list of the top 35 innovators in the world under the age of 35. In 1999, and then in 2002‚Äì2004, TR produced the TR100, a list of "100 remarkable innovators under the age of 35." In 2005, this list was renamed the TR35 and shortened to 35 individuals under the age of 35. Notable recipients of the award include Google co-founders Larry Page and Sergey Brin, PayPal co-founder Max Levchin, Geekcorps creator Ethan Zuckerman, Linux developer Linus Torvalds, BitTorrent developer Bram Cohen, MacArthur "genius" bioengineer Jim Collins, investor Micah Siegel and Netscape co-founder Marc Andreessen.	" In 2005, this list was renamed the TR35 and shortened to 35 individuals under the age of 35. Notable recipients of the award include Google co-founders Larry Page and Sergey Brin, PayPal co-founder Max Levchin, Geekcorps creator Ethan Zuckerman, Linux developer Linus Torvalds, BitTorrent developer Bram Cohen, MacArthur "genius" bioengineer Jim Collins, investor Micah Siegel and Netscape co-founder Marc Andreessen.	/m/037zb2	Max_Levchin	200	211	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Some winners of the award include Larry Page and Sergey Brin (founders of Google), Linus Torvalds (creator of Linux), Jerry Yang (co-founder of Yahoo!), Jonathan Ive (designer of the iMac, and later the iPod and iPad), Mark Zuckerberg (creator of Facebook), Evan Williams (co-founder of Blogger), Jack Dorsey (creator of Twitter), Marc Andreessen (co-founder of Netscape), Shawn Fanning (creator of Napster), Roger Dingledine (creator of Tor), Max Levchin (co-founder of Paypal), David Karp (founder of Tumblr), and Konstantin Novoselov (graphene pioneer and later Nobel Laureate in Physics).	), Jonathan Ive (designer of the iMac, and later the iPod and iPad), Mark Zuckerberg (creator of Facebook), Evan Williams (co-founder of Blogger), Jack Dorsey (creator of Twitter), Marc Andreessen (co-founder of Netscape), Shawn Fanning (creator of Napster), Roger Dingledine (creator of Tor), Max Levchin (co-founder of Paypal), David Karp (founder of Tumblr), and Konstantin Novoselov (graphene pioneer and later Nobel Laureate in Physics).	/m/037zb2	Max_Levchin	294	305	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Yelp was started out of MRL Ventures, an incubator Max Levchin and several former PayPal executives founded to develop Levchin's investment projects. In late 2004, Levchin brought up the topic of Yellow Pages, which had been worked on since the incubator was started, with Jeremy Stoppelman and Russel Simmons. The two brainstormed over lunch about Jeremy's difficulty using the internet to find a local doctor, then pitched Levchin shortly after on building a site where users could ask friends for recommendations for local services by email. That day Levchin agreed to invest $1 million in the project. MRL co-founder, David Galbraith, who had instigated the research into a Yellow Pages product, came up with the name "Yelp."	Yelp was started out of MRL Ventures, an incubator Max Levchin and several former PayPal executives founded to develop Levchin's investment projects.	/m/037zb2	Max_Levchin	51	62	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Confinity Inc. is best known as the creator of PayPal. It was founded in December 1998 by Max Levchin, Peter Thiel, and Luke Nosek, initially as a Palm Pilot payments and cryptography company. Many of Confinity's initial recruits were alumni of The Stanford Review, also co-founded by Peter Thiel, and most early engineers hailed from the University of Illinois at Urbana-Champaign, recruited by Max Levchin. Early investors included Nokia Ventures, Deutsche Bank, and Bell Melton, the founder of CyberCash.	It was founded in December 1998 by Max Levchin, Peter Thiel, and Luke Nosek, initially as a Palm Pilot payments and cryptography company.	/m/037zb2	Max_Levchin	35	46	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Confinity Inc. is best known as the creator of PayPal. It was founded in December 1998 by Max Levchin, Peter Thiel, and Luke Nosek, initially as a Palm Pilot payments and cryptography company. Many of Confinity's initial recruits were alumni of The Stanford Review, also co-founded by Peter Thiel, and most early engineers hailed from the University of Illinois at Urbana-Champaign, recruited by Max Levchin. Early investors included Nokia Ventures, Deutsche Bank, and Bell Melton, the founder of CyberCash.	Many of Confinity's initial recruits were alumni of The Stanford Review, also co-founded by Peter Thiel, and most early engineers hailed from the University of Illinois at Urbana-Champaign, recruited by Max Levchin.	/m/037zb2	Max_Levchin	203	214	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Howery graduated from Stanford University in 1998 with a B.A. in economics. That same year, he co-founded PayPal with Peter Thiel, Luke Nosek, Elon Musk, and Max Levchin. From 1998 to 2002, Howery served as PayPal‚Äôs CFO. Following PayPal‚Äôs acquisition by eBay in 2002, Howery served as eBay‚Äôs Director of Corporate Development until 2003. Howery then rejoined Thiel in 2004 at Clarium Capital Management, where he served as vice president of private equity, as well as a member of the research and trading teams. In 2005, Howery and Thiel, along with fellow PayPal alumnus, Luke Nosek, started Founders Fund.	That same year, he co-founded PayPal with Peter Thiel, Luke Nosek, Elon Musk, and Max Levchin.	/m/037zb2	Max_Levchin	82	93	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Nosek received a B.S. in Computer Science from the University of Illinois at Urbana-Champaign. In the summer of 1995, while still in college, he co-founded SponsorNet New Media, Inc., along with fellow UIUC students Max Levchin and Scott Banister. Nosek then worked for Netscape Communications Corporation.	In the summer of 1995, while still in college, he co-founded SponsorNet New Media, Inc., along with fellow UIUC students Max Levchin and Scott Banister.	/m/037zb2	Max_Levchin	121	132	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In 1998, with Max Levchin, Peter Thiel, Elon Musk, and Ken Howery, Nosek co-founded PayPal, serving as its vice president of marketing. After PayPal went public and was sold to eBay for $1.5 billion in 2002, Nosek left PayPal to travel and pursue angel investing.	In 1998, with Max Levchin, Peter Thiel, Elon Musk, and Ken Howery, Nosek co-founded PayPal, serving as its vice president of marketing.	/m/037zb2	Max_Levchin	14	25	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Slide, Inc., operator of the Slide.com website, was a Web 2.0 company founded by Max Levchin and based in San Francisco, California. Originally formed to make photo sharing software for social networking services such as MySpace, the company achieved its greatest success as the largest developer of third-party applications for Facebook. The company was acquired by Google on August 4, 2010 and shut down on March 6, 2012.	Slide, Inc., operator of the Slide.com website, was a Web 2.0 company founded by Max Levchin and based in San Francisco, California.	/m/037zb2	Max_Levchin	81	92	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Slide was begun as a project in 2004 and formed in 2005 by PayPal co-founder Max Levchin, who personally invested $1 million in the new company.	Slide was begun as a project in 2004 and formed in 2005 by PayPal co-founder Max Levchin, who personally invested $1 million in the new company.	/m/037zb2	Max_Levchin	77	88	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In the summer of 1995, Banister cofounded SponsorNet New Media, Inc., along with fellow University of Illinois at Urbana-Champaign students Max Levchin and Luke Nosek. Banister created the Submit It! service while in college. He left during his sophomore year in 1996 to co-found Submit It! Inc., where he served as vice president of technology. The company's other products included ListBot and ClickTrade. Submit It! Inc. was acquired by LinkExchange in June 1998, which in turn was acquired by Microsoft in November 1998.	In the summer of 1995, Banister cofounded SponsorNet New Media, Inc., along with fellow University of Illinois at Urbana-Champaign students Max Levchin and Luke Nosek.	/m/037zb2	Max_Levchin	140	151	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Scott Banister is co-founder and chairman of Zivity, an adult-themed social networking site co-founded with his wife, Cyan Banister, and Jeffrey Wescott.  He was an early investor in Powerset, a startup building a natural language search engine, and sits on the company's Board of Directors. He also sat on the Board of Directors for Slide, a start-up founded by PayPal co-founder Max Levchin, acquired by Google and shut down. Other private equity investments include Zappos.com, LiveOps, Facebook, Hi5.com, Tagged.com, iLike, Causes.com, Topsy Labs and TekTrak.	He also sat on the Board of Directors for Slide, a start-up founded by PayPal co-founder Max Levchin, acquired by Google and shut down.	/m/037zb2	Max_Levchin	89	100	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Flektor's erstwhile competitors include Slide.com (founded by PayPal co-founder Max Levchin), RockYou!, Yahoo‚Äôs JumpCut and Brightcove.	Flektor's erstwhile competitors include Slide.com (founded by PayPal co-founder Max Levchin), RockYou!, Yahoo‚Äôs JumpCut and Brightcove.	/m/037zb2	Max_Levchin	80	91	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In early 2007, Livingston released Founders at Work: Stories of Startups' Early Days (published by Apress), a collection of interviews with famous startup founders, including Steve Wozniak, Mitch Kapor, Ray Ozzie, and Max Levchin.	In early 2007, Livingston released Founders at Work: Stories of Startups' Early Days (published by Apress), a collection of interviews with famous startup founders, including Steve Wozniak, Mitch Kapor, Ray Ozzie, and Max Levchin.	/m/037zb2	Max_Levchin	218	229	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
The founders of YouNoodle are Bob Goodson and Kirill Makharinsky, both former students of the University of Oxford. Goodson had studied medieval English literature before moving from Oxford to California when Max Levchin, the co-founder of Paypal, invited him to join a start-up there. Makharinsky's degree was in applied mathematics, and he was also encouraged to pursue opportunities in the United States by Levchin. Other significant employees include Rebecca Hwang, a Stanford University doctoral student whose research is into social network theory.	Goodson had studied medieval English literature before moving from Oxford to California when Max Levchin, the co-founder of Paypal, invited him to join a start-up there.	/m/037zb2	Max_Levchin	93	104	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Max Levchin pitched his idea for a mobile device money transfer service to Peter Thiel at a breakfast meeting near Stanford University in 1998. Thiel invested and joined the company as co-founder. Later named PayPal after merging with an early competitor, the company grew to approximately 200 employees, hiring a number of people Levchin knew through the Computer Science department at the University of Illinois at Urbana-Champaign as well as some contacts of Thiel from The Stanford Review, a conservative and libertarian oriented magazine that Thiel started at Stanford. The company grew to serve the broader market of electronic currency, used in particular for online auctions. It went public in 2002 and was bought by eBay later that year for $1.5 billion, after eBay gave up on its own competing service, BillPoint. The original PayPal employees had difficulty adjusting to eBay's more traditional corporate culture, resulting in a mass departure: within four years approximately half of the original 200 employees, and all but 12 or fewer of the first 50 employees, had left. They remained connected as social and business acquaintances. A number of serial entrepreneurs from the group worked with each other in the following years to form new companies, venture funds, and to make private equity investment in each other's companies, particularly in the fields of social networking service and other Web 2.0 online software services.	Max Levchin pitched his idea for a mobile device money transfer service to Peter Thiel at a breakfast meeting near Stanford University in 1998.	/m/037zb2	Max_Levchin	0	11	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
The 2008 Web 2.0 Summit was held November 5‚Äì7, 2008 at the Palace Hotel in San Francisco. The theme was "Web Meets World". Speakers included Edgar Bronfman, Jr., Al Gore, Arianna Huffington, Vinod Khosla, Max Levchin, Gavin Newsom, Evan Williams, Jerry Yang and Mark Zuckerberg.	Speakers included Edgar Bronfman, Jr., Al Gore, Arianna Huffington, Vinod Khosla, Max Levchin, Gavin Newsom, Evan Williams, Jerry Yang and Mark Zuckerberg.	/m/037zb2	Max_Levchin	82	93	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In 2010, John cofounded Stripe, which received backing from Peter Thiel, Elon Musk, Max Levchin and Sequoia Capital.	In 2010, John cofounded Stripe, which received backing from Peter Thiel, Elon Musk, Max Levchin and Sequoia Capital.	/m/037zb2	Max_Levchin	84	95	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Aberman and Clerico were unable to get funding in Boston from the Techstars program. Instead, they were accepted by Y Combinator in California, which prompted Aberman and Clerico to move the company to California. On the West Coast, they received monetary support from Max Levchin, a cofounder of PayPal, and Ron Conway, an angel investor. The company received $1.65 million from August Capital during initial fundraising efforts; by August 2010, it received an additional $7.5 million from Highland Capital Partners and August Capital. By December 2010, WePay had raised $9 million in funding. Other investors include Steve Chen, a cofounder of YouTube, and Eric Dunn, a former CTO of Intuit, as well as entrepreneur Dave McClure. In May 2011, founders Bill Clerico and Rich Aberman were named two of the Best Young Tech Entrepreneurs by Bloomberg Businessweek.	On the West Coast, they received monetary support from Max Levchin, a cofounder of PayPal, and Ron Conway, an angel investor.	/m/037zb2	Max_Levchin	55	66	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
The company's original product was Submit It!, a web site announcement service. In May 1997, it introduced DirectoryGuide, a compilation of Internet search engines and directories. In October 1997, it acquired the search engine monitoring service PositionAgent from NetGambit, Inc., of Chicago. In December 1997, it launched ClickTrade, a service which enabled web sites to run link partner programs. Another of the company's products was ListBot, an email list hosting service. Both NetGambit's PositionAgent and ListBot were built by Max Levchin's NetMeridian Software.	Both NetGambit's PositionAgent and ListBot were built by Max Levchin's NetMeridian Software.	/m/037zb2	Max_Levchin	57	68	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
In November 2011, Kaggle announced a Series A funding round of $11 million from a number of high profile Silicon Valley investors. Index Ventures and Khosla Ventures led the round, while Max Levchin, the co-founder of PayPal, also took part and became Chairman of the Board. Another well-known investor is Hal Varian, Chief Economist at Google, who described Kaggle as "a way to organize the brainpower of the world‚Äôs most talented data scientists and make it accessible to organizations of every size". Founded in Melbourne, Australia, Kaggle moved to San Francisco in 2011 and experienced a phase of rapid expansion following its fundraising.	Index Ventures and Khosla Ventures led the round, while Max Levchin, the co-founder of PayPal, also took part and became Chairman of the Board.	/m/037zb2	Max_Levchin	56	67	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Sponsors for the 2006 conference included Amazon.com, Cisco Systems, Bank of America, Electronics Arts, General Electric, Morgan Stanley, Nvidia, Palantir Technologies and others. Speakers included Adrian Bowyer, Burnie Burns, Robert X. Cringely, Chris DiBona, Jawed Karim, Max Levchin, Yale Patt, and Joel Spolsky.	Speakers included Adrian Bowyer, Burnie Burns, Robert X. Cringely, Chris DiBona, Jawed Karim, Max Levchin, Yale Patt, and Joel Spolsky.	/m/037zb2	Max_Levchin	94	105	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Between May 2007 and August 2010, Rabois worked for Slide, a company headed by Max Levchin that focused on slideshows and animations in social networks. Levchin, one of the co-founders of PayPal, knew Rabois from their time together at PayPal. Rabois left Slide around the time that the company was sold to Google Inc.	Between May 2007 and August 2010, Rabois worked for Slide, a company headed by Max Levchin that focused on slideshows and animations in social networks.	/m/037zb2	Max_Levchin	79	90	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
MemSQL is a distributed, in-memory database that is part of the NewSQL movement. It is an ACID-compliant RDBMS that most notably converts SQL into C++ through code generation. MemSQL was founded in 2011 and is a graduate of the Y Combinator startup program. MemSQL has raised more than $5 million to date from a variety of investors including First Round Capital, IA Ventures, NEA, and several prominent angels including Paul Buchheit, Max Levchin, Aaron Levie, and Ashton Kutcher. MemSQL launched its database to the public on June 18, 2012.	MemSQL has raised more than $5 million to date from a variety of investors including First Round Capital, IA Ventures, NEA, and several prominent angels including Paul Buchheit, Max Levchin, Aaron Levie, and Ashton Kutcher.	/m/037zb2	Max_Levchin	178	189	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
TransferWise has received seed funding amounting to $1.3 million from a consortium including leading venture firms IA Ventures and Index Ventures, as well as individual investors such as PayPal co-founder Max Levchin, former Betfair CEO David Yu, and Wonga.com co-founder Errol Damelin. TransferWise also received investment after being named one of Seedcamp 2011's winners.	TransferWise has received seed funding amounting to $1.3 million from a consortium including leading venture firms IA Ventures and Index Ventures, as well as individual investors such as PayPal co-founder Max Levchin, former Betfair CEO David Yu, and Wonga.com co-founder Errol Damelin.	/m/037zb2	Max_Levchin	205	216	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Other major contributors include Steve Ballmer (CEO of Microsoft -- was not in the original list at launch), Steve Chen (co-founder of YouTube -- was not in the original list at launch), Brian Chesky (founder of Airbnb), Chris Cox, Paul Graham (co-founder of Y Combinator), Reed Hastings (CEO of Netflix), Chad Hurley, Josh James, Max Levchin (former CTO of Paypal), Joe Lonsdale (founder of Palantir and Addepar), Andrew Mason (founder and CEO of Groupon), Marissa Mayer (CEO of Yahoo!), Mary Meeker, Dave Morin (CEO of Path), Mark Pincus, Keith Rabois, Eric Schmidt (executive chairman at Google Inc), Brad Smith (Microsoft executive vice president of legal affairs), Kevin Systrom (CEO of Instagram), Padmasree Warrior (CTO of Cisco), and Fred Wilson (of Union Square Ventures).	Other major contributors include Steve Ballmer (CEO of Microsoft -- was not in the original list at launch), Steve Chen (co-founder of YouTube -- was not in the original list at launch), Brian Chesky (founder of Airbnb), Chris Cox, Paul Graham (co-founder of Y Combinator), Reed Hastings (CEO of Netflix), Chad Hurley, Josh James, Max Levchin (former CTO of Paypal), Joe Lonsdale (founder of Palantir and Addepar), Andrew Mason (founder and CEO of Groupon), Marissa Mayer (CEO of Yahoo!	/m/037zb2	Max_Levchin	331	342	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
A "Stories" section on the website features videos of FWD.us supporters featuring their personal stories. Featured videos include videos by Ruchi Sanghvi (who worked at Facebook and is now at Dropbox) and Max Levchin (co-founder of PayPal).	Featured videos include videos by Ruchi Sanghvi (who worked at Facebook and is now at Dropbox) and Max Levchin (co-founder of PayPal).	/m/037zb2	Max_Levchin	99	110	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
Wavii had received funding from Mitch Kapor, Max Levchin, Dave Morin, Keith Rabois, Benjamin Ling, Joshua Schachter, Scott Banister, CrunchFund, Felicis Ventures, Gil Elbaz, Fritz Lanman, Matt Ocko, Rick Marini, Brandee Barker, Max Ventilla, MG Siegler, and SV Angel.	Wavii had received funding from Mitch Kapor, Max Levchin, Dave Morin, Keith Rabois, Benjamin Ling, Joshua Schachter, Scott Banister, CrunchFund, Felicis Ventures, Gil Elbaz, Fritz Lanman, Matt Ocko, Rick Marini, Brandee Barker, Max Ventilla, MG Siegler, and SV Angel.	/m/037zb2	Max_Levchin	45	56	/business/board_member,/computer/computer_scientist,/film/producer,/internet/website_owner,/organization/organization_founder,/people/person,/user/narphorium/people/nndb_person,/venture_capital/venture_investor
iCal development is quite different from other Apple software because it was designed independently by a small French team working "secretly" in Paris, led by Jean-Marie Hullot, a friend of Steve Jobs. iCal's development has since been transferred to Apple US headquarters in Cupertino.	iCal development is quite different from other Apple software because it was designed independently by a small French team working "secretly" in Paris, led by Jean-Marie Hullot, a friend of Steve Jobs.	/m/03gvrk1	Jean-Marie_Hullot	159	176	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Eventually, the availability of usable implementations of Smalltalk for IBM PC-AT class machines allowed IBM advanced technology projects to experiment with Smalltalk. At about the same time, visual interface construction tools were coming up on the radar screens. Smalltalk research projects such as InterCons by David N. Smith of IBM, and Fabrik by a team at Apple led by Dan Ingalls were building interactive graphical applications built from composition of graphical primitives. Higher level construction of user interfaces was evidenced by other tools such as Jean-Marie Hullot's interface builder first done in Lisp and then evolved to become the Interface Builder tool in NeXTStep, and later Mac OS X, which allowed for building user interfaces by WYSIWYG composition of UI widgets which could be "wired" to each other and to application logic written in Objective-C. The original prototype which led to VisualAge was an attempt "to make something like the NeXT interface builder" within the Smalltalk/V development environment. By the time VisualAge was released as a product, much more emphasis was placed on visual construction of application logic as well as of the user interface. This emphasis was in part due to the "positioning" for "strategic" reasons of Smalltalk as a generator rather than a language within IBM's System Application Architecture.	Higher level construction of user interfaces was evidenced by other tools such as Jean-Marie Hullot's interface builder first done in Lisp and then evolved to become the Interface Builder tool in NeXTStep, and later Mac OS X, which allowed for building user interfaces by WYSIWYG composition of UI widgets which could be "wired" to each other and to application logic written in Objective-C.	/m/03gvrk1	Jean-Marie_Hullot	82	99	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
The town has since been home to noted residents including Darco, Frank Alamo, Guillaume Depardieu, Jean-Louis Aubert, Michel Rocard, Flavie Flament, Laurent Garnier, Jean-Marie Hullot, Jean Michel Jarre, Benjamin Castaldi and Gilbert Montagn√© have been residents of Bougival. Noted advertising pioneer Charles-Louis Havas lived in Bougival. Centennial Yvonne van Quickenborn, entrepreneur (STOP) and musician, spent the last 70 years of her life in Bougival.	The town has since been home to noted residents including Darco, Frank Alamo, Guillaume Depardieu, Jean-Louis Aubert, Michel Rocard, Flavie Flament, Laurent Garnier, Jean-Marie Hullot, Jean Michel Jarre, Benjamin Castaldi and Gilbert Montagn√© have been residents of Bougival.	/m/03gvrk1	Jean-Marie_Hullot	166	183	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Interface Builder first made its appearance in 1986 written in Lisp (for the ExperLisp product by ExperTelligence). It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox. Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs. Jobs immediately recognized its value, and started incorporating it into NeXTSTEP, and by 1988 it was part of NeXTSTEP 0.8. It was the first commercial application that allowed interface objects, such as buttons, menus, and windows, to be placed in an interface using a mouse. One notable early use of Interface Builder was the development of the WorldWideWeb web browser by Tim Berners-Lee at CERN using a NeXT workstation.	It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox.	/m/03gvrk1	Jean-Marie_Hullot	33	50	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Interface Builder first made its appearance in 1986 written in Lisp (for the ExperLisp product by ExperTelligence). It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox. Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs. Jobs immediately recognized its value, and started incorporating it into NeXTSTEP, and by 1988 it was part of NeXTSTEP 0.8. It was the first commercial application that allowed interface objects, such as buttons, menus, and windows, to be placed in an interface using a mouse. One notable early use of Interface Builder was the development of the WorldWideWeb web browser by Tim Berners-Lee at CERN using a NeXT workstation.	Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs.	/m/03gvrk1	Jean-Marie_Hullot	20	37	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Interface Builder first made its appearance in 1986 written in Lisp (for the ExperLisp product by ExperTelligence). It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox. Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs. Jobs immediately recognized its value, and started incorporating it into NeXTSTEP, and by 1988 it was part of NeXTSTEP 0.8. It was the first commercial application that allowed interface objects, such as buttons, menus, and windows, to be placed in an interface using a mouse. One notable early use of Interface Builder was the development of the WorldWideWeb web browser by Tim Berners-Lee at CERN using a NeXT workstation.	It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox.	/m/03gvrk1	Jean-Marie_Hullot	33	50	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Interface Builder first made its appearance in 1986 written in Lisp (for the ExperLisp product by ExperTelligence). It was invented and developed by Jean-Marie Hullot using the object-oriented features in ExperLisp, and deeply integrated with the Macintosh toolbox. Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs. Jobs immediately recognized its value, and started incorporating it into NeXTSTEP, and by 1988 it was part of NeXTSTEP 0.8. It was the first commercial application that allowed interface objects, such as buttons, menus, and windows, to be placed in an interface using a mouse. One notable early use of Interface Builder was the development of the WorldWideWeb web browser by Tim Berners-Lee at CERN using a NeXT workstation.	Denison Bollay took Jean-Marie Hullot to NeXT later that year to demonstrate it to Steve Jobs.	/m/03gvrk1	Jean-Marie_Hullot	20	37	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Forstall was said to be responsible for the departure of Tony Fadell (SVP of hardware engineering) and Jean-Marie Hullot (CTO of applications) in 2005. Then-iPod chief Jon Rubinstein also had a strained relationship with Forstall. After Jobs' death in 2011, it had been reported that Forstall was trying to gather power to challenge Cook.	Forstall was said to be responsible for the departure of Tony Fadell (SVP of hardware engineering) and Jean-Marie Hullot (CTO of applications) in 2005.	/m/03gvrk1	Jean-Marie_Hullot	103	120	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
He was the author of a unification algorithm for simply typed lambda calculus, and of a complete proof method for Church's theory of types (Constrained Resolution). He worked on the Mentor program editor in 1974‚Äì1977 with Gilles Kahn. He worked on the KB equational proof system in 1978‚Äì1984 with Jean-Marie Hullot. He led the Formel project in the 1980s, which developed the Caml programming language. He designed the Calculus of Constructions in 1984 with Thierry Coquand. He led the Coq project in the 1990s with Christine Paulin, who developed the Coq proof assistant. He invented the Zipper data structure in 1996. He was Head of International Relations for INRIA in 1996‚Äì2000. He designed the Zen Computational Linguistics toolkit in 2000‚Äì2004.	He worked on the KB equational proof system in 1978‚Äì1984 with Jean-Marie Hullot.	/m/03gvrk1	Jean-Marie_Hullot	62	79	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
Fotopedia was launched in June 2009 by 5 former Apple employees: Jean-Marie Hullot, Bertrand Guiheneuf, Manuel Colom, S√©bastien Maury and Olivier Gutknecht.	Fotopedia was launched in June 2009 by 5 former Apple employees: Jean-Marie Hullot, Bertrand Guiheneuf, Manuel Colom, S√©bastien Maury and Olivier Gutknecht.	/m/03gvrk1	Jean-Marie_Hullot	65	82	/award/award_winner,/computer/computer_scientist,/influence/influence_node,/law/inventor,/organization/organization_founder,/people/person
In 1996, the Association for Computing Machinery instituted the Paris Kanellakis Theory and Practice Award, which is granted yearly to honor "specific theoretical accomplishments that have had a significant and demonstrable effect on the practice of computing". Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	/m/03nq8g_	Kurt_Mehlhorn	564	577	/book/author,/education/academic,/people/person
Although his first studies were in mathematics at the Aristotelian University of Thessaloniki, he earned a second degree in Informatics at the University of Saarland, Germany. He earned his Master's (thesis: "Sorting Presorted Files") from this University, along with a PhD in Computer science, with a thesis entitled "Some Results for the Dictionary Problem", which he completed under Professor Kurt Mehlhorn, director of the Max Planck Institute for Informatics.	He earned his Master's (thesis: "Sorting Presorted Files") from this University, along with a PhD in Computer science, with a thesis entitled "Some Results for the Dictionary Problem", which he completed under Professor Kurt Mehlhorn, director of the Max Planck Institute for Informatics.	/m/03nq8g_	Kurt_Mehlhorn	220	233	/book/author,/education/academic,/people/person
He is one of the 48 writers of a computer science book, Handbook of Theoretical Computer Science, Vol 1 Elsevier Science publishers, co-published by MIT Press, his work being, along with professor Kurt Mehlhorn, in Chapter 6: Data Structures (his favourite field).	He is one of the 48 writers of a computer science book, Handbook of Theoretical Computer Science, Vol 1 Elsevier Science publishers, co-published by MIT Press, his work being, along with professor Kurt Mehlhorn, in Chapter 6: Data Structures (his favourite field).	/m/03nq8g_	Kurt_Mehlhorn	197	210	/book/author,/education/academic,/people/person
Kurt Mehlhorn proved several equations for time complexity of operations on the data structures dynamized according to this idea. Some of these equalities are listed.	Kurt Mehlhorn proved several equations for time complexity of operations on the data structures dynamized according to this idea.	/m/03nq8g_	Kurt_Mehlhorn	0	13	/book/author,/education/academic,/people/person
Albers studied mathematics, computer science, and business administration in Osnabr√ºck and received her Ph.D. (Dr. rer. nat.) in 1993 at Saarland University under the supervision of Kurt Mehlhorn. Until 1999 she was associated with the Max Planck Institute for Computer Science and held visiting and postdoctoral positions at the International Computer Science Institute in Berkeley, Free University of Berlin, and University of Paderborn. In 1999 she received her habilitation and accepted a position at Dortmund University. From 2001 to 2009 she was professor of computer science at Albert-Ludwigs-Universit√§t Freiburg. Since 2009 she has been at Humboldt-Universit√§t zu Berlin.	) in 1993 at Saarland University under the supervision of Kurt Mehlhorn.	/m/03nq8g_	Kurt_Mehlhorn	58	71	/book/author,/education/academic,/people/person
Robert "Bob" Lee Constable is a professor of computer science and first and former dean of the department at Cornell University. He is known for his work on connecting computer programs and mathematical proofs, especially the NuPRL system. Constable received his PhD in 1968 under Stephen Kleene and has supervised over 40 students, including Steven Muchnick, Kurt Mehlhorn, Edmund M. Clarke, and Robert Harper. He is a Fellow of the Association for Computing Machinery.	Constable received his PhD in 1968 under Stephen Kleene and has supervised over 40 students, including Steven Muchnick, Kurt Mehlhorn, Edmund M. Clarke, and Robert Harper.	/m/03nq8g_	Kurt_Mehlhorn	120	133	/book/author,/education/academic,/people/person
His AI dissertation students were Ronald Loui, Bulent Murtezaoglu, and Choh Man Teng, and postdoctoral visitor Fahiem Bacchus. His philosophy students included daughter Alice Kyburg, Mariam Thalos, Gregory Wheeler, William Harper, in addition to those listed above.	His philosophy students included daughter Alice Kyburg, Mariam Thalos, Gregory Wheeler, William Harper, in addition to those listed above.	/m/03hgwxk	Gregory_Wheeler	71	86	/people/person
The journal was established in 1991 with James Henry Fetzer as founding editor. It is published by Springer Science+Business Media on behalf of the Society for Machines and Mentality (a special interest group within the International Association for Computing and Philosophy). The current editor-in-chief is Gregory Wheeler (New University of Lisbon).	The current editor-in-chief is Gregory Wheeler (New University of Lisbon).	/m/03hgwxk	Gregory_Wheeler	31	46	/people/person
The term VLIW, and the concept of VLIW architecture itself, were invented by Josh Fisher in his research group at Yale University in the early 1980s. His original development of trace scheduling as a compilation technique for VLIW was developed when he was a graduate student at New York University. Prior to VLIW, the notion of prescheduling functional units and instruction-level parallelism in software was well established in the practice of developing horizontal microcode. Fisher's innovations were around developing a compiler that could target horizontal microcode from programs written in an ordinary programming language. He realized that to get good performance and target a wide-issue machine, it would be necessary to find parallelism beyond that generally within a basic block. He developed region scheduling techniques to identify parallelism beyond basic blocks. Trace scheduling is such a technique, and involves scheduling the most likely path of basic blocks first, inserting compensation code to deal with speculative motions, scheduling the second most likely trace, and so on, until the schedule is complete.	The term VLIW, and the concept of VLIW architecture itself, were invented by Josh Fisher in his research group at Yale University in the early 1980s.	/m/06t57l	Josh_Fisher	77	88	/award/award_winner,/computer/computer_scientist,/people/person
One of the licensees of the Multiflow technology is Hewlett-Packard, which Josh Fisher joined after Multiflow's demise. Bob Rau, founder of Cydrome, also joined HP after Cydrome failed. These two would lead computer architecture research within Hewlett-Packard during the 1990s.	One of the licensees of the Multiflow technology is Hewlett-Packard, which Josh Fisher joined after Multiflow's demise.	/m/06t57l	Josh_Fisher	75	86	/award/award_winner,/computer/computer_scientist,/people/person
Quarterfinalist: Real Madrid (Spain) Louis Bullock, Igor Rakoƒçeviƒá, Venson Hamilton, Micka√´l Gelabale, Moustapha Sonko, Felipe Reyes, Alex Scales, Eduardo Hern√°ndez-Sonseca, Axel Hervelle, Marko Tomas, Ned≈æad Sinanoviƒá, H√©ctor Garc√≠a, Josh Fisher, √ìscar Gonz√°lez, Roberto Nunez	Quarterfinalist: Real Madrid (Spain) Louis Bullock, Igor Rakoƒçeviƒá, Venson Hamilton, Micka√´l Gelabale, Moustapha Sonko, Felipe Reyes, Alex Scales, Eduardo Hern√°ndez-Sonseca, Axel Hervelle, Marko Tomas, Ned≈æad Sinanoviƒá, H√©ctor Garc√≠a, Josh Fisher, √ìscar Gonz√°lez, Roberto Nunez	/m/06t57l	Josh_Fisher	235	246	/award/award_winner,/computer/computer_scientist,/people/person
Fourth: Real Madrid (Spain) Pablo Prigioni, D'or Fischer, Ante Tomiƒá, Clay Tucker, Nikola Mirotiƒá, Novica Veliƒçkoviƒá, Sergio Llull, Felipe Reyes, Sergio Rodr√≠guez, Carlos Su√°rez, Jorge Garbajosa, Sergi Vidal, Mirza Begiƒá, Josh Fisher, Victor Arteaga (Coach: Ettore Messina / Emanuele Molin)	Fourth: Real Madrid (Spain) Pablo Prigioni, D'or Fischer, Ante Tomiƒá, Clay Tucker, Nikola Mirotiƒá, Novica Veliƒçkoviƒá, Sergio Llull, Felipe Reyes, Sergio Rodr√≠guez, Carlos Su√°rez, Jorge Garbajosa, Sergi Vidal, Mirza Begiƒá, Josh Fisher, Victor Arteaga (Coach: Ettore Messina / Emanuele Molin)	/m/06t57l	Josh_Fisher	222	233	/award/award_winner,/computer/computer_scientist,/people/person
Quarterfinalist: Gescrap Bizkaia Bilbao (Spain) Aaron Jackson, D'or Fischer, Marko Banic, Janis Blums, Josh Fisher, Axel Hervelle, Alex Mumbru, Raul Lopez, Kostas Vasiliadis, Dimitris Mavroeidis, Roger Grimau, Tomas Hampl, Damir Krupalija, Oliver Steviƒá, Mamadou Samb	Quarterfinalist: Gescrap Bizkaia Bilbao (Spain) Aaron Jackson, D'or Fischer, Marko Banic, Janis Blums, Josh Fisher, Axel Hervelle, Alex Mumbru, Raul Lopez, Kostas Vasiliadis, Dimitris Mavroeidis, Roger Grimau, Tomas Hampl, Damir Krupalija, Oliver Steviƒá, Mamadou Samb	/m/06t57l	Josh_Fisher	103	114	/award/award_winner,/computer/computer_scientist,/people/person
The time hierarchy theorem for deterministic multi-tape Turing machines was first proven by Richard Stearns and Juris Hartmanis in 1965. It was improved a year later when F. C. Hennie and Richard Stearns improved the efficiency of the Universal Turing machine. As a consequence, for every deterministic time-bounded complexity class, there is a strictly larger time-bounded complexity class, and so the time-bounded hierarchy of complexity classes does not completely collapse. More precisely, the time hierarchy theorem for deterministic Turing machines states that for all time-constructible functions ,	The time hierarchy theorem for deterministic multi-tape Turing machines was first proven by Richard Stearns and Juris Hartmanis in 1965.	/m/01shq9	Juris_Hartmanis	112	127	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Richard Edwin Stearns (born July 5, 1936) is a prominent computer scientist who, with Juris Hartmanis, received the 1993 ACM Turing Award "in recognition of their seminal paper which established the foundations for the field of computational complexity theory" (Hartmanis and Stearns, 1965). In 1994 he was inducted as a Fellow of the Association for Computing Machinery.	Richard Edwin Stearns (born July 5, 1936) is a prominent computer scientist who, with Juris Hartmanis, received the 1993 ACM Turing Award "in recognition of their seminal paper which established the foundations for the field of computational complexity theory" (Hartmanis and Stearns, 1965).	/m/01shq9	Juris_Hartmanis	86	101	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Professor Immerman is an editor of the SIAM Journal on Computing and of Logical Methods in Computer Science. He received B.S. and M.S. degrees from Yale University in 1974 and his Ph.D. from Cornell University in 1980 under the supervision of Juris Hartmanis, a Turing award winner at Cornell. His book "Descriptive Complexity" appeared in 1999.	degrees from Yale University in 1974 and his Ph.D. from Cornell University in 1980 under the supervision of Juris Hartmanis, a Turing award winner at Cornell.	/m/01shq9	Juris_Hartmanis	108	123	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Borodin did his undergraduate studies at Rutgers University, earning a bachelor's degree in mathematics in 1963. After earning a masters degree at the Stevens Institute of Technology in 1966 (while at the same time working P/T as a programmer at Bell Laboratories), he continued his graduate studies at Cornell University, completing a doctorate in 1969 under the supervision of Juris Hartmanis. He joined the Toronto faculty in 1969 and was promoted to full professor in 1977. He served as department chair from 1980 to 1985, and became University Professor in 2011.	After earning a masters degree at the Stevens Institute of Technology in 1966 (while at the same time working P/T as a programmer at Bell Laboratories), he continued his graduate studies at Cornell University, completing a doctorate in 1969 under the supervision of Juris Hartmanis.	/m/01shq9	Juris_Hartmanis	266	281	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Dilworth was born in 1914 in Hemet, California, at that time a remote desert ranching town. He went to college at the California Institute of Technology, receiving his baccalaureate in 1936 and continuing there for his graduate studies. Dilworth's graduate advisor was Morgan Ward, a student of Eric Temple Bell, who was also on the Caltech faculty at the time. On receiving his Ph.D. in 1939, Dilworth took an instructorship at Yale University. While at Yale, he met and married his wife, Miriam White, with whom he eventually had two sons. He returned to Caltech as a faculty member in 1943, and spent the remainder of his academic career there. Dilworth advised 17 Ph.D. students and as of 2010 has 373 academic descendants listed at the Mathematics Genealogy Project, many through his student Juris Hartmanis, a noted complexity theorist. Other notable mathematicians advised by Dilworth include Curtis Greene and Alfred W. Hales.	Dilworth advised 17 Ph.D. students and as of 2010 has 373 academic descendants listed at the Mathematics Genealogy Project, many through his student Juris Hartmanis, a noted complexity theorist.	/m/01shq9	Juris_Hartmanis	149	164	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Since the ground-laying 1965 paper of Hartmanis and Stearns and the 1979 book by Garey and Johnson on NP-completeness,  the term "computational complexity" (of algorithms) most commonly refers to the asymptotic computational complexity.	Since the ground-laying 1965 paper of Hartmanis and Stearns and the 1979 book by Garey and Johnson on NP-completeness,  the term "computational complexity" (of algorithms) most commonly refers to the asymptotic computational complexity.	/m/01shq9	Juris_Hartmanis	38	47	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
Dexter Campbell Kozen is an American theoretical computer scientist. He is Joseph Newton Pew, Jr. Professor in Engineering at Cornell University. He received his B.A. from Dartmouth College in 1974 and his PhD in computer science from Cornell University in 1976, where he was advised by Juris Hartmanis.	from Dartmouth College in 1974 and his PhD in computer science from Cornell University in 1976, where he was advised by Juris Hartmanis.	/m/01shq9	Juris_Hartmanis	120	135	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
STOC was first organised on 5‚Äì7 May 1969, in Marina del Rey, California, United States. The conference chairman was Patrick C. Fischer, and the program committee consisted of Michael A. Harrison, Robert W. Floyd, Juris Hartmanis, Richard M. Karp, Albert R. Meyer, and Jeffrey D. Ullman.	The conference chairman was Patrick C. Fischer, and the program committee consisted of Michael A. Harrison, Robert W. Floyd, Juris Hartmanis, Richard M. Karp, Albert R. Meyer, and Jeffrey D. Ullman.	/m/01shq9	Juris_Hartmanis	125	140	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
In structural complexity theory, the Berman‚ÄìHartmanis conjecture is an unsolved conjecture named after Leonard C. Berman and Juris Hartmanis that states that all NP-complete languages look alike, in the sense that they can be related to each other by polynomial time isomorphisms.	In structural complexity theory, the Berman‚ÄìHartmanis conjecture is an unsolved conjecture named after Leonard C. Berman and Juris Hartmanis that states that all NP-complete languages look alike, in the sense that they can be related to each other by polynomial time isomorphisms.	/m/01shq9	Juris_Hartmanis	125	140	/award/award_winner,/book/author,/education/academic,/influence/influence_node,/people/person
In 1977 and 1978, Jacob Ziv and Abraham Lempel published a pair of papers on a new class of lossless data-compression algorithms, now collectively referred to as LZ77 and LZ78. In 1983, Terry Welch developed a fast variant of LZ78 which was named Lempel‚ÄìZiv‚ÄìWelch (LZW).	In 1977 and 1978, Jacob Ziv and Abraham Lempel published a pair of papers on a new class of lossless data-compression algorithms, now collectively referred to as LZ77 and LZ78.	/m/06q835	Jacob_Ziv	18	27	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
Lempel‚ÄìZiv‚ÄìWelch (LZW) is a universal lossless data compression algorithm created by Abraham Lempel, Jacob Ziv, and Terry Welch. It was published by Welch in 1984 as an improved implementation of the LZ78 algorithm published by Lempel and Ziv in 1978. The algorithm is simple to implement, and has the potential for very high throughput in hardware implementations. It was the algorithm of the widely used Unix file compression utility compress, and is used in the GIF image format.	Lempel‚ÄìZiv‚ÄìWelch (LZW) is a universal lossless data compression algorithm created by Abraham Lempel, Jacob Ziv, and Terry Welch.	/m/06q835	Jacob_Ziv	101	110	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
LZ77 and LZ78 are the two lossless data compression algorithms published in papers by Abraham Lempel and Jacob Ziv in 1977 and 1978. They are also known as LZ1 and LZ2 respectively. These two algorithms form the basis for many variations including LZW, LZSS, LZMA and others. Besides their academic influence, these algorithms formed the basis of several ubiquitous compression schemes, including GIF and the DEFLATE algorithm used in PNG.	LZ77 and LZ78 are the two lossless data compression algorithms published in papers by Abraham Lempel and Jacob Ziv in 1977 and 1978.	/m/06q835	Jacob_Ziv	105	114	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
The Lempel‚ÄìZiv‚ÄìMarkov chain algorithm (LZMA) is an algorithm used to perform lossless data compression. It has been under development since 1998 and was first used in the 7z format of the 7-Zip archiver. This algorithm uses a dictionary compression scheme somewhat similar to the LZ77 algorithm published by Abraham Lempel and Jacob Ziv in 1977 and features a high compression ratio (generally higher than bzip2) and a variable compression-dictionary size (up to 4¬†GB), while still maintaining decompression speed similar to other commonly used compression algorithms.	This algorithm uses a dictionary compression scheme somewhat similar to the LZ77 algorithm published by Abraham Lempel and Jacob Ziv in 1977 and features a high compression ratio (generally higher than bzip2) and a variable compression-dictionary size (up to 4¬†GB), while still maintaining decompression speed similar to other commonly used compression algorithms.	/m/06q835	Jacob_Ziv	123	132	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
His historically important works start with the presentation of the LZ77 algorithm in a paper entitled "A Universal Algorithm for Sequential Data Compression" in the IEEE Transactions on Information Theory (May 1977), co-authored by Jacob Ziv.	His historically important works start with the presentation of the LZ77 algorithm in a paper entitled "A Universal Algorithm for Sequential Data Compression" in the IEEE Transactions on Information Theory (May 1977), co-authored by Jacob Ziv.	/m/06q835	Jacob_Ziv	233	242	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
The LZ77 and LZ78 algorithms authored by Lempel and Jacob Ziv have led to a number of derivative works, including the Lempel‚ÄìZiv‚ÄìWelch algorithm, used in the GIF image format, and the Lempel-Ziv-Markov chain algorithm, used in the 7-Zip and xz compressors. The algorithms have also been used as originally published in formats such as DEFLATE, used in the PNG image format.	The LZ77 and LZ78 algorithms authored by Lempel and Jacob Ziv have led to a number of derivative works, including the Lempel‚ÄìZiv‚ÄìWelch algorithm, used in the GIF image format, and the Lempel-Ziv-Markov chain algorithm, used in the 7-Zip and xz compressors.	/m/06q835	Jacob_Ziv	52	61	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
In 1996, the Association for Computing Machinery instituted the Paris Kanellakis Theory and Practice Award, which is granted yearly to honor "specific theoretical accomplishments that have had a significant and demonstrable effect on the practice of computing". Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	Past recipients include Leonard Adleman, Whitfield Diffie, Martin Hellman, Ralph Merkle, Ron Rivest, and Adi Shamir, Abraham Lempel and Jacob Ziv, Randy Bryant, Edmund Clarke, E. Allen Emerson, and Ken McMillan, Danny Sleator and Robert Tarjan, Narendra Karmarkar, Eugene Myers, Peter Franaszek, Gary Miller, Michael Rabin, Robert Solovay, and Volker Strassen, Yoav Freund and Robert Schapire, Gerard Holzmann, Robert Kurshan, Moshe Vardi, and Pierre Wolper, Robert Brayton, Bruno Buchberger, Corinna Cortes and Vladimir Vapnik, Mihir Bellare and Phillip Rogaway, Kurt Mehlhorn, Hanan Samet, and Andrei Broder, Moses Charikar, and Piotr Indyk.	/m/06q835	Jacob_Ziv	136	145	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
Terry A. Welch is an American computer scientist. Along with Abraham Lempel and Jacob Ziv, he developed the lossless Lempel‚ÄìZiv‚ÄìWelch (LZW) compression algorithm, which was published in 1984.	Along with Abraham Lempel and Jacob Ziv, he developed the lossless Lempel‚ÄìZiv‚ÄìWelch (LZW) compression algorithm, which was published in 1984.	/m/06q835	Jacob_Ziv	30	39	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
In many cases the optimal design of communication or radar operating under noise is too complicated to be practical, while practical solutions are known. In such cases it is extremely important to know how close the practical solution is to the theoretically optimal one. Several papers written by Zakai jointly with coauthors (Ben-Zion Bobrovsky, Ofer Zeitouni, Jacob Ziv and Eduardo Mayer-Wolf) introduced new approaches and results that gave a new impact to this topic.	Several papers written by Zakai jointly with coauthors (Ben-Zion Bobrovsky, Ofer Zeitouni, Jacob Ziv and Eduardo Mayer-Wolf) introduced new approaches and results that gave a new impact to this topic.	/m/06q835	Jacob_Ziv	91	100	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
In 1973, David Slepian and Jack Keil Wolf proposed the information theoretical lossless compression bound on distributed compression of two statistically dependent i.i.d. sources X and Y. After that, this bound was extended to cases with more than two sources by Thomas M. Cover in 1975, while the theoretical results on lossy compression case are presented by Aaron D. Wyner and Jacob Ziv in 1976.	After that, this bound was extended to cases with more than two sources by Thomas M. Cover in 1975, while the theoretical results on lossy compression case are presented by Aaron D. Wyner and Jacob Ziv in 1976.	/m/06q835	Jacob_Ziv	192	201	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
Similar results were obtained in 1976 by Aaron D. Wyner and Jacob Ziv with regard to lossy coding of joint Gaussian sources.	Similar results were obtained in 1976 by Aaron D. Wyner and Jacob Ziv with regard to lossy coding of joint Gaussian sources.	/m/06q835	Jacob_Ziv	60	69	/award/award_winner,/computer/computer_scientist,/education/academic,/people/person,/symbols/name_source
His brother Boris Katz is a principal research scientist at MIT.	His brother Boris Katz is a principal research scientist at MIT.	/m/03d63n	Boris_Katz	12	22	/education/academic,/influence/influence_node,/people/person
Modeling experts have written criticisms of UML, including Brian Henderson-Sellers and Cesar Gonzalez-Perez in "Uses and Abuses of the Stereotype Mechanism in UML 1.x and 2.0".	Modeling experts have written criticisms of UML, including Brian Henderson-Sellers and Cesar Gonzalez-Perez in "Uses and Abuses of the Stereotype Mechanism in UML 1.x and 2.0".	/m/0c_9lh	Brian_Henderson-Sellers	59	82	/people/person
Firesmith is a co-founder with Brian Henderson-Sellers and Ian Graham of the international OPEN Consortium. Firesmith was the principal developer of the OPEN Modeling Language (OML). Firesmith is the founder of the The OPEN Process Framework Repository Organization and the developer of its large repository of free, open-source, reusable method components.	Firesmith is a co-founder with Brian Henderson-Sellers and Ian Graham of the international OPEN Consortium.	/m/0c_9lh	Brian_Henderson-Sellers	31	54	/people/person
Colette Rolland (1999) provides an example of a meta-process model which utilizes the instantiation and assembly technique. In the paper the approach is called ‚ÄúMulti-model view‚Äù and was applied on the CREWS-L‚ÄôEcritoire method. The CREWS-L‚ÄôEcritoire method represents a methodical approach for Requirements Engineering, ‚Äúthe part of the IS development that involves investigating problems and requirements of the users community and developing a specification of the future system, the so-called conceptual schema.‚Äù.	Colette Rolland (1999) provides an example of a meta-process model which utilizes the instantiation and assembly technique.	/m/05f9bnm	Colette_Rolland	0	15	/people/person
Furthermore, the CREWS-L‚ÄôEcritoire utilizes Process Models and Meta-Process Models in order to achieve flexibility for the situation at hand. The approach is based on the notion of a labelled graph of intentions and strategies called a map as well as its associated guidelines. Together, map (process model) and the guidelines form the method. The main source of this explanation is the elaboration of Colette Rolland in.	The main source of this explanation is the elaboration of Colette Rolland in.	/m/05f9bnm	Colette_Rolland	58	73	/people/person
Colette Rolland describes the meta-model as follow: (Meta-intentions are in bold, meta-strategies in italic ‚Äì in green in the map).	Colette Rolland describes the meta-model as follow: (Meta-intentions are in bold, meta-strategies in italic ‚Äì in green in the map).	/m/05f9bnm	Colette_Rolland	0	15	/people/person
In 1976, an entity-relationship (ER) graphic notation was introduced by Peter Chen. He stressed that it was a "semantic" modelling technique and independent of any database modelling techniques such as Hierarchical, CODASYL, Relational etc. Since then, languages for information models have continued to evolve. Some examples are the Integrated Definition Language 1 Extended (IDEF1X), the EXPRESS language and the Unified Modeling Language (UML). In the 1980s there were several approaches to extend Chen‚Äôs Entity Relationship Model. Also important in this decade is REMORA by Colette Rolland.	Also important in this decade is REMORA by Colette Rolland.	/m/05f9bnm	Colette_Rolland	43	58	/people/person
Asprey was born in Sioux City, Iowa; his parents were Gladys Brown Asprey and Peter Asprey Jr. He had an older brother and sister, actinide and fluorine chemist Larned B. Asprey (1919‚Äì2005), a signer of the Szil√°rd petition, and mathematician and computer scientist Winifred Asprey (1917‚Äì2007), founder of Vassar College's computer science department.	He had an older brother and sister, actinide and fluorine chemist Larned B. Asprey (1919‚Äì2005), a signer of the Szil√°rd petition, and mathematician and computer scientist Winifred Asprey (1917‚Äì2007), founder of Vassar College's computer science department.	/m/05pbkbd	Winifred_Asprey	171	186	/education/academic,/people/deceased_person,/people/person
Asprey was born in Sioux City, Iowa; his parents were Gladys Brown Asprey and Peter Asprey Jr. He had an older sister and a younger brother: mathematician and computer scientist Winifred Asprey (1917‚Äì2007), founder of Vassar College's computer science department, and military historian and writer Robert B. Asprey (1923‚Äì2009).	He had an older sister and a younger brother: mathematician and computer scientist Winifred Asprey (1917‚Äì2007), founder of Vassar College's computer science department, and military historian and writer Robert B. Asprey (1923‚Äì2009).	/m/05pbkbd	Winifred_Asprey	83	98	/education/academic,/people/deceased_person,/people/person
Deque is sometimes written dequeue, but this use is generally deprecated in technical literature or technical writing because dequeue is also a verb meaning "to remove from a queue". Nevertheless, several libraries and some writers, such as Aho, Hopcroft, and Ullman in their textbook Data Structures and Algorithms, spell it dequeue. John Mitchell, author of Concepts in Programming Languages, also uses this terminology.	Nevertheless, several libraries and some writers, such as Aho, Hopcroft, and Ullman in their textbook Data Structures and Algorithms, spell it dequeue.	/m/05pmjd	Jeffrey_Ullman	77	83	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
McIlroy's work was preceded and influenced by Steve Johnson's comparison program on GECOS and Mike Lesk's proof program. proof also originated on Unix and, like diff, produced line-by-line changes and even used angle-brackets (">" and "<") for presenting line insertions and deletions in the program's output. The heuristics used in these early applications were, however, deemed unreliable. The potential usefulness of a diff tool provoked McIlroy into researching and designing a more robust tool that could be used in a variety of tasks but perform well in the processing and size limitations of the PDP-11's hardware. His approach to the problem resulted from collaboration also with individuals at Bell Labs including Alfred Aho, Elliot Pinson, Jeffrey Ullman, and Harold S. Stone.	His approach to the problem resulted from collaboration also with individuals at Bell Labs including Alfred Aho, Elliot Pinson, Jeffrey Ullman, and Harold S. Stone.	/m/05pmjd	Jeffrey_Ullman	128	142	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
At Bell Labs Aho worked closely with Steve Johnson and Jeffrey Ullman to develop efficient algorithms for analyzing and translating programming languages. Steve Johnson used the bottom-up LALR parsing algorithms to create the syntax-analyzer generator yacc, and Michael E. Lesk and Eric Schmidt used Aho's regular-expression pattern-matching algorithms to create the lexical-analyzer generator lex. The lex and yacc tools and their derivatives have been used to develop the front ends of many of today's programming language compilers.	At Bell Labs Aho worked closely with Steve Johnson and Jeffrey Ullman to develop efficient algorithms for analyzing and translating programming languages.	/m/05pmjd	Jeffrey_Ullman	55	69	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Even the query language of SQL is loosely based on a relational algebra, though the operands in SQL (tables) are not exactly relations and several useful theorems about the relational algebra do not hold in the SQL counterpart (arguably to the detriment of optimisers and/or users). The SQL table model is a bag (multiset), rather than a set. For example, the expression (R ‚à™ S) ‚àí T = (R ‚àí T ) ‚à™ (S ‚àí T) is a theorem for relational algebra on sets, but not for relational algebra on bags; for a treatment of relational algebra on bags see chapter 5 of the "Complete" textbook by Garcia-Molina, Ullman and Widom.	For example, the expression (R ‚à™ S) ‚àí T = (R ‚àí T ) ‚à™ (S ‚àí T) is a theorem for relational algebra on sets, but not for relational algebra on bags; for a treatment of relational algebra on bags see chapter 5 of the "Complete" textbook by Garcia-Molina, Ullman and Widom.	/m/05pmjd	Jeffrey_Ullman	251	257	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In finite model theory, first-order logic (FO) extended with a transitive closure operator is usually called transitive closure logic, and abbreviated FO(TC) or just TC. TC is a sub-type of fixpoint logics. The fact that FO(TC) is strictly more expressive than FO was discovered by Ronald Fagin in 1974; the result was then rediscovered by Alfred Aho and Jeffrey Ullman in 1979, who proposed to use fixpoint logic as a database query language (Libkin 2004:vii). With more recent concepts of finite model theory, proof that FO(TC) is strictly more expressive than FO follows immediately from the fact that FO(TC) is not Gaifman-local (Libkin 2004:49).	The fact that FO(TC) is strictly more expressive than FO was discovered by Ronald Fagin in 1974; the result was then rediscovered by Alfred Aho and Jeffrey Ullman in 1979, who proposed to use fixpoint logic as a database query language (Libkin 2004:vii).	/m/05pmjd	Jeffrey_Ullman	148	162	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In addition to his research work, he is well known for his books on algorithms and formal languages coauthored with Jeffrey Ullman and Alfred Aho, regarded as classic texts in the field.	In addition to his research work, he is well known for his books on algorithms and formal languages coauthored with Jeffrey Ullman and Alfred Aho, regarded as classic texts in the field.	/m/05pmjd	Jeffrey_Ullman	116	130	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Hopcroft is also the co-recipient (with Jeffrey Ullman) of the 2010 IEEE John von Neumann Medal ‚Äúfor laying the foundations for the fields of automata and language theory and many seminal contributions to theoretical computer science.‚Äù	Hopcroft is also the co-recipient (with Jeffrey Ullman) of the 2010 IEEE John von Neumann Medal ‚Äúfor laying the foundations for the fields of automata and language theory and many seminal contributions to theoretical computer science.‚Äù	/m/05pmjd	Jeffrey_Ullman	40	54	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
At Princeton University from 1968 to 1972, he wrote his classic book, Operating Systems Principles, with E G Coffman. He collaborated with Alfred Aho and Jeffrey Ullman on optimality proofs for paging algorithms and on a simple proof that compilers based on precedence parsing do not need to backtrack. At Purdue University (1972‚Äì1983) he supervised numerous PhD theses validating locality-based theories of memory management and extending the new mathematics of operational analysis of queueing networks. He co-founded CSNET. He became department head in 1979. He completed another book on computational models, Machines, Languages, and Computation, with Jack Dennis and Joe Qualitz.	He collaborated with Alfred Aho and Jeffrey Ullman on optimality proofs for paging algorithms and on a simple proof that compilers based on precedence parsing do not need to backtrack.	/m/05pmjd	Jeffrey_Ullman	36	50	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
While the ideas used in disjoint-set forests have long been familiar, Robert Tarjan was the first to prove the upper bound (and a restricted version of the lower bound) in terms of the inverse Ackermann function, in 1975. Until this time the best bound on the time per operation, proven by Hopcroft and Ullman, was O(log* n), the iterated logarithm of n, another slowly growing function (but not quite as slow as the inverse Ackermann function).	Until this time the best bound on the time per operation, proven by Hopcroft and Ullman, was O(log* n), the iterated logarithm of n, another slowly growing function (but not quite as slow as the inverse Ackermann function).	/m/05pmjd	Jeffrey_Ullman	81	87	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Programming Language Design and Implementation (PLDI) is one of the ACM SIGPLAN's most important conferences. The precursor of PLDI was the Symposium on Compiler Optimization, held July 27‚Äì28, 1970 at the University of Illinois at Urbana-Champaign and chaired by Robert S. Northcote. That conference included papers by Frances E. Allen, John Cocke, Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman. The first conference in the current PLDI series took place in 1979 under the name SIGPLAN Symposium on Compiler Construction in Denver, Colorado. The next Compiler Construction conference took place in 1982 in Boston, Massachusetts. The Compiler Construction conferences then alternated with SIGPLAN Conferences on Language Issues until 1988, when the conference was renamed to PLDI. From 1982 until 2001, the conference acronym was SIGPLAN 'xx. Starting in 2002, the initialism became PLDI 'xx, and in 2006 PLDI xxxx.	That conference included papers by Frances E. Allen, John Cocke, Alfred V. Aho, Ravi Sethi, and Jeffrey D. Ullman.	/m/05pmjd	Jeffrey_Ullman	96	113	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Introduction to Automata Theory, Languages, and Computation is an influential computer science textbook by John Hopcroft and Jeffrey Ullman on formal languages and the theory of computation.	Introduction to Automata Theory, Languages, and Computation is an influential computer science textbook by John Hopcroft and Jeffrey Ullman on formal languages and the theory of computation.	/m/05pmjd	Jeffrey_Ullman	125	139	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The HRU security model (Harrison, Ruzzo, Ullman model) is an operating system level computer security model which deals with the integrity of access rights in the system. It is an extension of the Graham-Denning model, based around the idea of a finite set of procedures being available to edit the access rights of a subject  on an object . It is named after its three authors, Michael A. Harrison, Walter L. Ruzzo and Jeffrey D. Ullman.	The HRU security model (Harrison, Ruzzo, Ullman model) is an operating system level computer security model which deals with the integrity of access rights in the system.	/m/05pmjd	Jeffrey_Ullman	41	47	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The HRU security model (Harrison, Ruzzo, Ullman model) is an operating system level computer security model which deals with the integrity of access rights in the system. It is an extension of the Graham-Denning model, based around the idea of a finite set of procedures being available to edit the access rights of a subject  on an object . It is named after its three authors, Michael A. Harrison, Walter L. Ruzzo and Jeffrey D. Ullman.	It is named after its three authors, Michael A. Harrison, Walter L. Ruzzo and Jeffrey D. Ullman.	/m/05pmjd	Jeffrey_Ullman	89	95	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The lowest common ancestor problem was defined by Alfred Aho, John Hopcroft, and Jeffrey Ullman¬†(1973), but Dov Harel and Robert Tarjan¬†(1984) were the first to develop an optimally efficient lowest common ancestor data structure. Their algorithm processes any tree in linear time, so that subsequent lowest common ancestor queries may be answered in constant time per query. However, their data structure is complex and difficult to implement. Tarjan also found a simpler but less efficient algorithm, based on the union-find data structure, for computing lowest common ancestors of an offline batch of pairs of nodes.	The lowest common ancestor problem was defined by Alfred Aho, John Hopcroft, and Jeffrey Ullman¬†(1973), but Dov Harel and Robert Tarjan¬†(1984) were the first to develop an optimally efficient lowest common ancestor data structure.	/m/05pmjd	Jeffrey_Ullman	81	95	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Mairson received a B.A. in Mathematics from Yale University in 1978 and a Ph.D. in Computer Science from Stanford University in 1984 under the supervision of Jeffrey Ullman. His Ph.D. thesis, The Program Complexity of Searching a Table, won the Machtey Award at the 1983 IEEE Symposium on Foundations of Computer Science (FOCS). Mairson was a Postdoctoral researcher at INRIA Rocqencourt from 1984 to 1985, at Stanford University in 1985, and at the University of Oxford in 1986. He held a Visiting Professor position from 1999 to 2001 at Boston University. From 2005 to 2007, Mairson has served as the Chair of the Faculty Senate at Brandeis. He is currently an Associate Editor of the journal Logical Methods in Computer Science and Information and Computation, and sits on the editorial board of Higher-Order and Symbolic Computation.	in Mathematics from Yale University in 1978 and a Ph.D. in Computer Science from Stanford University in 1984 under the supervision of Jeffrey Ullman.	/m/05pmjd	Jeffrey_Ullman	134	148	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He was also an author of two widely-used theoretical computer science textbooks, Randomized Algorithms (Cambridge University Press 1995, ISBN 978-0-521-47465-8, with Prabhakar Raghavan) and Introduction to Automata Theory, Languages, and Computation (2nd ed., Addison-Wesley, 2000, with John Hopcroft and Jeffrey Ullman).	He was also an author of two widely-used theoretical computer science textbooks, Randomized Algorithms (Cambridge University Press 1995, ISBN 978-0-521-47465-8, with Prabhakar Raghavan) and Introduction to Automata Theory, Languages, and Computation (2nd ed., Addison-Wesley, 2000, with John Hopcroft and Jeffrey Ullman).	/m/05pmjd	Jeffrey_Ullman	305	319	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Alberto Mendelzon was born in Buenos Aires, Argentina. He received a Ph.D. degree from Princeton University in 1979, where his advisor was Jeffrey Ullman. After that he was a post-doctoral fellow at the IBM T.J. Watson Research Center for a year before joining the faculty of the University of Toronto in 1980.	He received a Ph.D. degree from Princeton University in 1979, where his advisor was Jeffrey Ullman.	/m/05pmjd	Jeffrey_Ullman	84	98	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Mendelzon established some of the earliest results on using the relational data model. Together with his thesis advisor, Jeffrey Ullman, and fellow Princeton students, including David Maier and Yeshoshua Sagiv, he co-authored a number of influential papers that laid out the fundamental issues and approaches for relational databases. In a now-famous paper (Maier, Mendelzon and Sagiv, TODS 1979), he introduced the chase, a method for testing implication of data dependencies that is now of widespread use in the database theory literature. This work has been highly influential: it is used, directly or indirectly, on an everyday basis by people who design databases, and it is used in commercial systems to reason about the consistency and correctness of a data design. New applications of the chase in meta-data management and data exchange are still being discovered.	Together with his thesis advisor, Jeffrey Ullman, and fellow Princeton students, including David Maier and Yeshoshua Sagiv, he co-authored a number of influential papers that laid out the fundamental issues and approaches for relational databases.	/m/05pmjd	Jeffrey_Ullman	34	48	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Maier established some of the earliest results on using the relational model. Together with his thesis advisor, Jeffrey Ullman, and fellow Princeton students, including Alberto O. Mendelzon and Yeshoshua Sagiv, he co-authored a number of influential papers that laid out the fundamental issues and approaches for relational databases. In a now-famous paper (Maier, Mendelzon and Sagiv, TODS 1979), he introduced the chase, a method for testing implication of data dependencies that is now of widespread use in the database theory literature. This work has been highly influential: it is used, directly or indirectly, on an everyday basis by people who design databases, and it is used in commercial systems to reason about the consistency and correctness of a data design. New applications of the chase in meta-data management and data exchange are still being discovered.	Together with his thesis advisor, Jeffrey Ullman, and fellow Princeton students, including Alberto O. Mendelzon and Yeshoshua Sagiv, he co-authored a number of influential papers that laid out the fundamental issues and approaches for relational databases.	/m/05pmjd	Jeffrey_Ullman	34	48	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Yehoshua Chaim ("Shuky") Sagiv is a computer scientist and professor of computer science at the Hebrew University of Jerusalem. He obtained his PhD at Princeton University in 1978. His advisor was Jeffrey Ullman.	His advisor was Jeffrey Ullman.	/m/05pmjd	Jeffrey_Ullman	16	30	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
According to Donald Knuth, the name "NP-complete" was popularized by Alfred Aho, John Hopcroft and Jeffrey Ullman in their celebrated textbook "The Design and Analysis of Computer Algorithms". He reports that they introduced the change in the galley proofs for the book (from "polynomially-complete"), in accordance with the results of a poll he had conducted of the Theoretical Computer Science community. Other suggestions made in the poll included "Herculean", "formidable", Steiglitz's "hard-boiled" in honor of Cook, and Shen Lin's acronym "PET", which stood for "probably exponential time", but depending on which way the P versus NP problem went, could stand for "provably exponential time" or "previously exponential time".	According to Donald Knuth, the name "NP-complete" was popularized by Alfred Aho, John Hopcroft and Jeffrey Ullman in their celebrated textbook "The Design and Analysis of Computer Algorithms".	/m/05pmjd	Jeffrey_Ullman	99	113	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Sponsors for the 2007 conference include Amazon.com, Argonne National Laboratory, Bank of America, E-Trade, Electronic Arts, Facebook, Google, Intel, LimeWire, Microsoft, Yahoo, VMware and others. Speakers included Phil and Kaja Foglio, Randall Munroe, Gary McGraw, Jon Stokes, Eric Traut, Jeffrey Ullman, and Steve Yegge.	Speakers included Phil and Kaja Foglio, Randall Munroe, Gary McGraw, Jon Stokes, Eric Traut, Jeffrey Ullman, and Steve Yegge.	/m/05pmjd	Jeffrey_Ullman	93	107	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Karlin went to Stanford for her undergraduate studies, receiving a bachelor's degree in 1981. She stayed at Stanford for graduate school, and earned Ph.D. in 1987 under the supervision of Jeffrey Ullman. She continued to work near Stanford, at the DEC Systems Research Center, for five years, before moving to the University of Washington in 1994. She was program chair of the IEEE Symposium on Foundations of Computer Science in 1997.	She stayed at Stanford for graduate school, and earned Ph.D. in 1987 under the supervision of Jeffrey Ullman.	/m/05pmjd	Jeffrey_Ullman	94	108	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Glorious Glasgow Haskell Compilation System, more commonly known as the Glasgow Haskell Compiler or GHC, is an open source native code compiler for the functional programming language Haskell. It provides a cross-platform environment for the writing and testing of Haskell code and it supports numerous extensions, libraries, and optimizations that streamline the process of generating and executing code. The lead developers are Simon Peyton Jones and Simon Marlow. It is distributed along with the Haskell Platform.	The lead developers are Simon Peyton Jones and Simon Marlow.	/m/09q82j	Simon_Peyton_Jones	24	42	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
The concept of monad programming appeared in the 1980s in the programming language Opal even though it was called "commands" and never formally specified. Eugenio Moggi first described the general use of monads to structure programs in 1991. Several people built on his work, including programming language researchers Philip Wadler and Simon Peyton Jones (both of whom were involved in the specification of Haskell). Early versions of Haskell used a problematic "lazy list" model for I/O, and Haskell 1.3 introduced monads as a more flexible way to combine I/O with lazy evaluation.	Several people built on his work, including programming language researchers Philip Wadler and Simon Peyton Jones (both of whom were involved in the specification of Haskell).	/m/09q82j	Simon_Peyton_Jones	95	113	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
In addition to a guard attached to a pattern, pattern guard can refer to the use of pattern matching in the context of a guard. In effect, a match of the pattern is taken to mean pass. This meaning was introduced in a proposal for Haskell by Simon Peyton Jones titled A new view of guards in April 1997 and was used in the implementation of the proposal. The feature provides the ability to use patterns in the guards of a pattern.	This meaning was introduced in a proposal for Haskell by Simon Peyton Jones titled A new view of guards in April 1997 and was used in the implementation of the proposal.	/m/09q82j	Simon_Peyton_Jones	57	75	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
C-- (pronounced "see minus minus") is a C-like programming language. Its creators, functional programming researchers Simon Peyton Jones and Norman Ramsey, designed it to be generated mainly by compilers for very high-level languages rather than written by human programmers. Unlike many other intermediate languages, its representation is plain ASCII text, not bytecode or another binary format.	Its creators, functional programming researchers Simon Peyton Jones and Norman Ramsey, designed it to be generated mainly by compilers for very high-level languages rather than written by human programmers.	/m/09q82j	Simon_Peyton_Jones	49	67	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
C-- is a target platform for the Glasgow Haskell Compiler, and an adaptation of C-- will eventually become the main code-generation path. Some of C--'s developers, including Simon Peyton Jones, Jo√£o Dias, and Norman Ramsey, also work or have worked on the Glasgow Haskell Compiler. The GHC codebase and development are based at Microsoft Research in Cambridge, though it is not a Microsoft project.	Some of C--'s developers, including Simon Peyton Jones, Jo√£o Dias, and Norman Ramsey, also work or have worked on the Glasgow Haskell Compiler.	/m/09q82j	Simon_Peyton_Jones	36	54	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
In 2005, Tim Harris, Simon Marlow, Simon Peyton Jones, and Maurice Herlihy described an STM system built on Concurrent Haskell that enables arbitrary atomic operations to be composed into larger atomic operations, a useful concept impossible with lock-based programming. To quote the authors:	In 2005, Tim Harris, Simon Marlow, Simon Peyton Jones, and Maurice Herlihy described an STM system built on Concurrent Haskell that enables arbitrary atomic operations to be composed into larger atomic operations, a useful concept impossible with lock-based programming.	/m/09q82j	Simon_Peyton_Jones	35	53	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
Wadler was editor of the Journal of Functional Programming from 1990‚Äì2004. He received the Most Influential POPL Paper Award in 2003 for the 1993 POPL Symposium paper Imperative Functional Programming, jointly with Simon Peyton Jones. In 2005, he became a Fellow of the Royal Society of Edinburgh. In 2007, he was inducted as a Fellow of the Association for Computing Machinery.	He received the Most Influential POPL Paper Award in 2003 for the 1993 POPL Symposium paper Imperative Functional Programming, jointly with Simon Peyton Jones.	/m/09q82j	Simon_Peyton_Jones	140	158	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
Jan-Willem Maessen, in 2002, and Simon Peyton Jones, in 2003, discussed problems associated with lazy evaluation while also acknowledging the theoretical motivation for it, in addition to purely practical considerations such as improved performance. They note that, in addition to adding some performance overhead, lazy evaluation makes it more difficult for programmers to reason about the performance of their code (particularly its space usage).	Jan-Willem Maessen, in 2002, and Simon Peyton Jones, in 2003, discussed problems associated with lazy evaluation while also acknowledging the theoretical motivation for it, in addition to purely practical considerations such as improved performance.	/m/09q82j	Simon_Peyton_Jones	33	51	/book/author,/computer/computer_scientist,/computer/programming_language_designer,/computer/software_developer,/education/academic,/people/person
SPITBOL (Speedy Implementation of SNOBOL) is a compiled implementation of the SNOBOL4 language. Originally targeted for the IBM System/360 and System/370 family of computers, it has now been ported to most major microprocessors including the SPARC. It was created by Robert Dewar and Ken Belcher, who were then at the Illinois Institute of Technology.	It was created by Robert Dewar and Ken Belcher, who were then at the Illinois Institute of Technology.	/m/0gtv9dk	Robert_Dewar	18	30	/people/person
He is the father of Robert Dewar.	He is the father of Robert Dewar.	/m/0gtv9dk	Robert_Dewar	20	32	/people/person
Mandy is a female first name, a diminutive of "Amanda". The name means 'She who must be loved', also more commonly interpreted as "fit to be loved", "worthy of love", or "loveable". It is derived from Latin and is usually used as a shortened form of the name "Amanda" (as in the case of Amanda "Mandy" Chessell, British computer scientist and Fellow of the Royal Society), although it is also given as an independent name in its own right (as in the case of Mandy Grunwald, American senior political strategist to the US Democratic Party). Its usage as a popular female first name can be traced back to at least the beginning of the 20th century, with the song "Mandy" by Irving Berlin in 1919, and the Joyce Lankester Brisley's children's books of Milly-Molly-Mandy in the 1920s.	It is derived from Latin and is usually used as a shortened form of the name "Amanda" (as in the case of Amanda "Mandy" Chessell, British computer scientist and Fellow of the Royal Society), although it is also given as an independent name in its own right (as in the case of Mandy Grunwald, American senior political strategist to the US Democratic Party).	/m/02pqk69	Amanda_Chessell	105	128	/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Michael A. Jackson originally developed JSP in the 1970s. He documented the system in his 1975 book Principles of Program Design. Jackson's aim was to make COBOL batch file processing programs easier to modify and maintain, but the method can be used to design programs for any programming language that has structured control constructs, languages such as C, Java and Perl. Despite its age, JSP is still in use and is supported by diagramming tools such as Microsoft's Visio and CASE tools such as Jackson Workbench	Michael A. Jackson originally developed JSP in the 1970s.	/m/01fjy6	Michael_A._Jackson	0	18	/computer/computer_scientist,/people/person
Jackson system development (JSD) is a linear software development methodology developed by Michael A. Jackson and John Cameron in the 1980s.	Jackson system development (JSD) is a linear software development methodology developed by Michael A. Jackson and John Cameron in the 1980s.	/m/01fjy6	Michael_A._Jackson	91	109	/computer/computer_scientist,/people/person
Peter G. Neumann has kept a contemporary list of software problems and disasters. The software crisis has been fading from view, because it is psychologically extremely difficult to remain in crisis mode for a protracted period (more than 20 years). Nevertheless, software - especially real-time embedded software - remains risky and is pervasive, and it is crucial not to give in to complacency. Over the last 10-15 years Michael A. Jackson has written extensively about the nature of software engineering, has identified the main source of its difficulties as lack of specialization, and has suggested that his problem frames provide the basis for a "normal practice" of software engineering, a prerequisite if software engineering is to become an engineering science. {Michael Jackson, "Engineering and Software Engineering" in S Nanz ed, The Future of Software Engineering, Springer Verlag 2010; Michael Jackson, Problem Frames: Analyzing and Structuring Software Development Problems; Addison-Wesley, 2001}.	Over the last 10-15 years Michael A. Jackson has written extensively about the nature of software engineering, has identified the main source of its difficulties as lack of specialization, and has suggested that his problem frames provide the basis for a "normal practice" of software engineering, a prerequisite if software engineering is to become an engineering science.	/m/01fjy6	Michael_A._Jackson	26	44	/computer/computer_scientist,/people/person
In recent years, a series of evening seminars have been held, mainly at the BCS London office. Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others. In 2010, a book of chapters based on some of these talks was published. Talks are held annually with Formal Methods Europe and the London Mathematical Society (at the LMS headquarters in central London). There is also an Annual Peter Landin Semantics Seminar held each December in memory of the computer scientist Peter Landin (1930‚Äì2009).	Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others.	/m/01fjy6	Michael_A._Jackson	457	472	/computer/computer_scientist,/people/person
In the early to mid-1970s, the various generic work steps of system development methodologies were replaced with work steps based on various structured analysis or structured design techniques. SDM, SDM2, SDM/70 and Spectrum more notably evolved into system development methodologies that were based on the works of Steven Ward, Tom Demarco, Larry Constantine, Ken Orr, Ed Yourdon, Michael A. Jackson and others as well as data modeling techniques developed by Thomas Bachmann and Peter Chen. SDM is a top-down model. Starting from the system as a whole, its description becomes more detailed as the design progresses. The method was marketed as a proprietary method that all company developers were required to use to ensure quality in customer projects. This method shows several similarities with the proprietary methods of CAP Gemini's most important competitors in 1990. A similar waterfall method that was later used against the company itself in court proceedings in 2002 was CMG:Commander.	SDM, SDM2, SDM/70 and Spectrum more notably evolved into system development methodologies that were based on the works of Steven Ward, Tom Demarco, Larry Constantine, Ken Orr, Ed Yourdon, Michael A. Jackson and others as well as data modeling techniques developed by Thomas Bachmann and Peter Chen.	/m/01fjy6	Michael_A._Jackson	188	206	/computer/computer_scientist,/people/person
Problem analysis or the problem frames approach is an approach to software requirements analysis. It was developed by British software consultant Michael A. Jackson in the 1990s.	It was developed by British software consultant Michael A. Jackson in the 1990s.	/m/01fjy6	Michael_A._Jackson	48	66	/computer/computer_scientist,/people/person
Jackson is the son of software engineering researcher Michael A. Jackson, developer of Jackson Structured Programming (JSP), Jackson System Development (JSD), and the Problem Frames Approach.	Jackson is the son of software engineering researcher Michael A. Jackson, developer of Jackson Structured Programming (JSP), Jackson System Development (JSD), and the Problem Frames Approach.	/m/01fjy6	Michael_A._Jackson	54	72	/computer/computer_scientist,/people/person
What Engineers Know and How they Know It: Analytical Studies from Aeronautical History (The Johns Hopkins University Press, 1990) (ISBN 0-8018-4588-2) is a historical reflection on engineering practice in US aeronautics from 1908 to 1953 written by an accomplished practitioner and instructor. This period represents the dawn of aviation which was fraught with uncertainties and numerous paths to many possible worlds. The book captures two main conclusions from this period. The first order conclusion of this book is about "what engineers know." Five case studies from the history of aeronautical engineering are used to argue engineering often demands its own scientific discoveries. Thus, engineering should be understood as a knowledge-generating activity that includes applied science but is not limited to applied science. The second order conclusion of this book pertains to "how engineers know" by using the same case studies to reveal patterns in the nature of all engineering. These patterns form an ‚Äúepistemology‚Äù of engineering that may point the way to an ‚Äúengineering method‚Äù as something distinct from scientific method. Walter Vincenti ends the work with a general "variation-selection model" for understanding the direction of technological innovation in human history. The book is filled with numerous additional observations and stories told by a practitioner and instructor. This may be why Dr. Michael A. Jackson, author of Structured Design and Problem Frames, once concluded a keynote address to engineers with the statement, "Read Vincenti's book. Read it carefully. Read it one hundred times."	This may be why Dr. Michael A. Jackson, author of Structured Design and Problem Frames, once concluded a keynote address to engineers with the statement, "Read Vincenti's book.	/m/01fjy6	Michael_A._Jackson	16	38	/computer/computer_scientist,/people/person
The RESG's patron is Professor Michael A. Jackson, the creator of JSP and JSD, and the inventor of the Problem Frames approach to requirements.	The RESG's patron is Professor Michael A. Jackson, the creator of JSP and JSD, and the inventor of the Problem Frames approach to requirements.	/m/01fjy6	Michael_A._Jackson	31	49	/computer/computer_scientist,/people/person
The current president, Satish K. Tripathi, has continued his vocal support of UB 2020 and has been actively engaging in campus-wide discussion on the proposed tuition increases introduced by the bill.	The current president, Satish K. Tripathi, has continued his vocal support of UB 2020 and has been actively engaging in campus-wide discussion on the proposed tuition increases introduced by the bill.	/m/0gtwtwx	Satish_K._Tripathi	23	41	/business/board_member,/government/politician,/people/person
Buffalo is a public university and is one of four university centers of the 64 campuses in the State University of New York (SUNY) which enrolled 467,845 students and employed 33,455 faculty in 2011. SUNY is governed by a 17 member Board of Trustees, 15 of whom are appointed by the Governor of New York and the remaining two members being elected from the Student Assembly and University Faculty Senate. Carl McCall is the Chairman of the SUNY Board of Trustees and Nancy L. Zimpher is the Chancellor of the SUNY system. Satish K. Tripathi was appointed by the SUNY Board of Trustees as the 15th president of the University at Buffalo in April 2011 after previously serving a six-year tenure as the UB provost and executive vice president for academic affairs. He receives compensation of $385,000, $115,000, and $150,000 annually from each of the university, SUNY Research Foundation, and the UB Foundation respectively. The University at Buffalo Foundation (UB Foundation) was chartered in 1962 as an independent non-profit corporation and is controlled by a privately appointed board of trustees. It serves as a vehicle to raise private funds for the university, develop real estate, and manage endowment investments on behalf of the university. The foundation managed a $685.2 million endowment for FY2011.	Satish K. Tripathi was appointed by the SUNY Board of Trustees as the 15th president of the University at Buffalo in April 2011 after previously serving a six-year tenure as the UB provost and executive vice president for academic affairs.	/m/0gtwtwx	Satish_K._Tripathi	0	18	/business/board_member,/government/politician,/people/person
In general, for any c > 0, where d is the number of dimensions in the Euclidean space, there is a polynomial-time algorithm that finds a tour of length at most (1 + 1/c) times the optimal for geometric instances of TSP in  time; this is called a polynomial-time approximation scheme (PTAS). Sanjeev Arora and Joseph S. B. Mitchell were awarded the G√∂del Prize in 2010 for their concurrent discovery of a PTAS for the Euclidean TSP.	Sanjeev Arora and Joseph S. B. Mitchell were awarded the G√∂del Prize in 2010 for their concurrent discovery of a PTAS for the Euclidean TSP.	/m/0cm9_cw	Joseph_S._B._Mitchell	18	39	/education/academic,/people/person
His Ph.D. thesis on probabilistically checkable proofs received the ACM Doctoral Dissertation Award in 1995. He was awarded the G√∂del Prize for his work on the PCP theorem in 2001 and again in 2010 for the discovery (concurrently with Joseph S. B. Mitchell) of a polynomial time approximation scheme for the euclidean travelling salesman problem. In 2008 he was inducted as a Fellow of the Association for Computing Machinery. In 2011 he was awarded the ACM Infosys Foundation Award, given to mid-career researchers in Computer Science. Arora has been awarded the Fulkerson Prize for 2012 for his work on improving the approximation ratio for graph separators and related problems (jointly with Satish Rao and Umesh Vazirani).	He was awarded the G√∂del Prize for his work on the PCP theorem in 2001 and again in 2010 for the discovery (concurrently with Joseph S. B. Mitchell) of a polynomial time approximation scheme for the euclidean travelling salesman problem.	/m/0cm9_cw	Joseph_S._B._Mitchell	126	147	/education/academic,/people/person
In "The Information Architecture of Cities" Salingaros also defined the useful notion of "fractal loading", later picked up by Richard Veryard, Phil Jones, and others in Computer Science.	In "The Information Architecture of Cities" Salingaros also defined the useful notion of "fractal loading", later picked up by Richard Veryard, Phil Jones, and others in Computer Science.	/m/057sccq	Richard_Veryard	127	142	/people/person
Some of his students were Tim Hunt, John Paul Morrison, and Richard Veryard.	Some of his students were Tim Hunt, John Paul Morrison, and Richard Veryard.	/m/057sccq	Richard_Veryard	60	75	/people/person
MAD (Michigan Algorithm Decoder) is a programming language and compiler for the IBM 704 and later the IBM 709, IBM 7090, IBM 7040, UNIVAC 1107, UNIVAC 1108, Philco 210-211, and eventually the IBM S/370 mainframe computers. Developed in 1959 at the University of Michigan by Bernard Galler, Bruce Arden and Robert M. Graham, MAD is a variant of the International Algebraic Language (IAL). It was widely used to teach programming at colleges and universities during the 1960s and played a minor role in the development of CTSS, Multics, and the Michigan Terminal System computer operating systems.	Developed in 1959 at the University of Michigan by Bernard Galler, Bruce Arden and Robert M. Graham, MAD is a variant of the International Algebraic Language (IAL).	/m/03vtxr	Robert_M._Graham	83	99	/computer/computer_scientist,/people/person
Scheduler Activations was proposed by Anderson, Bershad, Lazowska, and Levy in Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism in 1991. It was implemented in the NetBSD kernel by Nathan Williams but has since been abandoned in favor of 1:1 threading. FreeBSD had a similar threading implementation called Kernel Scheduled Entities which is also being retired in favor of 1:1 threading. Scheduler activations were also implemented as a patch for the Linux kernel by Vincent Danjean: Linux Activations, the user-level part being done in the Marcel thread library.	Scheduler Activations was proposed by Anderson, Bershad, Lazowska, and Levy in Scheduler Activations: Effective Kernel Support for the User-Level Management of Parallelism in 1991.	/m/03d8h7h	Hank_Levy_(computer_scientist)	71	75	/book/author,/computer/computer_scientist,/organization/organization_founder,/people/person
Lazowska has mentored a number of students, including Hank Levy (University of Washington), Yi-Bing Lin (National Chiao Tung University), Ed Felten (Princeton University), and Christophe Bisciglia (successively Google, Cloudera, and WibiData).	Lazowska has mentored a number of students, including Hank Levy (University of Washington), Yi-Bing Lin (National Chiao Tung University), Ed Felten (Princeton University), and Christophe Bisciglia (successively Google, Cloudera, and WibiData).	/m/03d8h7h	Hank_Levy_(computer_scientist)	54	63	/book/author,/computer/computer_scientist,/organization/organization_founder,/people/person
Emerald is a distributed, object-oriented programming language developed in the 1980s by Andrew P. Black, Norman C. Hutchinson, Eric Jul, and Henry M. Levy, in the Department of Computer Science at the University of Washington.	Emerald is a distributed, object-oriented programming language developed in the 1980s by Andrew P. Black, Norman C. Hutchinson, Eric Jul, and Henry M. Levy, in the Department of Computer Science at the University of Washington.	/m/03d8h7h	Hank_Levy_(computer_scientist)	142	155	/book/author,/computer/computer_scientist,/organization/organization_founder,/people/person
The President of the ACM for 2012‚Äì2014 is Vint Cerf, an American computer scientist, who is recognized as one of "the fathers of the Internet". He is the successor of Alain Chesnais (2010‚Äì2012), a French citizen living in Toronto where he runs his company named Visual Transitions and Wendy Hall of the University of Southampton.	The President of the ACM for 2012‚Äì2014 is Vint Cerf, an American computer scientist, who is recognized as one of "the fathers of the Internet".	/m/07z23	Vint_Cerf	42	51	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The National Science Foundation took over operations of the ARPANET and Internet from the Department of Defense, and initiated NSFNet, a new backbone for the network. A part of the NSFNet AUP forbade commercial traffic. In 1988, Vint Cerf arranged for an interconnection of MCI Mail with NSFNET on an experimental basis. The following year Compuserve email interconnected with NSFNET. Within a few years the commercial traffic restriction was removed from NSFNETs AUP, and NSFNET was privatised.	In 1988, Vint Cerf arranged for an interconnection of MCI Mail with NSFNET on an experimental basis.	/m/07z23	Vint_Cerf	9	18	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
This network technology is supposed to ultimately enable missions that involve multiple spacecraft where reliable inter-vessel communication might take precedence over vessel-to-earth downlinks. According to a February 2011 statement by Google's Vint Cerf, the so-called "Bundle protocols" have been uploaded to NASA's EPOXI mission spacecraft (which is in orbit around the Sun) and communication with Earth has been tested at a distance of approximately 80 light seconds.	According to a February 2011 statement by Google's Vint Cerf, the so-called "Bundle protocols" have been uploaded to NASA's EPOXI mission spacecraft (which is in orbit around the Sun) and communication with Earth has been tested at a distance of approximately 80 light seconds.	/m/07z23	Vint_Cerf	51	60	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
Historically, IP was the connectionless datagram service in the original Transmission Control Program introduced by Vint Cerf and Bob Kahn in 1974; the other being the connection-oriented Transmission Control Protocol (TCP). The Internet protocol suite is therefore often referred to as TCP/IP.	Historically, IP was the connectionless datagram service in the original Transmission Control Program introduced by Vint Cerf and Bob Kahn in 1974; the other being the connection-oriented Transmission Control Protocol (TCP).	/m/07z23	Vint_Cerf	116	125	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In May 1974, the Institute of Electrical and Electronic Engineers (IEEE) published a paper entitled "A Protocol for Packet Network Intercommunication." The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet switching among network nodes. A central control component of this model was the "Transmission Control Program" that incorporated both connection-oriented links and datagram services between hosts. The monolithic Transmission Control Program was later divided into a modular architecture consisting of the Transmission Control Protocol at the transport layer and the Internet Protocol at the network layer. The model became known as Internet protocol suite and informally as TCP/IP.	" The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet switching among network nodes.	/m/07z23	Vint_Cerf	23	32	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The Internet Society's Postel Award is named in his honor, as is the Postel Center at Information Sciences Institute. His obituary was written by Vint Cerf and published as RFC 2468 in remembrance of Postel and his work. In 2012, Postel was inducted into the Internet Hall of Fame by the Internet Society.	His obituary was written by Vint Cerf and published as RFC 2468 in remembrance of Postel and his work.	/m/07z23	Vint_Cerf	28	37	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In May 1974 the Institute of Electrical and Electronic Engineers (IEEE) published a paper entitled "A Protocol for Packet Network Intercommunication." The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet-switching among the nodes. A central control component of this model was the Transmission Control Program that incorporated both connection-oriented links and datagram services between hosts. The monolithic Transmission Control Program was later divided into a modular architecture consisting of the Transmission Control Protocol at the connection-oriented layer and the Internet Protocol at the internetworking (datagram) layer. The model became known informally as TCP/IP, although formally it was henceforth called the Internet Protocol Suite.	" The paper's authors, Vint Cerf and Bob Kahn, described an internetworking protocol for sharing resources using packet-switching among the nodes.	/m/07z23	Vint_Cerf	23	32	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
Computer scientist Vint Cerf ('70, '72) is Vice President and Chief Internet Evangelist at Google and the person most widely considered the "father of the Internet." Henry Samueli ('75) is co-founder of Broadcom Corporation and owner of the Anaheim Ducks.	Computer scientist Vint Cerf ('70, '72) is Vice President and Chief Internet Evangelist at Google and the person most widely considered the "father of the Internet.	/m/07z23	Vint_Cerf	19	28	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In 1973 Vint Cerf and Bob Kahn wrote the specifications for Transmission Control Protocol (TCP), an internetworking protocol for sharing resources using packet-switching among the nodes.	In 1973 Vint Cerf and Bob Kahn wrote the specifications for Transmission Control Protocol (TCP), an internetworking protocol for sharing resources using packet-switching among the nodes.	/m/07z23	Vint_Cerf	8	17	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
On March 26, 1972, Vint Cerf and Jon Postel at UCLA called for establishing a socket number catalog in RFC 322. Network administrators were asked to submit a note or place a phone call, "describing the function and socket numbers of network service programs at each HOST". This catalog was subsequently published as RFC 433 in December 1972. In it Postel first proposed a registry of assignments of port numbers to network services, calling himself the czar of socket numbers.	On March 26, 1972, Vint Cerf and Jon Postel at UCLA called for establishing a socket number catalog in RFC 322.	/m/07z23	Vint_Cerf	19	28	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In the case of malapropisms, it is a rhetorical fallacy (called argument ad hominem) to conclude that the entire argument of whoever made the utterance is incorrect. Yet it has become common in partisan argument in the United States. For instance: former U.S. Vice President Al Gore, during an interview with Wolf Blitzer on CNN (March 9, 1999) stated, "During my service in the United States Congress, I took the initiative in creating the Internet. I took the initiative in moving forward a whole range of initiatives that have proven to be important to our country's economic growth and environmental protection, improvements in our educational system." This has frequently been distorted by opponents to say that Gore claimed, "I invented the Internet." Partisans have so often used this distorted quotation to discredit him that Internet pioneer Vint Cerf (and others who participated in actually inventing the Internet) have made a point of noting Gore's support and the error of the discreditors. See .	" Partisans have so often used this distorted quotation to discredit him that Internet pioneer Vint Cerf (and others who participated in actually inventing the Internet) have made a point of noting Gore's support and the error of the discreditors.	/m/07z23	Vint_Cerf	95	104	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In the early 1980s, MCI developed a data network using the CCITT X.25 packet switching protocol and an electronic mail service called MCI Mail. There were other commercially available electronic mail systems, such as IBM's Professional Office System (PROFs), but they didn't interface with each other until the development of the CCITT X.400 standard in 1984. During this time, Vint Cerf (one of the developers of the TCP/IP protocol) was head of MCI Digital Information Services and led the effort to interconnect MCI Mail with the Internet; the first commercial e-mail service to do so. Celtic Engineering Inc. Mc Kinney, Texas was also instrumental in the start up of this service.	During this time, Vint Cerf (one of the developers of the TCP/IP protocol) was head of MCI Digital Information Services and led the effort to interconnect MCI Mail with the Internet; the first commercial e-mail service to do so.	/m/07z23	Vint_Cerf	18	27	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The Internet Society was formed officially in 1992, with one of its purposes being to provide a corporate structure to support the Internet standards development process. Vint Cerf, Bob Kahn, Lyman Chapin released a document, Announcing ISOC, which explained the rationale for establishing the Internet Society. This document also defines the original charter of the organization as follows:	Vint Cerf, Bob Kahn, Lyman Chapin released a document, Announcing ISOC, which explained the rationale for establishing the Internet Society.	/m/07z23	Vint_Cerf	0	9	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
Directed by Palfrey and Zittrain, StopBadware receives high-level guidance from its advisory board: Vint Cerf of Google, Esther Dyson, George He of Lenovo, Greg Papadopoulos (formerly CTO of Sun Microsystems), and Ari Schwartz of the Center for Democracy and Technology. The working group, which has included Ben Adida, Scott Bradner, Beau Brendler, Jerry Gregoire, Eric L. Howes, and Nart Villeneuve at various times, frames the project's research agenda and methodology and is the body which helps to inform the public about StopBadware's work. StopBadware has been supported by AOL, Google, eBay/PayPal, Lenovo, Trend Micro, and VeriSign and its use has been advised by Consumer Reports WebWatch.	Directed by Palfrey and Zittrain, StopBadware receives high-level guidance from its advisory board: Vint Cerf of Google, Esther Dyson, George He of Lenovo, Greg Papadopoulos (formerly CTO of Sun Microsystems), and Ari Schwartz of the Center for Democracy and Technology.	/m/07z23	Vint_Cerf	100	109	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
vCard - Victorian Internet - Vint Cerf - Virtual community - Voice over IP	vCard - Victorian Internet - Vint Cerf - Virtual community - Voice over IP	/m/07z23	Vint_Cerf	29	38	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
Dyson is an active member of a number of non-profit and advisory organizations. From 1998 to 2000, she was the founding chairman of ICANN, the Internet Corporation for Assigned Names and Numbers. As of 2004, she sat on its "reform" committee, dedicated to defining a role for individuals in ICANN's decision-making and governance structures. She opposed ICANN's 2012 expansion of generic top-level domains (gTLDs). She has followed closely the post-Soviet transition of Eastern Europe, from 2002 to 2012 was a member of the Bulgarian President's IT Advisory Council, along with Vint Cerf, George Sadowsky, and Veni Markovski, among others. She has served as a trustee of, and helped fund, emerging organizations such as Glasses for Humanity, Bridges.org, the National Endowment for Democracy, and the Eurasia Foundation. She is a member of the Board of Directors of The After-School Corporation, a nonprofit organization dedicated to expanding educational opportunities for all students. She is also a member of the boards of the Sunlight Foundation, StopBadware, The Long Now Foundation, and a trustee of the Santa Fe Institute. She also is on the Senior Advisory Board for Science & Diplomacy.	She has followed closely the post-Soviet transition of Eastern Europe, from 2002 to 2012 was a member of the Bulgarian President's IT Advisory Council, along with Vint Cerf, George Sadowsky, and Veni Markovski, among others.	/m/07z23	Vint_Cerf	163	172	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
In 1986, the first internet connection in Italy was experimented in Pisa, the third in Europe after Norway and England. Already in the late 1970s, Pisan researchers, firstly with Luciano Lenzini, were in contact with U.S. researchers who had written the history of the Internet. Among them were Vint Cerf and Bob Kahn, who were the first to invent TCP and IP, the two protocols at the heart of the internet, and are hence considered the "Fathers of the Internet".	Among them were Vint Cerf and Bob Kahn, who were the first to invent TCP and IP, the two protocols at the heart of the internet, and are hence considered the "Fathers of the Internet".	/m/07z23	Vint_Cerf	16	25	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The International Academy of Digital Arts and Sciences, which selects the winners of The Webby Awards, was established in 1998 by co-founders Tiffany Shlain, Spencer Ante and Maya Draisin. Members of the Academy include David Bowie, Martha Stewart, Harvey Weinstein, Arianna Huffington, Matt Groening, Biz Stone, Internet inventor Vint Cerf, Virgin Group Chairman Richard Branson, and R/GA Chairman and CEO Bob Greenberg.	Members of the Academy include David Bowie, Martha Stewart, Harvey Weinstein, Arianna Huffington, Matt Groening, Biz Stone, Internet inventor Vint Cerf, Virgin Group Chairman Richard Branson, and R/GA Chairman and CEO Bob Greenberg.	/m/07z23	Vint_Cerf	142	151	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The Webbys are famous for limiting recipients to five-word speeches, which are often humorous, although some exceed the limit. In 2005 when accepting his Lifetime Achievement Award, former Vice President Al Gore's speech was "Please don't recount this vote." He was introduced by Vint Cerf who used the same format to state, "We all invented the Internet." In 2008, Stephen Colbert shouted ‚ÄúMe. Me. Me. Me. Me‚Äù when accepting his award for Webby Person of the Year. Accepting the award for Best Political Blog in 2008, Arianna Huffington‚Äôs speech was ‚ÄúPresident Obama ... Sounds good, right?"	" He was introduced by Vint Cerf who used the same format to state, "We all invented the Internet.	/m/07z23	Vint_Cerf	23	32	/award/award_winner,/business/board_member,/computer/computer_scientist,/education/academic,/film/person_or_entity_appearing_in_film,/influence/influence_node,/law/inventor,/people/person,/user/narphorium/people/nndb_person
The "English School" derived from work by Cliff Jones on the aspects of VDM not specifically related to language definition and compiler design (Jones 1980, 1990). It stresses modelling persistent state through the use of data types constructed from a rich collection of base types. Functionality is typically described through operations which may have side-effects on the state and which are mostly specified implicitly using a precondition and postcondition. The "Danish School" (Bj√∏rner et al. 1982) has tended to stress a constructive approach with explicit operational specification used to a greater extent. Work in the Danish school led to the first European validated Ada compiler.	The "Danish School" (Bj√∏rner et al.	/m/07nqtj	Dines_Bj%C3%B8rner	21	28	/people/person
Clifford "Cliff" B. Jones (born 1 June 1944) is a British computer scientist, specializing in research into formal methods. He undertook a late DPhil at the Oxford University Computing Laboratory under Tony Hoare, awarded in 1981. He also worked with Dines Bj√∏rner and others on the Vienna Development Method (VDM) at IBM in Vienna.	He also worked with Dines Bj√∏rner and others on the Vienna Development Method (VDM) at IBM in Vienna.	/m/07nqtj	Dines_Bj%C3%B8rner	20	33	/people/person
RAISE (Rigorous Approach to Industrial Software Engineering) was developed as part of the European ESPRIT II LaCoS project in the 1990s, led by Dines Bj√∏rner. It consists of a set of tools based around a specification language (RSL) for software development. It is especially espoused by UNU-IIST in Macau, who run training courses on site and around the world, especially in developing countries.	RAISE (Rigorous Approach to Industrial Software Engineering) was developed as part of the European ESPRIT II LaCoS project in the 1990s, led by Dines Bj√∏rner.	/m/07nqtj	Dines_Bj%C3%B8rner	144	157	/people/person
During the periods 1990‚Äì1992 and 1995‚Äì1996, Zhou Chaochen was visiting professor at the Department of Computer Science, Technical University of Denmark, Lyngby, on the invitation of Professor Dines Bj√∏rner. He was Principal Research Fellow (1992‚Äì1997) and later Director of UNU-IIST in Macau (1997‚Äì2002), until his retirement, when he returned to Beijing.	During the periods 1990‚Äì1992 and 1995‚Äì1996, Zhou Chaochen was visiting professor at the Department of Computer Science, Technical University of Denmark, Lyngby, on the invitation of Professor Dines Bj√∏rner.	/m/07nqtj	Dines_Bj%C3%B8rner	182	205	/people/person
In recent years, a series of evening seminars have been held, mainly at the BCS London office. Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others. In 2010, a book of chapters based on some of these talks was published. Talks are held annually with Formal Methods Europe and the London Mathematical Society (at the LMS headquarters in central London). There is also an Annual Peter Landin Semantics Seminar held each December in memory of the computer scientist Peter Landin (1930‚Äì2009).	Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others.	/m/07nqtj	Dines_Bj%C3%B8rner	166	179	/people/person
The Formal Techniques Industry Association (ForTIA) aims to support the industrial use of formal methods under the umbrella organization of Formal Methods Europe. It was founded in 2003 through the initial efforts of Dines Bj√∏rner and is currently chaired by Volkmar Lotz. Its scope is international and membership is by company. It organizes meetings, especially in conjunction with conferences, for instance, industry days at the FM conferences organized by FME.	It was founded in 2003 through the initial efforts of Dines Bj√∏rner and is currently chaired by Volkmar Lotz.	/m/07nqtj	Dines_Bj%C3%B8rner	54	67	/people/person
One of the first occurrences of Meta-IV in print appears to be "Programming in the Meta-language: A Tutorial". Dines Bj√∏rner used it in the very beginning of his tutorial as a footnote	Dines Bj√∏rner used it in the very beginning of his tutorial as a footnote	/m/07nqtj	Dines_Bj%C3%B8rner	0	13	/people/person
founded by Dines Bj√∏rner
To mention:	founded by Dines Bj√∏rner
To mention:	/m/07nqtj	Dines_Bj%C3%B8rner	11	24	/people/person
Adi Shamir (Hebrew: ◊¢◊ì◊ô ◊©◊û◊ô◊®‚Äé; born July 6, 1952) is an Israeli cryptographer. He is a co-inventor of the RSA algorithm (along with Ron Rivest and Len Adleman), a co-inventor of the Feige‚ÄìFiat‚ÄìShamir identification scheme (along with Uriel Feige and Amos Fiat), one of the inventors of differential cryptanalysis and has made numerous contributions to the fields of cryptography and computer science.	He is a co-inventor of the RSA algorithm (along with Ron Rivest and Len Adleman), a co-inventor of the Feige‚ÄìFiat‚ÄìShamir identification scheme (along with Uriel Feige and Amos Fiat), one of the inventors of differential cryptanalysis and has made numerous contributions to the fields of cryptography and computer science.	/m/080pc9x	Uriel_Feige	155	166	/award/award_winner,/education/academic,/people/person
Feige (2004) describes a polynomial time algorithm that finds a clique of size Œ©((log¬†n/log¬†log¬†n)2) in any graph that has clique number Œ©(n/logkn) for any constant k. By combining this algorithm to find cliques in graphs with clique numbers between n/log¬†n and n/log3n with a different algorithm of Boppana & Halld√≥rsson (1992) to find cliques in graphs with higher clique numbers, and choosing a two-vertex clique if both algorithms fail to find anything, Feige provides an approximation algorithm that finds a clique with a number of vertices within a factor of O(n(log¬†log¬†n)2/log3n) of the maximum. Although the approximation ratio of this algorithm is weak, it is the best known to date, and the results on hardness of approximation described below suggest that there can be no approximation algorithm with an approximation ratio significantly less than linear.	Feige (2004) describes a polynomial time algorithm that finds a clique of size Œ©((log¬†n/log¬†log¬†n)2) in any graph that has clique number Œ©(n/logkn) for any constant k. By combining this algorithm to find cliques in graphs with clique numbers between n/log¬†n and n/log3n with a different algorithm of Boppana & Halld√≥rsson (1992) to find cliques in graphs with higher clique numbers, and choosing a two-vertex clique if both algorithms fail to find anything, Feige provides an approximation algorithm that finds a clique with a number of vertices within a factor of O(n(log¬†log¬†n)2/log3n) of the maximum.	/m/080pc9x	Uriel_Feige	0	5	/award/award_winner,/education/academic,/people/person
The 2001 G√∂del Prize was awarded to Sanjeev Arora, Uriel Feige, Shafi Goldwasser, Carsten Lund, L√°szl√≥ Lov√°sz, Rajeev Motwani, Shmuel Safra, Madhu Sudan, and Mario Szegedy for work on the PCP theorem and its connection to hardness of approximation.	The 2001 G√∂del Prize was awarded to Sanjeev Arora, Uriel Feige, Shafi Goldwasser, Carsten Lund, L√°szl√≥ Lov√°sz, Rajeev Motwani, Shmuel Safra, Madhu Sudan, and Mario Szegedy for work on the PCP theorem and its connection to hardness of approximation.	/m/080pc9x	Uriel_Feige	51	62	/award/award_winner,/education/academic,/people/person
In cryptography, the Feige‚ÄìFiat‚ÄìShamir identification scheme is a type of parallel zero-knowledge proof developed by Uriel Feige, Amos Fiat, and Adi Shamir in 1988. Like all zero-knowledge proofs, the Feige-Fiat-Shamir Identification Scheme allows one party, Peggy, to prove to another party, Victor, that she possesses secret information without revealing to Victor what that secret information is. The Feige-Fiat-Shamir Identification Scheme, however, uses modular arithmetic and a parallel verification process that limits the number of communications between Peggy and Victor.	In cryptography, the Feige‚ÄìFiat‚ÄìShamir identification scheme is a type of parallel zero-knowledge proof developed by Uriel Feige, Amos Fiat, and Adi Shamir in 1988.	/m/080pc9x	Uriel_Feige	117	128	/award/award_winner,/education/academic,/people/person
Many of Fiat's most highly cited publications concern cryptography, including his work with Adi Shamir on digital signatures (leading to the Fiat‚ÄìShamir heuristic for turning interactive identification protocols into signature schemes). and his work with David Chaum and Moni Naor on electronic money, used as the basis for the ecash system. With Shamir and Uriel Feige in 1988, Fiat invented the Feige‚ÄìFiat‚ÄìShamir identification scheme, a method for using public-key cryptography to provide challenge-response authentication.	With Shamir and Uriel Feige in 1988, Fiat invented the Feige‚ÄìFiat‚ÄìShamir identification scheme, a method for using public-key cryptography to provide challenge-response authentication.	/m/080pc9x	Uriel_Feige	16	27	/award/award_winner,/education/academic,/people/person
In queueing theory, a discipline within the mathematical theory of probability, Buzen's algorithm (or convolution algorithm) is an algorithm for calculating the normalization constant G(N) in the Gordon‚ÄìNewell theorem. This method was first proposed by Jeffrey P. Buzen in 1973. Computing G(N) is required to compute the stationary probability distribution of a closed queueing network.	This method was first proposed by Jeffrey P. Buzen in 1973.	/m/0clxy0	Jeffrey_P._Buzen	34	50	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He received his A.B. (1970), M.S. (1971) and Ph.D. (1974) in applied mathematics from Harvard University. He was at the same time (since 1971) employed at the equipment manufacturer Bolt, Beranek and Newman in Cambridge, MA, where he programmed the Interface Message Processor, work that in part led to his dissertation Adaptive routing for distributed computer networks advised by Jeffrey P. Buzen (1974), in which McQuillan developed ways to reroute messages around faulty and congested areas in the Internet based on delay feedback. These mechanisms were used in the first link-state routing protocols (1978).	He was at the same time (since 1971) employed at the equipment manufacturer Bolt, Beranek and Newman in Cambridge, MA, where he programmed the Interface Message Processor, work that in part led to his dissertation Adaptive routing for distributed computer networks advised by Jeffrey P. Buzen (1974), in which McQuillan developed ways to reroute messages around faulty and congested areas in the Internet based on delay feedback.	/m/0clxy0	Jeffrey_P._Buzen	276	292	/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
One-in-three 3SAT is listed as NP-complete problem LO4 in the standard reference, Computers and Intractability: A Guide to the Theory of NP-Completeness by Michael R. Garey and David S. Johnson. It was proved to be NP-complete by Thomas J. Schaefer as a special case of Schaefer's dichotomy theorem, which asserts that any problem generalizing Boolean satisfiability in a certain way is either in the class P or is NP-complete.	One-in-three 3SAT is listed as NP-complete problem LO4 in the standard reference, Computers and Intractability: A Guide to the Theory of NP-Completeness by Michael R. Garey and David S. Johnson.	/m/02rxcr	David_S._Johnson	177	193	/award/award_winner,/book/author,/people/person
Michael Randolph Garey is a computer science researcher, and co-author (with David S. Johnson) of Computers and Intractability: A Guide to the Theory of NP-completeness. He earned his PhD in computer science in 1970 from the University of Wisconsin‚ÄìMadison. In 1995 he was inducted as a Fellow of the Association for Computing Machinery.	Michael Randolph Garey is a computer science researcher, and co-author (with David S. Johnson) of Computers and Intractability: A Guide to the Theory of NP-completeness.	/m/02rxcr	David_S._Johnson	77	93	/award/award_winner,/book/author,/people/person
In computer science, more specifically computational complexity theory, Computers and Intractability: A Guide to the Theory of NP-Completeness is an influential textbook by Michael Garey and David S. Johnson. It was the first book on the theory of NP-completeness and computational intractability. The book features an appendix providing a thorough compendium of NP-complete problems (which was updated in later printings of the book). The book is now outdated in some respects as it does not cover more recent development such as the PCP theorem. It is nevertheless still in print and is regarded as a classic: in a 2006 study, the CiteSeer search engine listed the book as the most cited reference in computer science literature.	In computer science, more specifically computational complexity theory, Computers and Intractability: A Guide to the Theory of NP-Completeness is an influential textbook by Michael Garey and David S. Johnson.	/m/02rxcr	David_S._Johnson	191	207	/award/award_winner,/book/author,/people/person
In general, determining the crossing number of a graph is hard; Garey and Johnson showed in 1983 that it is an NP-hard problem. In fact the problem remains NP-hard even when restricted to cubic graphs. More specifically, determining the rectilinear crossing number is complete for the existential theory of the reals.	In general, determining the crossing number of a graph is hard; Garey and Johnson showed in 1983 that it is an NP-hard problem.	/m/02rxcr	David_S._Johnson	74	81	/award/award_winner,/book/author,/people/person
Well-known researchers in empirical algorithmics include Marco Chiarandini, Catherine McGeoch, Carla Gomes, Holger H. Hoos, David S. Johnson, Kevin Leyton-Brown, Ruben Ruiz, Bart Selman, Thomas St√ºtzle and Roberto Battiti.	Well-known researchers in empirical algorithmics include Marco Chiarandini, Catherine McGeoch, Carla Gomes, Holger H. Hoos, David S. Johnson, Kevin Leyton-Brown, Ruben Ruiz, Bart Selman, Thomas St√ºtzle and Roberto Battiti.	/m/02rxcr	David_S._Johnson	124	140	/award/award_winner,/book/author,/people/person
In the celebrated Cook-Levin theorem (independently proved by Leonid Levin), Cook proved that the Boolean satisfiability problem is NP-complete (a simpler, but still highly technical proof of this is available). In 1972, Richard Karp proved that several other problems were also NP-complete (see Karp's 21 NP-complete problems); thus there is a class of NP-complete problems (besides the Boolean satisfiability problem). Since Cook's original results, thousands of other problems have been shown to be NP-complete by reductions from other problems previously shown to be NP-complete; many of these problems are collected in Garey and Johnson's 1979 book Computers and Intractability: A Guide to the Theory of NP-Completeness. For more details refer to Introduction to the Design and Analysis of Algorithms by Anany Levintin.	Since Cook's original results, thousands of other problems have been shown to be NP-complete by reductions from other problems previously shown to be NP-complete; many of these problems are collected in Garey and Johnson's 1979 book Computers and Intractability: A Guide to the Theory of NP-Completeness.	/m/02rxcr	David_S._Johnson	213	222	/award/award_winner,/book/author,/people/person
After receiving his PhD, Fischer was an assistant professor of computer science at Carnegie-Mellon University in 1968‚Äì1969, an assistant professor of mathematics at Massachusetts Institute of Technology (MIT) in 1969‚Äì1973, and an associate professor of electrical engineering at MIT in 1973‚Äì1975. At MIT he supervised doctoral students who became prominent computer scientists, including David S. Johnson, Frances Yao, and Michael Hammer.	At MIT he supervised doctoral students who became prominent computer scientists, including David S. Johnson, Frances Yao, and Michael Hammer.	/m/02rxcr	David_S._Johnson	91	107	/award/award_winner,/book/author,/people/person
In recent years, a series of evening seminars have been held, mainly at the BCS London office. Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others. In 2010, a book of chapters based on some of these talks was published. Talks are held annually with Formal Methods Europe and the London Mathematical Society (at the LMS headquarters in central London). There is also an Annual Peter Landin Semantics Seminar held each December in memory of the computer scientist Peter Landin (1930‚Äì2009).	Speakers have included leading computer scientists, mainly from the UK but some from abroad, including Samson Abramsky FRS, Jean-Raymond Abrial (France/Switzerland), Dines Bj√∏rner (Denmark), Robin Bloomfield, Richard Bornat, Egon B√∂rger (Italy), Jan Broenink (Netherlands), Michael Butler, Muffy Caulder, Jack Copeland (New Zealand), Mike Gordon FRS, Anthony Hall, Mark Harman, Martin Henson, Jane Hillston, Mike Hinchey, Sir Tony Hoare FRS, Mike Holcombe, Michael Jackson, Cliff Jones, Marta Kwiatkowska, Tom Maibaum, Ursula Martin, Peter Mosses, Ben Moszkowski, Peter O'Hearn, Steve Reeves (New Zealand), John Reynolds (USA), Peter Ryan, Steve Schneider, John Tucker, Phil Wadler, among others.	/m/0dmg2s	Tom_Maibaum	506	517	/computer/computer_scientist,/people/person
The treap was first described by Cecilia R. Aragon and Raimund Seidel in 1989; its name is a portmanteau of tree and heap. It is a Cartesian tree in which each key is given a (randomly chosen) numeric priority. As with any binary search tree, the inorder traversal order of the nodes is the same as the sorted order of the keys. The structure of the tree is determined by the requirement that it be heap-ordered: that is, the priority number for any non-leaf node must be greater than or equal to the priority of its children. Thus, as with Cartesian trees more generally, the root node is the maximum-priority node, and its left and right subtrees are formed in the same manner from the subsequences of the sorted order to the left and right of that node.	The treap was first described by Cecilia R. Aragon and Raimund Seidel in 1989; its name is a portmanteau of tree and heap.	/m/0641kkv	Raimund_Seidel	55	69	/people/person
The Kirkpatrick‚ÄìSeidel algorithm, called by its authors "the ultimate planar convex hull algorithm" is an algorithm for computing the convex hull of a set of points in the plane, with O(n log h) time complexity, where n is the number of input points and h is the number of points in the hull. Thus, the algorithm is output-sensitive: its running time depends on both the input size and the output size. Another output-sensitive algorithm, the gift wrapping algorithm, was known much earlier, but the Kirkpatrick‚ÄìSeidel algorithm has an asymptotic running time that is significantly smaller and that always improves on the O(n log n) bounds of non-output-sensitive algorithms. The Kirkpatrick‚ÄìSeidel algorithm is named after its inventors, David G. Kirkpatrick and Raimund Seidel.	The Kirkpatrick‚ÄìSeidel algorithm is named after its inventors, David G. Kirkpatrick and Raimund Seidel.	/m/0641kkv	Raimund_Seidel	88	102	/people/person
The lower bound on worst-case running time of output-sensitive convex hull algorithms was established to be Œ©(n log h) in the planar case. There are several algorithms which attain this optimal time complexity. The earliest one was introduced by Kirkpatrick and Seidel in 1986 (who called it "the ultimate convex hull algorithm"). A much simpler algorithm was developed by Chan in 1996, and is called Chan's algorithm.	The earliest one was introduced by Kirkpatrick and Seidel in 1986 (who called it "the ultimate convex hull algorithm").	/m/0641kkv	Raimund_Seidel	51	57	/people/person
Cecilia R. Aragon is an American computer scientist, professor, and champion aerobatic pilot. In computer science, she is best known as the co-inventor (with Raimund Seidel) of the treap data structure, a type of binary search tree that orders nodes by adding a priority as well as a key to each node and for her work in data-intensive science and visual analytics of very large data sets, for which she received the prestigious Presidential Early Career Award for Scientists and Engineers (PECASE).	In computer science, she is best known as the co-inventor (with Raimund Seidel) of the treap data structure, a type of binary search tree that orders nodes by adding a priority as well as a key to each node and for her work in data-intensive science and visual analytics of very large data sets, for which she received the prestigious Presidential Early Career Award for Scientists and Engineers (PECASE).	/m/0641kkv	Raimund_Seidel	64	78	/people/person
Emo Welzl proposed a simple randomized algorithm for the minimum covering circle problem that runs in expected  time, based on a linear programming algorithm of Raimund Seidel. The algorithm is recursive, and takes as arguments two sets of points S and Q; it computes the smallest enclosing circle of the union of S and Q, as long as every point of Q is one of the boundary points of the eventual smallest enclosing circle. Thus, the original smallest enclosing circle problem can be solved by calling the algorithm with S equal to the set of points to be enclosed and Q equal to the empty set; as the algorithm calls itself recursively, it will enlarge the set Q passed into the recursive calls until it includes all the boundary points of the circle.	Emo Welzl proposed a simple randomized algorithm for the minimum covering circle problem that runs in expected  time, based on a linear programming algorithm of Raimund Seidel.	/m/0641kkv	Raimund_Seidel	161	175	/people/person
Popular UFO classification systems include the Hynek system, created by J. Allen Hynek, and the Vall√©e system, created by Jacques Vall√©e.	Popular UFO classification systems include the Hynek system, created by J. Allen Hynek, and the Vall√©e system, created by Jacques Vall√©e.	/m/059vf_	Jacques_Vall%C3%A9e	122	136	/book/author,/computer/computer_scientist,/people/person
Researcher Jacques Vall√©e describes a procedure on board the USS¬†Engstrom¬†(DE-50), which was docked alongside the Eldridge in 1943. The operation involved the generation of a powerful electromagnetic field on board the ship in order to deperm or degauss it, with the goal of rendering the ship undetectable or "invisible" to magnetically fused undersea mines and torpedoes. This system was invented by a Canadian, Charles F. Goodeve, when he held the rank of commander in the Royal Canadian Naval Volunteer Reserve, and the Royal Navy and other navies used it widely during WWII. British ships of the era often included such degaussing systems built into the upper decks (the conduits are still visible on the deck of HMS¬†Belfast¬†(C35) in London, for example). Degaussing is still used today. However, it has absolutely no effect on visible light or radar. Vall√©e speculates that accounts of the USS Engstrom‚Äôs degaussing might have been garbled and confabulated in subsequent retellings, and that these accounts may have influenced the story of "The Philadelphia Experiment."	Researcher Jacques Vall√©e describes a procedure on board the USS¬†Engstrom¬†(DE-50), which was docked alongside the Eldridge in 1943.	/m/059vf_	Jacques_Vall%C3%A9e	11	25	/book/author,/computer/computer_scientist,/people/person
Experts presenting testimony included Col. Bill Coleman, Chief of Public Information for the United States Air Force 1969-1974, Mr. Al Chap, Air Force Spokesman for the Pentagon and UFOs in 1952, Col. Hector Quintanilla, Dr. J. Allen Hynek, and Dr. Jacques Vall√©e. This program featured at its climax a scripted scenario of a UFO landing at Holloman AFB:	Experts presenting testimony included Col. Bill Coleman, Chief of Public Information for the United States Air Force 1969-1974, Mr. Al Chap, Air Force Spokesman for the Pentagon and UFOs in 1952, Col. Hector Quintanilla, Dr. J. Allen Hynek, and Dr. Jacques Vall√©e.	/m/059vf_	Jacques_Vall%C3%A9e	249	263	/book/author,/computer/computer_scientist,/people/person
Famous mainstream scientists who have shown interest in the UFO phenomenon include Stanford physicist Peter A. Sturrock, astronomer J. Allen Hynek, computer scientist and astronomer Jacques F. Vall√©e, and University of Arizona meteorologist James E. McDonald.	Famous mainstream scientists who have shown interest in the UFO phenomenon include Stanford physicist Peter A. Sturrock, astronomer J. Allen Hynek, computer scientist and astronomer Jacques F. Vall√©e, and University of Arizona meteorologist James E. McDonald.	/m/059vf_	Jacques_Vall%C3%A9e	182	199	/book/author,/computer/computer_scientist,/people/person
In 1989, Voronezh was the subject of international media attention after the TASS newspaper published a story recounting an alleged UFO landing that occurred in the city's park, and subsequent encounters between citizens and extraterrestrial beings. The account was later reported in America by the St. Louis Post-Dispatch, and received coverage by several other media outlets including the NBC Nightly News and the ABC Evening News. Details of the incident have been featured in several books, most notably UFO Chronicles of the Soviet Union: A Cosmic Samizdat by Jacques Vall√©e, The UFO Encyclopedia, Volume 1: UFOs in the 1980s by Jerome Clark, and UFOs: The Secret History by Michael Hesemann.	Details of the incident have been featured in several books, most notably UFO Chronicles of the Soviet Union: A Cosmic Samizdat by Jacques Vall√©e, The UFO Encyclopedia, Volume 1: UFOs in the 1980s by Jerome Clark, and UFOs: The Secret History by Michael Hesemann.	/m/059vf_	Jacques_Vall%C3%A9e	131	145	/book/author,/computer/computer_scientist,/people/person
Some UFO researchers such as Stanton Friedman and Jacques Vall√©e publicly dismiss the Meier case., while others believe the Meier case to be the most thoroughly researched and validated UFO case in our history. Some critics have provided examples of faked photos similar to what Meier produced and have pointed out that some of his photos correspond to scenes that were subsequently found in science fiction books, paintings and television programs. Meier claims that some of his photos were altered by intelligence agencies and slipped into his collection in order to discredit his UFO testimony. Professional skeptic Kal Korff has been particularly vociferous in dismissing the Meier case, pointing to proof of Meier's fakery obviated by finding light-direction and focal discrepancies consistent with cut-and-paste and model techniques.	Some UFO researchers such as Stanton Friedman and Jacques Vall√©e publicly dismiss the Meier case., while others believe the Meier case to be the most thoroughly researched and validated UFO case in our history.	/m/059vf_	Jacques_Vall%C3%A9e	50	64	/book/author,/computer/computer_scientist,/people/person
In November 1978, a statement on UFOs was presented by Dr. Allen Hynek, in the name of himself, of Dr. Jacques Vall√©e, and of Dr. Claude Poher. This speech was prepared and approved by the three authors, before the United Nations General Assembly. The objective was to initiate a centralized United Nations UFO authority.	In November 1978, a statement on UFOs was presented by Dr. Allen Hynek, in the name of himself, of Dr. Jacques Vall√©e, and of Dr. Claude Poher.	/m/059vf_	Jacques_Vall%C3%A9e	103	117	/book/author,/computer/computer_scientist,/people/person
The Montauk Project is alleged to have been a series of secret United States government projects conducted at Camp Hero or Montauk Air Force Station on Montauk, Long Island for the purpose of developing psychological warfare techniques and exotic research including time travel. Jacques Vall√©e describes allegations of the Montauk Project as an outgrowth of stories about the Philadelphia Experiment.	Jacques Vall√©e describes allegations of the Montauk Project as an outgrowth of stories about the Philadelphia Experiment.	/m/059vf_	Jacques_Vall%C3%A9e	0	14	/book/author,/computer/computer_scientist,/people/person
Conspiracy theories about the Montauk Project have circulated since the early 1980s. According to astrophysicist and UFO researcher Jacques Vall√©e, the Montauk Experiment stories seem to have originated with the account of Preston Nichols, who claimed to have recovered repressed memories of his own involvement.	According to astrophysicist and UFO researcher Jacques Vall√©e, the Montauk Experiment stories seem to have originated with the account of Preston Nichols, who claimed to have recovered repressed memories of his own involvement.	/m/059vf_	Jacques_Vall%C3%A9e	47	61	/book/author,/computer/computer_scientist,/people/person
John Keel and Brad Steiger promulgated various paranormal/UFO theories in a series of paperback books in the 1960s and 1970s. Keel in particular speculated that UFOs might have their origins not in space and time as we know it, but outside of it. He advocated that we may not do well to trust superior beings but to regard them as quite often deceptive or manipulative if not parasitic. Dr. Jacques Vall√©e, a French ufologist, noted an almost exact parallel between UFO and "Alien" visitations and stories from folklore of Fairies and similar creatures. This was documented in his 1969 book "Passport to Magonia" and explored further in his later works. The significance of these parallels is disputed between mainstream scientists, who contend that both are fanciful, and Vall√©e and others who feel that some underlying poorly understood phenomenon is actually interacting with humans to cause both kinds of sightings. Terence McKenna, in contrast, believed that UFOs are manifestations of the human soul, or collective spirit. He thought they appeared to individuals and groups in order to exert psychological influence over the course of history and might preside, in the year 2012, over history's end.	Dr. Jacques Vall√©e, a French ufologist, noted an almost exact parallel between UFO and "Alien" visitations and stories from folklore of Fairies and similar creatures.	/m/059vf_	Jacques_Vall%C3%A9e	4	18	/book/author,/computer/computer_scientist,/people/person
Even in ufology ‚Äî itself subject to at best very limited and sporadic mainstream scientific or academic interest ‚Äî contactees were generally seen as the lunatic fringe, and "serious" ufologists subsequently avoided the subject, for fear it would harm their attempts at "serious" study of the UFO phenomenon. Jacques Vall√©e notes that "No serious investigator has ever been very worried by the claims of the 'contactees.'"	Jacques Vall√©e notes that "No serious investigator has ever been very worried by the claims of the 'contactees.	/m/059vf_	Jacques_Vall%C3%A9e	0	14	/book/author,/computer/computer_scientist,/people/person
Magonia is a British magazine focused on UFO phenomena. Its name comes from Passport to Magonia, a book by Ufologist Jacques Vall√©e. Vall√©e in turn had borrowed the term from Magonia, a magical land described by French folklore.	Its name comes from Passport to Magonia, a book by Ufologist Jacques Vall√©e.	/m/059vf_	Jacques_Vall%C3%A9e	61	75	/book/author,/computer/computer_scientist,/people/person
Outside of music, Misraki was interested in religion, Ufology and extraterrestrial life. Misraki was an early proponent of the ancient astronaut hypothesis. In 1962 Misraki published his book Les Extraterrestres in France which was later reprinted in English under the title of Flying Saucers Through The Ages in 1965, he first published the book under the pen name of Paul Thomas as he believed that if his real identity was revealed, his reputation as a musician might be damaged; however, he later revealed his identity, and a number of American editions of the book were published under his real name. In the book, Misraki claimed that angels from the Bible were aliens, that the Bible and other ancient texts are filled with many UFO flying saucer sightings, and that throughout human history there was intervention from extraterrestrial aliens. Misraki was also one of the first authors to suggest that apparitions may be UFO related phenomena. The Ufologist Jacques Vall√©e studied some of Misraki's UFO theories and visited Misraki in Paris in September 1962 to discuss them with him, in his journals Vall√©e described Misraki as a "deeply reflective man" and a "religious scholar".	The Ufologist Jacques Vall√©e studied some of Misraki's UFO theories and visited Misraki in Paris in September 1962 to discuss them with him, in his journals Vall√©e described Misraki as a "deeply reflective man" and a "religious scholar".	/m/059vf_	Jacques_Vall%C3%A9e	14	28	/book/author,/computer/computer_scientist,/people/person
Dr. Jacques Vall√©e has said that the Ummo documents might be a real-world analogue of the fictional creators of Borges' "Tl√∂n, Uqbar, Orbis Tertius". Historian Mike Dash writes that Ummoism began on February 6, 1966, in Madrid. On that day, Jord√°n Pe√±a claimed to have had a close encounter of the first kind when he saw "an enormous circular object with three legs and, on its underside, a curious symbol: three vertical lines joined by a horizontal bar. The two exterior lines curved outward at the edges, which made the pictogram resemble the alchemical sign for the planet Uranus." (Dash, 299)	Dr. Jacques Vall√©e has said that the Ummo documents might be a real-world analogue of the fictional creators of Borges' "Tl√∂n, Uqbar, Orbis Tertius".	/m/059vf_	Jacques_Vall%C3%A9e	4	18	/book/author,/computer/computer_scientist,/people/person
Many scientific subjects are described in detail in the letters, including network theory (or graph theory), astrophysics, cosmology, the unified field theory, biology, and evolution. Some of this information is thought to be dubious pseudoscience, but much of it is scientifically accurate. However, Jerome Clark (Clark, 1993) notes that Dr. Jacques Vall√©e argued that the scientific content of the Ummo letters was knowledgeable but unremarkable, and compared the scientific references to a well-researched science fiction novel‚Äîplausible in the 1960s, but dated by the standards of the 1990s. Controversy sparked about one particular assertion the Ummites made. In 1965, they wrote they were coming from a planet orbiting Wolf 424, adding this star is at 3.68502 light-year of the Sun. This was coherent with the estimation made by astronomers in 1938, but after some additional measurement, this distance was re-estimated at 14.3 light year. Fernando Sesma asked then the Ummites about this apparent mistake. The Ummites replied in another letter the same year that the first measurement is the real distance measured in the three-dimensional framework while the second is the apparent distance traveled by light.	However, Jerome Clark (Clark, 1993) notes that Dr. Jacques Vall√©e argued that the scientific content of the Ummo letters was knowledgeable but unremarkable, and compared the scientific references to a well-researched science fiction novel‚Äîplausible in the 1960s, but dated by the standards of the 1990s.	/m/059vf_	Jacques_Vall%C3%A9e	51	65	/book/author,/computer/computer_scientist,/people/person
Ascott used telematics for the first time in 1978 when he organized a computer-conferencing project between the United States and the United Kingdom called Terminal Art. For this project he used Jacques Vall√©e's Infomedia Notepad System, which made it possible for the users to retrieve and add information stored in the computer‚Äôs memory. This made it possible to interact with a group of people to make "aesthetic encounters more participatory, culturally diverse, and richly layered with meaning". Ascott did more similar projects like Ten Wings which was part of Robert Adrian‚Äôs The World in 24 Hours in 1982. The most important telematic artwork of Ascott is La Plissure du Texte from 1983. This project allowed Ascott and other artists to participate in collectively creating texts to an emerging story by using computer networking. This participation has been termed as ‚Äòdistributed authorship‚Äô. But the most significant matter of this project is the interactivity of the artwork and the way it breaks the barriers of time and space. In the late 1980s the interest in this kind of project using computer networking expanded, especially with the release of the World Wide Web in the early 1990s.	For this project he used Jacques Vall√©e's Infomedia Notepad System, which made it possible for the users to retrieve and add information stored in the computer‚Äôs memory.	/m/059vf_	Jacques_Vall%C3%A9e	25	39	/book/author,/computer/computer_scientist,/people/person
Various authors, for example Jacques Vall√©e, Graham Hancock and John Mack have suggested that the dichotomy, 'real' versus 'imaginary', may be too simplistic; that a proper understanding of this complex phenomenon may require a reevaluation of our concept of the nature of reality.	Various authors, for example Jacques Vall√©e, Graham Hancock and John Mack have suggested that the dichotomy, 'real' versus 'imaginary', may be too simplistic; that a proper understanding of this complex phenomenon may require a reevaluation of our concept of the nature of reality.	/m/059vf_	Jacques_Vall%C3%A9e	29	43	/book/author,/computer/computer_scientist,/people/person
According to Jacques Vall√©e in his 1979 book Messengers of Deception, the group began in the early 1970s when Marshall Applewhite was recovering from a heart attack during which he claimed to have had a near-death experience. He came to believe that he and his nurse, Bonnie Nettles, were "the Two", that is, the two witnesses spoken of in the Book of Revelation 11:3 in the Bible. After a brief and unsuccessful attempt to run an inspirational bookstore, they began traveling around the United States of America giving talks about their belief system. As with some other New Age faiths they combined Christian doctrine (particularly the ideas of salvation and apocalypse) with the concept of evolutionary advancement and elements of science fiction, particularly travel to other worlds and dimensions.	According to Jacques Vall√©e in his 1979 book Messengers of Deception, the group began in the early 1970s when Marshall Applewhite was recovering from a heart attack during which he claimed to have had a near-death experience.	/m/059vf_	Jacques_Vall%C3%A9e	13	27	/book/author,/computer/computer_scientist,/people/person
Known to the mainstream media (though largely ignored through the 1980s and 1990s), Heaven's Gate was better known in UFO circles as well as a series of academic studies by sociologist Robert Balch. They also received coverage in Jacques Vall√©e's Messengers of Deception, in which Vall√©e described an unusual public meeting organized by the group. Vall√©e frequently expressed concerns within the book about contactee groups' authoritarian political and religious outlooks, and Heaven's Gate did not escape criticism.	They also received coverage in Jacques Vall√©e's Messengers of Deception, in which Vall√©e described an unusual public meeting organized by the group.	/m/059vf_	Jacques_Vall%C3%A9e	31	45	/book/author,/computer/computer_scientist,/people/person
The interdimensional hypothesis (IDH or IH), also called the extradimensional hypothesis (EDH), is an advanced theory by Jacques Vall√©e that says unidentified flying objects (UFOs) and related events involve visitations from other "realities" or "dimensions" that coexist separately alongside our own. It is an alternative to the extraterrestrial hypothesis (ETH).	The interdimensional hypothesis (IDH or IH), also called the extradimensional hypothesis (EDH), is an advanced theory by Jacques Vall√©e that says unidentified flying objects (UFOs) and related events involve visitations from other "realities" or "dimensions" that coexist separately alongside our own.	/m/059vf_	Jacques_Vall%C3%A9e	121	135	/book/author,/computer/computer_scientist,/people/person
Sputnik Observatory (SPTNK) is an educational non-profit organization dedicated to the study of contemporary culture. SPTNK documents, archives and disseminates ideas that are shaping modern thought. SPTNK is regarded for its Jonathan Harris - designed website that interconnects ideas shared by extraordinary minds in fields as diverse as quantum physics, mathematics, neuroscience, biology, economics, architecture, digital art, video games, computer science and music. Conversations include such people as physicist Freeman Dyson, game designer Will Wright, venture capitalist Jacques Vall√©e, biologist Lynn Margulis, aerospace entrepreneur Robert Bigelow, architect Lars Spuybroek and computer scientist Vint Cerf.	Conversations include such people as physicist Freeman Dyson, game designer Will Wright, venture capitalist Jacques Vall√©e, biologist Lynn Margulis, aerospace entrepreneur Robert Bigelow, architect Lars Spuybroek and computer scientist Vint Cerf.	/m/059vf_	Jacques_Vall%C3%A9e	108	122	/book/author,/computer/computer_scientist,/people/person
The Montauk Project was alleged to be a series of secret United States government projects conducted at Camp Hero or Montauk Air Force Station on Montauk, Long Island, for the purpose of exotic research, including time travel. Jacques Vall√©e describes allegations of the Montauk Project as an outgrowth of stories about the Philadelphia Experiment.	Jacques Vall√©e describes allegations of the Montauk Project as an outgrowth of stories about the Philadelphia Experiment.	/m/059vf_	Jacques_Vall%C3%A9e	0	14	/book/author,/computer/computer_scientist,/people/person
Ada was originally designed by a team led by Jean Ichbiah of CII Honeywell Bull under contract to the United States Department of Defense (DoD) from 1977 to 1983 to supersede the hundreds of programming languages then used by the DoD. Ada was named after Ada Lovelace (1815‚Äì1852), who is credited as being the first computer programmer.	Ada was originally designed by a team led by Jean Ichbiah of CII Honeywell Bull under contract to the United States Department of Defense (DoD) from 1977 to 1983 to supersede the hundreds of programming languages then used by the DoD.	/m/05bx8w	Jean_Ichbiah	45	57	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Requests for proposals for a new programming language were issued and four contractors were hired to develop their proposals under the names of Red (Intermetrics led by Benjamin Brosgol), Green (CII Honeywell Bull, led by Jean Ichbiah), Blue (SofTech, led by John Goodenough), and Yellow (SRI International, led by Jay Spitzen). In April 1978, after public scrutiny, the Red and Green proposals passed to the next phase. In May 1979, the Green proposal, designed by Jean Ichbiah at CII Honeywell Bull, was chosen and given the name Ada‚Äîafter Augusta Ada, Countess of Lovelace. This proposal was influenced by the programming language LIS that Ichbiah and his group had developed in the 1970s. The preliminary Ada reference manual was published in ACM SIGPLAN Notices in June 1979. The Military Standard reference manual was approved on December 10, 1980 (Ada Lovelace's birthday), and given the number MIL-STD-1815 in honor of Ada Lovelace's birth year. In 1981, C. A. R. Hoare took advantage of his Turing Award speech to criticize Ada for being overly complex and hence unreliable, but subsequently seemed to recant in the foreword he wrote for an Ada textbook.	Requests for proposals for a new programming language were issued and four contractors were hired to develop their proposals under the names of Red (Intermetrics led by Benjamin Brosgol), Green (CII Honeywell Bull, led by Jean Ichbiah), Blue (SofTech, led by John Goodenough), and Yellow (SRI International, led by Jay Spitzen).	/m/05bx8w	Jean_Ichbiah	222	234	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Requests for proposals for a new programming language were issued and four contractors were hired to develop their proposals under the names of Red (Intermetrics led by Benjamin Brosgol), Green (CII Honeywell Bull, led by Jean Ichbiah), Blue (SofTech, led by John Goodenough), and Yellow (SRI International, led by Jay Spitzen). In April 1978, after public scrutiny, the Red and Green proposals passed to the next phase. In May 1979, the Green proposal, designed by Jean Ichbiah at CII Honeywell Bull, was chosen and given the name Ada‚Äîafter Augusta Ada, Countess of Lovelace. This proposal was influenced by the programming language LIS that Ichbiah and his group had developed in the 1970s. The preliminary Ada reference manual was published in ACM SIGPLAN Notices in June 1979. The Military Standard reference manual was approved on December 10, 1980 (Ada Lovelace's birthday), and given the number MIL-STD-1815 in honor of Ada Lovelace's birth year. In 1981, C. A. R. Hoare took advantage of his Turing Award speech to criticize Ada for being overly complex and hence unreliable, but subsequently seemed to recant in the foreword he wrote for an Ada textbook.	In May 1979, the Green proposal, designed by Jean Ichbiah at CII Honeywell Bull, was chosen and given the name Ada‚Äîafter Augusta Ada, Countess of Lovelace.	/m/05bx8w	Jean_Ichbiah	45	57	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
The earliest imperative languages were the machine languages of the original computers. In these languages, instructions were very simple, which made hardware implementation easier, but hindered the creation of complex programs. FORTRAN, developed by John Backus at IBM starting in 1954, was the first major programming language to remove the obstacles presented by machine code in the creation of complex programs. FORTRAN was a compiled language that allowed named variables, complex expressions, subprograms, and many other features now common in imperative languages. The next two decades saw the development of a number of other major high-level imperative programming languages. In the late 1950s and 1960s, ALGOL was developed in order to allow mathematical algorithms to be more easily expressed, and even served as the operating system's target language for some computers. MUMPS (1966) carried the imperative paradigm to a logical extreme, by not having any statements at all, relying purely on commands, even to the extent of making the IF and ELSE commands independent of each other, connected only by an intrinsic variable named $TEST. COBOL (1960) and BASIC (1964) were both attempts to make programming syntax look more like English. In the 1970s, Pascal was developed by Niklaus Wirth, and C was created by Dennis Ritchie while he was working at Bell Laboratories. Wirth went on to design Modula-2 and Oberon. For the needs of the United States Department of Defense, Jean Ichbiah and a team at Honeywell began designing Ada in 1978, after a 4-year project to define the requirements for the language. The specification was first published in 1983, with revisions in 1995 and 2005/6.	For the needs of the United States Department of Defense, Jean Ichbiah and a team at Honeywell began designing Ada in 1978, after a 4-year project to define the requirements for the language.	/m/05bx8w	Jean_Ichbiah	58	70	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Beaujolais effect is the name given to a class of potential semantic errors in Jean Ichbiah's draft specifications for the programming language Ada. The name arose from Ichbiah's promise to give a bottle of Beaujolais nouveau red wine to anyone who could find such a situation in the draft language standard. At least one bottle was actually awarded for such a discovery.	Beaujolais effect is the name given to a class of potential semantic errors in Jean Ichbiah's draft specifications for the programming language Ada.	/m/05bx8w	Jean_Ichbiah	79	91	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Fitaly was invented and patented by Jean Ichbiah and is commercialized by the company he founded, Textware Solutions.	Fitaly was invented and patented by Jean Ichbiah and is commercialized by the company he founded, Textware Solutions.	/m/05bx8w	Jean_Ichbiah	36	48	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
LIS (Language d'Implementation de Syst√®mes) was a system implementation programming language designed by Jean Ichbiah, who later designed Ada.	LIS (Language d'Implementation de Syst√®mes) was a system implementation programming language designed by Jean Ichbiah, who later designed Ada.	/m/05bx8w	Jean_Ichbiah	105	117	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Alsys SA. the French company was founded in 1980 by Jean Ichbiah (1940‚Äì2007). Also in 1980 the American subsidiary Alsys inc. was formed with Ben Brosgol (from Intermetrics), and Pascal Cl√®ve.	the French company was founded in 1980 by Jean Ichbiah (1940‚Äì2007).	/m/05bx8w	Jean_Ichbiah	42	54	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
Dewar became involved with the Ada programming language from its early days as a Distinguished Reviewer of the Ada 1983 design proposed by Jean Ichbiah that was selected by the US DoD.	Dewar became involved with the Ada programming language from its early days as a Distinguished Reviewer of the Ada 1983 design proposed by Jean Ichbiah that was selected by the US DoD.	/m/05bx8w	Jean_Ichbiah	139	151	/computer/computer_scientist,/computer/programming_language_designer,/people/deceased_person,/people/person
In a series of books and articles published from 1964 through 1980, Nelson transposed Bush's concept of automated cross-referencing into the computer context, made it applicable to specific text strings rather than whole pages, generalized it from a local desk-sized machine to a theoretical proprietary worldwide computer network, and advocated the creation of such a network. Though Nelson's Xanadu Corporation was eventually funded by Autodesk in the 1980s, it never created this proprietary public-access network. Meanwhile, working independently, a team led by Douglas Engelbart (with Jeff Rulifson as chief programmer) was the first to implement the hyperlink concept for scrolling within a single document (1966), and soon after for connecting between paragraphs within separate documents (1968), with NLS. Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983. HyperTIES was used to produce the world's first electronic journal, the July 1988 Communications of ACM, which was cited as the source for the link concept in Tim Berners-Lee's Spring 1989 manifesto for the Web. In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!", the world's first electronic book.	Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983.	/m/05_lgh	Ben_Shneiderman	0	15	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In a series of books and articles published from 1964 through 1980, Nelson transposed Bush's concept of automated cross-referencing into the computer context, made it applicable to specific text strings rather than whole pages, generalized it from a local desk-sized machine to a theoretical proprietary worldwide computer network, and advocated the creation of such a network. Though Nelson's Xanadu Corporation was eventually funded by Autodesk in the 1980s, it never created this proprietary public-access network. Meanwhile, working independently, a team led by Douglas Engelbart (with Jeff Rulifson as chief programmer) was the first to implement the hyperlink concept for scrolling within a single document (1966), and soon after for connecting between paragraphs within separate documents (1968), with NLS. Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983. HyperTIES was used to produce the world's first electronic journal, the July 1988 Communications of ACM, which was cited as the source for the link concept in Tim Berners-Lee's Spring 1989 manifesto for the Web. In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!", the world's first electronic book.	In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!	/m/05_lgh	Ben_Shneiderman	9	24	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In a series of books and articles published from 1964 through 1980, Nelson transposed Bush's concept of automated cross-referencing into the computer context, made it applicable to specific text strings rather than whole pages, generalized it from a local desk-sized machine to a theoretical proprietary worldwide computer network, and advocated the creation of such a network. Though Nelson's Xanadu Corporation was eventually funded by Autodesk in the 1980s, it never created this proprietary public-access network. Meanwhile, working independently, a team led by Douglas Engelbart (with Jeff Rulifson as chief programmer) was the first to implement the hyperlink concept for scrolling within a single document (1966), and soon after for connecting between paragraphs within separate documents (1968), with NLS. Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983. HyperTIES was used to produce the world's first electronic journal, the July 1988 Communications of ACM, which was cited as the source for the link concept in Tim Berners-Lee's Spring 1989 manifesto for the Web. In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!", the world's first electronic book.	Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983.	/m/05_lgh	Ben_Shneiderman	0	15	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In a series of books and articles published from 1964 through 1980, Nelson transposed Bush's concept of automated cross-referencing into the computer context, made it applicable to specific text strings rather than whole pages, generalized it from a local desk-sized machine to a theoretical proprietary worldwide computer network, and advocated the creation of such a network. Though Nelson's Xanadu Corporation was eventually funded by Autodesk in the 1980s, it never created this proprietary public-access network. Meanwhile, working independently, a team led by Douglas Engelbart (with Jeff Rulifson as chief programmer) was the first to implement the hyperlink concept for scrolling within a single document (1966), and soon after for connecting between paragraphs within separate documents (1968), with NLS. Ben Shneiderman working with graduate student Dan Ostroff designed and implemented the highlighted link in the HyperTIES system in 1983. HyperTIES was used to produce the world's first electronic journal, the July 1988 Communications of ACM, which was cited as the source for the link concept in Tim Berners-Lee's Spring 1989 manifesto for the Web. In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!", the world's first electronic book.	In 1988, Ben Shneiderman and Greg Kearsley used HyperTIES to publish "Hypertext Hands-On!	/m/05_lgh	Ben_Shneiderman	9	24	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Interactive Encyclopedia System, or TIES, was a hypertext system developed at the University of Maryland, College Park by Ben Shneiderman in 1983. The earliest versions of TIES ran in DOS text mode, using the cursor arrow keys for navigating through information. A later version of HyperTIES for the Sun workstation was developed using the NeWS window system, with an authoring tool based on UniPress's Gosling Emacs text editor.	The Interactive Encyclopedia System, or TIES, was a hypertext system developed at the University of Maryland, College Park by Ben Shneiderman in 1983.	/m/05_lgh	Ben_Shneiderman	126	141	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
ISO defines usability as "The extent to which a product can be used by specified users to achieve specified goals with effectiveness, efficiency, and satisfaction in a specified context of use." The word "usability" also refers to methods for improving ease-of-use during the design process. Usability consultant Jakob Nielsen and computer science professor Ben Shneiderman have written (separately) about a framework of system acceptability, where usability is a part of "usefulness" and is composed of:	Usability consultant Jakob Nielsen and computer science professor Ben Shneiderman have written (separately) about a framework of system acceptability, where usability is a part of "usefulness" and is composed of:	/m/05_lgh	Ben_Shneiderman	66	81	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The term was introduced by Ben Shneiderman in 1982 within the context of office applications and the desktop metaphor. Individuals in academia and computer scientists doing research on future user interfaces often put as much or even more stress on tactile control and feedback, or sonic control and feedback than on the visual feedback given by most GUIs. As a result the term has been more widespread in these environments.	The term was introduced by Ben Shneiderman in 1982 within the context of office applications and the desktop metaphor.	/m/05_lgh	Ben_Shneiderman	27	42	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The astute bow tie wearing software agent in the video has been the center of quite a few heated discussions in the domain of human‚Äìcomputer interaction. It was criticized as being an unrealistic portrayal of the capacities of any software agent in the foreseeable future, or even in a distant future. Some user interface professionals like Ben Shneiderman of the University of Maryland, College Park have also criticized its use of a human likeness for giving a misleading idea of the nature of any interaction with a computer, present or future.	Some user interface professionals like Ben Shneiderman of the University of Maryland, College Park have also criticized its use of a human likeness for giving a misleading idea of the nature of any interaction with a computer, present or future.	/m/05_lgh	Ben_Shneiderman	39	54	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The NeWS version of UniPress's Gosling Emacs text editor was the first commercially available product to pioneer the use of multiple tabbed windows in 1988. It was used to develop an authoring tool for the Ben Shneiderman's HyperTIES browser (the NeWS workstation version of The Interactive Encyclopedia System), in 1988. HyperTIES also supported pie menus for managing windows and browsing hypermedia documents with PostScript applets. Don Hopkins developed and released several versions of tabbed window frames for the NeWS window system as free software, which the window manager applied to all NeWS applications, and enabled users to drag the tabs around to any edge of the window.	It was used to develop an authoring tool for the Ben Shneiderman's HyperTIES browser (the NeWS workstation version of The Interactive Encyclopedia System), in 1988.	/m/05_lgh	Ben_Shneiderman	49	64	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He developed and refined pie menus for many platforms and applications including window managers, Emacs, SimCity and The Sims, and published a frequently cited paper about pie menus at CHI'88 with Jack Callahan, Ben Shneiderman and Mark Weiser. He has published many free software and open source implementations of pie menus for X10, X11, NeWS, Tcl/tk, ScriptX, ActiveX, JavaScript, OpenLaszlo, Python and OLPC, and also proprietary implementations for The Sims and the Palm Pilot.	He developed and refined pie menus for many platforms and applications including window managers, Emacs, SimCity and The Sims, and published a frequently cited paper about pie menus at CHI'88 with Jack Callahan, Ben Shneiderman and Mark Weiser.	/m/05_lgh	Ben_Shneiderman	212	227	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Area-based visualizations have existed for decades. Mosaic plots and Marimekko diagrams both use rectangular tilings to show joint distributions, for example. The main distinguishing feature of a treemap, however, is the recursive construction that allows it to be extended to hierarchical data with any number of levels. This idea was invented by University of Maryland, College Park professor Ben Shneiderman in the early 1990s. Shneiderman and his collaborators then deepened the idea by introducing a variety of interactive techniques for filtering and adjusting treemaps.	This idea was invented by University of Maryland, College Park professor Ben Shneiderman in the early 1990s.	/m/05_lgh	Ben_Shneiderman	73	88	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A Nassi‚ÄìShneiderman diagram (NSD) in computer programming is a graphical design representation for structured programming. This type of diagram was developed in 1972 by Isaac Nassi and Ben Shneiderman who were both graduate students at SUNY-Stony Brook. These diagrams are also called structograms, as they show a program's structures.	This type of diagram was developed in 1972 by Isaac Nassi and Ben Shneiderman who were both graduate students at SUNY-Stony Brook.	/m/05_lgh	Ben_Shneiderman	62	77	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
He is probably best known for creating (with Ben Shneiderman) the highly influential Nassi‚ÄìShneiderman diagram notation. He also helped design the Ada programming language.	He is probably best known for creating (with Ben Shneiderman) the highly influential Nassi‚ÄìShneiderman diagram notation.	/m/05_lgh	Ben_Shneiderman	45	60	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Sears was born in Newton, Massachusetts, and attended Natick High School located in Natick, Massachusetts. He pursued undergraduate studies at Rensselaer Polytechnic Institute, graduating in 1988 with a BS in Computer Science. Subsequently, Sears pursued graduate studies at the University of Maryland, College Park, earning a PhD in Computer Science (1993). His dissertation, titled ‚ÄúLayoutAppropriateness: Guiding user interface design with simple task descriptions‚Äù was chaired by Ben Shneiderman.	His dissertation, titled ‚ÄúLayoutAppropriateness: Guiding user interface design with simple task descriptions‚Äù was chaired by Ben Shneiderman.	/m/05_lgh	Ben_Shneiderman	125	140	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The history of psychology of programming dates back to late 1970s and early 1980s, when researchers realized that computational power should not be the only thing to be evaluated in programming tools and technologies, but also the usability from the users. In the first Workshop on Empirical Studies of Programmers, Ben Shneiderman listed several important destinations for researchers. These destinations include refining the use of current languages, improving present and future languages, developing special purpose languages, and improving tools and methods. Two important workshop series have been devoted to Psychology of Programming in the last two decades: the Workshop on Empirical Studies of Programmers(ESP), based primarily in the US, and the Technology of Programming Interest Group Workshop(PPIG), having a European character. ESP has a broader scope than pure psychology in programming, and on the other hand, PPIG is more focused in the field of PoP. However, PPIG workshops and the organization PPIG itself is informal in nature, It is group of people who are interested in PoP that comes together and publish their discussions.	In the first Workshop on Empirical Studies of Programmers, Ben Shneiderman listed several important destinations for researchers.	/m/05_lgh	Ben_Shneiderman	59	74	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Universal usability refers to the design of information and communications products and services that are usable for every citizen. The concept has been advocated by Professor Ben Shneiderman, a computer scientist at the University of Maryland, College Park. He also provided a more practical definition of universal usability ‚Äì ‚Äúhaving more than 90% of all households as successful users of information and communications services at least once a week.‚Äù The concept of universal usability (‚Äúusable by all‚Äù) is closely related to the concepts of universal accessibility (‚Äúaccessible by all‚Äù) and universal design (‚Äúdesign for all‚Äù). These three concepts altogether cover, from the user‚Äôs end to the developer‚Äôs end, the three important research areas of information and communications technology (ICT): use, access, and design.	The concept has been advocated by Professor Ben Shneiderman, a computer scientist at the University of Maryland, College Park.	/m/05_lgh	Ben_Shneiderman	44	59	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The touch screen is the standard display method for tablet PC and smaller IAs. Color may or may not be important to the user but can be an aid in directing the user. The screen size is perhaps the most important consideration. Organization of the screen is challenging on the small screen and the user should be considered when designing the interface. See section 2.2 and 2.3 in Ben Shneiderman's "Designing the user interface" (ISBN 0-321-19786-0) concerning design of the interface.	See section 2.2 and 2.3 in Ben Shneiderman's "Designing the user interface" (ISBN 0-321-19786-0) concerning design of the interface.	/m/05_lgh	Ben_Shneiderman	27	42	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Web science is the socio-technical science that investigates how the World Wide Web evolves given the regulations, technology and content imposed, engineered and contributed, respectively, as an effect of human behavior and how the Web vice versa affects human behavior. An earlier definition was given by American computer scientist Ben Shneiderman: "Web Science" is a term that refers to processing the information available on the web in similar terms to those applied to natural environment.	An earlier definition was given by American computer scientist Ben Shneiderman: "Web Science" is a term that refers to processing the information available on the web in similar terms to those applied to natural environment.	/m/05_lgh	Ben_Shneiderman	63	78	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The lab is currently directed by Jennifer Golbeck; its previous directors are Ben Shneiderman (1983-2000), Ben Bederson (2000-2006), and Allison Druin (2006-2011).	The lab is currently directed by Jennifer Golbeck; its previous directors are Ben Shneiderman (1983-2000), Ben Bederson (2000-2006), and Allison Druin (2006-2011).	/m/05_lgh	Ben_Shneiderman	78	93	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Spotfire's origins trace back to the Human-Computer Interaction Laboratory at the University of Maryland, College Park where, in the early 1990s, Christopher Ahlberg, a visiting student from Sweden, worked with Ben Shneiderman to develop applications of dynamic queries. Ahlberg returned to Sweden and developed an enhanced UNIX implementation of his visual data analysis tool, the Information Visualization and Exploration Environment (IVEE). Spotfire was launched in mid-1996 by IVEE Development, which was renamed Spotfire Inc.	Spotfire's origins trace back to the Human-Computer Interaction Laboratory at the University of Maryland, College Park where, in the early 1990s, Christopher Ahlberg, a visiting student from Sweden, worked with Ben Shneiderman to develop applications of dynamic queries.	/m/05_lgh	Ben_Shneiderman	211	226	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Ben Shneiderman: ‚Äúfor his book, Leonardo‚Äôs Laptop: Human Needs and the New Computing Technologies.‚Äù	Ben Shneiderman: ‚Äúfor his book, Leonardo‚Äôs Laptop: Human Needs and the New Computing Technologies.‚Äù	/m/05_lgh	Ben_Shneiderman	0	15	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 1976 Mackinlay started working as a Systems Analyst for the Bank of America in San Francisco. In 1977 he became a Systems Analyst at Minimax Research Corporation. From 1979 to 1986 he was Research Assistant at Stanford University. In 1986 he joined Xerox PARC, where he collaborated with the User Interface Research Group to develop many novel applications of computer graphics for information access, coining the term "Information Visualization". Much of the fruits of this research can be seen in his 1999 published book, Readings in Information Visualization: Using Vision to Think, written and edited with Stuart K. Card and Ben Shneiderman. He holds numerous patents in user interfaces and visual analysis. He joined Tableau Software in 2004 as Director of Visual Analysis.	Much of the fruits of this research can be seen in his 1999 published book, Readings in Information Visualization: Using Vision to Think, written and edited with Stuart K. Card and Ben Shneiderman.	/m/05_lgh	Ben_Shneiderman	181	196	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Ben Shneiderman suggests the following steps for designers to build a correct task hierarchy:	Ben Shneiderman suggests the following steps for designers to build a correct task hierarchy:	/m/05_lgh	Ben_Shneiderman	0	15	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 1999 Stuart Card, Jock D. Mackinlay, and Ben Shneiderman present their own interpretation of this pattern, dubbing it the information visualization reference model.	In 1999 Stuart Card, Jock D. Mackinlay, and Ben Shneiderman present their own interpretation of this pattern, dubbing it the information visualization reference model.	/m/05_lgh	Ben_Shneiderman	44	59	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Consequently, Useware Engineering developed in a similar way to the development of engineering processes (see figure 2). This reinforces the principal demand for structured development of user-centered user interfaces expressed e.g. by Ben Shneiderman (Shneiderman, 1998). After many years of function-oriented development human abilities and needs are brought into focus. The only promising method to develop future technical products and systems is to understand the users‚Äô abilities and limitations and to aim the technology in that direction (Zuehlke, 2007).	by Ben Shneiderman (Shneiderman, 1998).	/m/05_lgh	Ben_Shneiderman	3	18	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Hive Group is a privately held company founded in 2000, with headquarters in Richardson, Texas. The company‚Äôs treemapping software is called Honeycomb. Ben Shneiderman, the inventor of the treemap concept, is a member of The Hive Group‚Äôs Board of Advisors.  The number of employees is believed to be fewer than 50.	Ben Shneiderman, the inventor of the treemap concept, is a member of The Hive Group‚Äôs Board of Advisors.	/m/05_lgh	Ben_Shneiderman	0	15	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The term Science 2.0 suggests a contrast between traditional ways of doing science, often denoted Science 1.0, with more collaborative approaches, and suggests that the new forms of science will work with Web 2.0 technologies. One description from Science is that Science 2.0 uses the "networking power of the internet to tackle problems with multiple interacting variables - the problems, in other words, of everyday life." A different and somewhat controversial view is that of Ben Shneiderman, who suggested that Science 2.0 combines hypothesis-based inquiries with social science methods, partially for the purpose of improving those new networks.	" A different and somewhat controversial view is that of Ben Shneiderman, who suggested that Science 2.0 combines hypothesis-based inquiries with social science methods, partially for the purpose of improving those new networks.	/m/05_lgh	Ben_Shneiderman	57	72	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 2008, a scientist at the University of Maryland named Ben Shneiderman wrote an editorial entitled Science 2.0. Shneiderman argued that Science 2.0 was about studying social interactions in the "real world" with study of e-commerce, online communities and so forth. A writer in Wired Magazine criticized Shneiderman's view, suggesting that Shneiderman's call for more collaboration, more real-world tests, and more progress should not be called "Science 2.0" or "Science 1.0" but simply science.	In 2008, a scientist at the University of Maryland named Ben Shneiderman wrote an editorial entitled Science 2.0.	/m/05_lgh	Ben_Shneiderman	57	72	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Funding for NLS slowed after 1974. Influential work in the following decade included NoteCards at Xerox PARC and ZOG at Carnegie Mellon. ZOG started in 1972 as an artificial intelligence research project under the supervision of Allen Newell, and pioneered the "frame" or "card" model of hypertext. ZOG was deployed in 1982 on the U.S.S. Carl Vinson and later commercialized as Knowledge Management System. Two other influential hypertext projects from the early 1980s were Ben Shneiderman's The Interactive Encyclopedia System (TIES) at the University of Maryland (1983) and Intermedia at Brown University (1984).	Two other influential hypertext projects from the early 1980s were Ben Shneiderman's The Interactive Encyclopedia System (TIES) at the University of Maryland (1983) and Intermedia at Brown University (1984).	/m/05_lgh	Ben_Shneiderman	67	82	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Before co-founding Recorded Future, Ahlberg was the president of the Spotfire Division of Tibco, which he founded as an independent company in 1996. In 2007, Spotfire was acquired by Tibco for $195M in cash. Spotfire was founded based on his research on information visualization at the University of Maryland under the guidance of Ben Shneiderman. Ahlberg earned his doctorate from Chalmers University of Technology and has worked as a visiting researcher at the University of Maryland. He has lectured and consulted extensively for industry, academia, military, and intelligence communities as well as published and lectured on computer science, psychology, linguistics, biology, and chemistry. He has been granted two software patents, and has multiple patents pending. He was named among the World's Top 100 Young Innovators by MIT Technology Review and received the TR100 award in 2002. Christopher resides in the Boston area with his wife and two children.	Spotfire was founded based on his research on information visualization at the University of Maryland under the guidance of Ben Shneiderman.	/m/05_lgh	Ben_Shneiderman	124	139	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 1987, Ben Shneiderman presented a questionnaire that directed user attention to focus on their subjective rating of the human-computer interface. While this questionnaire was a strong step towards focus on users' evaluations of an interface, no empirical work had been done to assess its reliability or validity.	In 1987, Ben Shneiderman presented a questionnaire that directed user attention to focus on their subjective rating of the human-computer interface.	/m/05_lgh	Ben_Shneiderman	9	24	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Jean-Daniel Fekete is a French computer scientist working in the field of Information Visualization and Human-Computer Interaction. He received his PhD from the Paris-Sud 11 University in 1996. He obtained his Habilitation in 2005, entitled "Nouvelle g√©n√©ration d'Interfaces Homme-Machine pour mieux agir et mieux comprendre" (New generation of Human Machine Interfaces for better interacting and understanding) at Universit√© Paris-Sud 11. The jury was Jo√´lle Coutaz (Prof. Universit√© de Grenoble II), Saul Greenberg (Prof. Universit√© de Calgary, Canada), Ben Shneiderman (Prof. University of Maryland, USA), Michel Beaudouin-Lafon (Prof. Universit√© Paris-Sud 11), Jean-Gabriel Ganascia (Prof. Universit√© Paris VI), Guy M√©lan√ßon (Prof. Universit√© Paul-Val√©ry Montpellier 3|Universit√© Montpellier III) and Claude Puech (Prof. Universit√© Grenoble II). He is currently Senior Research at INRIA and the founding and current director of the AVIZ group since 2007.	The jury was Jo√´lle Coutaz (Prof. Universit√© de Grenoble II), Saul Greenberg (Prof. Universit√© de Calgary, Canada), Ben Shneiderman (Prof. University of Maryland, USA), Michel Beaudouin-Lafon (Prof. Universit√© Paris-Sud 11), Jean-Gabriel Ganascia (Prof. Universit√© Paris VI), Guy M√©lan√ßon (Prof. Universit√© Paul-Val√©ry Montpellier 3|Universit√© Montpellier III) and Claude Puech (Prof. Universit√© Grenoble II).	/m/05_lgh	Ben_Shneiderman	116	131	/book/author,/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
OCaml (/o äÀàk√¶m…ôl/ oh-KAM-…ôl), originally known as Objective Caml, is the main implementation of the Caml programming language, created by Xavier Leroy, J√©r√¥me Vouillon, Damien Doligez, Didier R√©my and others in 1996. OCaml extends the core Caml language with object-oriented constructs.	OCaml (/o äÀàk√¶m…ôl/ oh-KAM-…ôl), originally known as Objective Caml, is the main implementation of the Caml programming language, created by Xavier Leroy, J√©r√¥me Vouillon, Damien Doligez, Didier R√©my and others in 1996.	/m/05hhq8	Xavier_Leroy	138	150	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
Xavier Leroy has stated that "OCaml delivers at least 50% of the performance of a decent C compiler", but a direct comparison is impossible. Some functions in the OCaml standard library are implemented with faster algorithms than equivalent functions in the standard libraries of other languages. For example, the implementation of set union in the OCaml standard library in theory is asymptotically faster than the equivalent function in the standard libraries of imperative languages (e.g. C++, Java) because the OCaml implementation exploits the immutability of sets in order to reuse parts of input sets in the output (persistence).	Xavier Leroy has stated that "OCaml delivers at least 50% of the performance of a decent C compiler", but a direct comparison is impossible.	/m/05hhq8	Xavier_Leroy	0	12	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
The first Caml implementation in Lisp was nicknamed "Heavy CAML" because of its memory and CPU requirements relative to its successor Caml Light that was implemented in C by Xavier Leroy and Damien Doligez. In addition to a complete rewriting, CAML Special Light added a powerful (applicative) module system to the core language.	The first Caml implementation in Lisp was nicknamed "Heavy CAML" because of its memory and CPU requirements relative to its successor Caml Light that was implemented in C by Xavier Leroy and Damien Doligez.	/m/05hhq8	Xavier_Leroy	174	186	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
In the Linux operating system, LinuxThreads was a partial implementation of POSIX Threads. It has since been superseded by the Native POSIX Thread Library (NPTL). The main developer of LinuxThreads was Xavier Leroy.	The main developer of LinuxThreads was Xavier Leroy.	/m/05hhq8	Xavier_Leroy	39	51	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
CompCert is a formally verified optimizing compiler for a subset of the C programming language which currently targets PowerPC, ARM and 32-bit x86 architectures. This project, led by Xavier Leroy, started officially in 2005, funded by the French institutes ANR and INRIA. The compiler is specified, programmed and proved in Coq. It aims to be used for programming embedded systems requiring reliability. The performance of its generated code is often close to that of GCC (version 3) at optimization level -O1, and always better than that of GCC without optimizations.	This project, led by Xavier Leroy, started officially in 2005, funded by the French institutes ANR and INRIA.	/m/05hhq8	Xavier_Leroy	21	33	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
Peaches, Gob Squad, Jer√¥me Bel, Neco √áelik, Big Art Group, Alvis Hermanis, Shermin Langhoff, Constanza Macras, Richard Maxwell, Xavier Leroy, Norton.Commander.Productions, Rimini Protokoll, Jochen Roller, Christoph Schlingensief, She She Pop, The Wooster Group.	Peaches, Gob Squad, Jer√¥me Bel, Neco √áelik, Big Art Group, Alvis Hermanis, Shermin Langhoff, Constanza Macras, Richard Maxwell, Xavier Leroy, Norton.Commander.Productions, Rimini Protokoll, Jochen Roller, Christoph Schlingensief, She She Pop, The Wooster Group.	/m/05hhq8	Xavier_Leroy	128	140	/computer/computer_scientist,/computer/programming_language_designer,/education/academic,/people/person
The idea of an automated spacecraft capable of constructing copies of itself was first proposed in scientific literature in 1974 by Michael A. Arbib, but the concept had appeared earlier in science fiction such as the 1967 novel Berserker by Fred Saberhagen or the 1950 novellette trilogy The Voyage of the Space Beagle by A. E. van Vogt (see self-replicating machines in fiction, below). The first quantitative engineering analysis of a self-replicating spacecraft was published in 1980 by Robert Freitas, in which the non-replicating Project Daedalus design was modified to include all subsystems necessary for self-replication. The design's strategy was to use the probe to deliver a "seed" factory with a mass of about 443 tons to a distant site, have the seed factory replicate many copies of itself there to increase its total manufacturing capacity, and then use the resulting automated industrial complex to construct more probes with a single seed factory on board each.	The idea of an automated spacecraft capable of constructing copies of itself was first proposed in scientific literature in 1974 by Michael A. Arbib, but the concept had appeared earlier in science fiction such as the 1967 novel Berserker by Fred Saberhagen or the 1950 novellette trilogy The Voyage of the Space Beagle by A. E. van Vogt (see self-replicating machines in fiction, below).	/m/04jztv	Michael_A._Arbib	132	148	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
From the cognitive science perspective, every natural intelligent system is hybrid because it performs mental operations on both the symbolic and subsymbolic levels. For the past few years there has been an increasing discussion of the importance of A.I. Systems Integration. Based on notions that there have already been created simple and specific AI systems (such as systems for computer vision, speech synthesis, etc., or software that employs some of the models mentioned above) and now is the time for integration to create broad AI systems. Proponents of this approach are researchers such as Marvin Minsky, Ron Sun, Aaron Sloman, and Michael A. Arbib.	Proponents of this approach are researchers such as Marvin Minsky, Ron Sun, Aaron Sloman, and Michael A. Arbib.	/m/04jztv	Michael_A._Arbib	94	110	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
Most artificial intelligence systems involve some sort of integrated technologies, for example the integration of speech synthesis technologies with that of speech recognition. However, in recent years there has been an increasing discussion on the importance of systems integration as a field in its own right. Proponents of this approach are researchers such as Marvin Minsky, Aaron Sloman, Deb Roy, Kristinn R. Th√≥risson and Michael A. Arbib. A reason for the recent attention A.I. integration is attracting is that there have already been created a number of (relatively) simple A.I. systems for specific problem domains (such as computer vision, speech synthesis, etc.), and that integrating what's already available is a more logical approach to broader A.I. than building monolithic systems from scratch.	Proponents of this approach are researchers such as Marvin Minsky, Aaron Sloman, Deb Roy, Kristinn R. Th√≥risson and Michael A. Arbib.	/m/04jztv	Michael_A._Arbib	116	132	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
Lewis received his Ph.D. at the University of Southern California under the guidance of Michael Arbib and George Bekey. He has served on the faculty of the University of California, Los Angeles and the University of Illinois and is currently on the faculty of the University of Arizona.	Lewis received his Ph.D. at the University of Southern California under the guidance of Michael Arbib and George Bekey.	/m/04jztv	Michael_A._Arbib	88	101	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
Dr. Kristinn R. Th√≥risson is an Icelandic Artificial Intelligence researcher, founder of the Icelandic Institute for Intelligent Machines (IIIM) and co-founder and former co-director of CADIA: Center for Analysis and Design of Intelligent Agents. Th√≥risson is one of the leading proponents of artificial intelligence systems integration. Other proponents of this approach are researchers such as Marvin Minsky, Aaron Sloman and Michael A. Arbib.	Other proponents of this approach are researchers such as Marvin Minsky, Aaron Sloman and Michael A. Arbib.	/m/04jztv	Michael_A._Arbib	90	106	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
Michael Anthony Arbib	Michael Anthony Arbib	/m/04jztv	Michael_A._Arbib	0	21	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
Michael A. Arbib , Evan Balaban , Robert Berwick , Thomas G. Bever , Cedric Boeckx , Johan J. Bolhuis , Lisa Cheng , Noam Chomsky , Anna Maria Di Sciullo , Ansgar Endress , Simon E. Fisher , W. Tecumseh Fitch , Angela D. Friederici , Roland Friedrich , Koji Fujita , Alessandra Giorgi , Kleanthes K. Grohmann , Mohamed Guerssel , Heidi Harley , Marc Hauser , Lyle Jenkins , Richard Kayne , Peter Kosta , Marie Labelle , Richard Larson , Howard Lasnik , Giuseppe Longobardi , John S. Lumsden , Jing Luo , James McGilvray , Ningombam Bupenda Meitei , Partha Mitra , Andrea Moro , Massimo Piattelli-Palmarini , David Poeppel , Luigi Rizzi , Kenneth Safir , Uli Sauerland , Fuzhen Si , Karin Stromswold , Juan Uriagereka , Elly Van Gelderen , Andrew Wedel , Kenneth Wexler , Charles Yang.	Michael A. Arbib , Evan Balaban , Robert Berwick , Thomas G. Bever , Cedric Boeckx , Johan J. Bolhuis , Lisa Cheng , Noam Chomsky , Anna Maria Di Sciullo , Ansgar Endress , Simon E. Fisher , W. Tecumseh Fitch , Angela D. Friederici , Roland Friedrich , Koji Fujita , Alessandra Giorgi , Kleanthes K. Grohmann , Mohamed Guerssel , Heidi Harley , Marc Hauser , Lyle Jenkins , Richard Kayne , Peter Kosta , Marie Labelle , Richard Larson , Howard Lasnik , Giuseppe Longobardi , John S. Lumsden , Jing Luo , James McGilvray , Ningombam Bupenda Meitei , Partha Mitra , Andrea Moro , Massimo Piattelli-Palmarini , David Poeppel , Luigi Rizzi , Kenneth Safir , Uli Sauerland , Fuzhen Si , Karin Stromswold , Juan Uriagereka , Elly Van Gelderen , Andrew Wedel , Kenneth Wexler , Charles Yang.	/m/04jztv	Michael_A._Arbib	0	16	/book/author,/computer/computer_scientist,/influence/influence_node,/people/person
AutoStitch is a proprietary image stitching software tool for creating panoramas. It was developed by Matthew Brown and David G. Lowe of the University of British Columbia.	It was developed by Matthew Brown and David G. Lowe of the University of British Columbia.	/m/04m_g1q	David_G._Lowe	38	51	/education/academic,/influence/influence_node,/people/person
H. T. Kung and Charles E. Leiserson published the first paper describing systolic arrays in 1978; however, the first machine known to have used a similar technique was the Colossus Mark II in 1944.	H. T. Kung and Charles E. Leiserson published the first paper describing systolic arrays in 1978; however, the first machine known to have used a similar technique was the Colossus Mark II in 1944.	/m/04zm68	H._T._Kung	0	10	/education/academic,/people/person
Charles Eric Leiserson is a computer scientist, specializing in the theory of parallel computing and distributed computing, and particularly practical applications thereof; as part of this effort, he developed the Cilk multithreaded language. He invented the fat-tree interconnection network, a hardware-universal interconnection network used in many supercomputers, including the Connection Machine CM5, for which he was network architect. He helped pioneer the development of VLSI theory, including the retiming method of digital optimization with James B. Saxe and systolic arrays with H. T. Kung. He conceived of the notion of cache-oblivious algorithms, which are algorithms that have no tuning parameters for cache size or cache-line length, but nevertheless use cache near-optimally. He developed the Cilk language for multithreaded programming, which uses a provably good work-stealing algorithm for scheduling.	He helped pioneer the development of VLSI theory, including the retiming method of digital optimization with James B. Saxe and systolic arrays with H. T. Kung.	/m/04zm68	H._T._Kung	148	158	/education/academic,/people/person
Leiserson received a B.S. degree in computer science and mathematics from Yale University in 1975, and a Ph.D. degree in computer science from Carnegie Mellon University in 1981, where his advisors were Jon Bentley and H. T. Kung.	degree in computer science and mathematics from Yale University in 1975, and a Ph.D. degree in computer science from Carnegie Mellon University in 1981, where his advisors were Jon Bentley and H. T. Kung.	/m/04zm68	H._T._Kung	193	203	/education/academic,/people/person
One of Traub's PhD students was H. T. Kung, now a chaired professor at Harvard. They created the Kung-Traub algorithm for comparing the expansion of an algebraic function. They showed that computing the first  terms was no harder than multiplying two -th degree polynomials. This problem had been worked on by Isaac Newton who missed a key point.	One of Traub's PhD students was H. T. Kung, now a chaired professor at Harvard.	/m/04zm68	H._T._Kung	32	42	/education/academic,/people/person
The Warp projects were started in 1984 by H. T. Kung at Carnegie Mellon University. The Warp projects yielded research results, publications and advancements in general purpose systolic hardware design, compiler design and systolic software algorithms. There were three distinct machine designs known as the WW-Warp (Wire Wrap Warp), PC-Warp (Printed Circuit Warp), and iWarp (integrated circuit Warp, conveniently also a play on the ‚Äúi‚Äù for Intel).	The Warp projects were started in 1984 by H. T. Kung at Carnegie Mellon University.	/m/04zm68	H._T._Kung	42	52	/education/academic,/people/person
Credit for organizing the backbone about 1983 is commonly attributed to Gene "Spaf" Spafford, although it is also claimed by Mary Ann Horton. Other prominent members of the cabal were Brian Reid, Richard Sexton, Chuq von Rospach, Neil Crellin and Rick Adams.	Other prominent members of the cabal were Brian Reid, Richard Sexton, Chuq von Rospach, Neil Crellin and Rick Adams.	/m/09zrvk	Brian_Reid_(computer_scientist)	42	52	/award/award_winner,/computer/computer_scientist,/people/person
The first well-known public presentation of markup languages in computer text processing was made by William W. Tunnicliffe at a conference in 1967, although he preferred to call it generic coding. It can be seen as a response to the emergence of programs such as RUNOFF that each used their own control notations, often specific to the target typesetting device. In the 1970s, Tunnicliffe led the development of a standard called GenCode for the publishing industry and later was the first chair of the International Organization for Standardization committee that created SGML, the first standard descriptive markup language. Book designer Stanley Rice published speculation along similar lines in 1970. Brian Reid, in his 1980 dissertation at Carnegie Mellon University, developed the theory and a working implementation of descriptive markup in actual use.	Brian Reid, in his 1980 dissertation at Carnegie Mellon University, developed the theory and a working implementation of descriptive markup in actual use.	/m/09zrvk	Brian_Reid_(computer_scientist)	0	10	/award/award_winner,/computer/computer_scientist,/people/person
The first language to make a clean distinction between structure and presentation was Scribe, developed by Brian Reid and described in his doctoral thesis in 1980. Scribe was revolutionary in a number of ways, not least that it introduced the idea of styles separated from the marked up document, and of a grammar controlling the usage of descriptive elements. Scribe influenced the development of Generalized Markup Language (later SGML) and is a direct ancestor to HTML and LaTeX.	The first language to make a clean distinction between structure and presentation was Scribe, developed by Brian Reid and described in his doctoral thesis in 1980.	/m/09zrvk	Brian_Reid_(computer_scientist)	107	117	/award/award_winner,/computer/computer_scientist,/people/person
The alt.* hierarchy is a major class of newsgroups in Usenet, containing all newsgroups whose name begins with "alt.", organized hierarchically. The alt.* hierarchy is not confined to newsgroups of any specific subject or type, although in practice more formally organized groups tend not to occur in alt. The alt.* hierarchy was created by John Gilmore and Brian Reid.	* hierarchy was created by John Gilmore and Brian Reid.	/m/09zrvk	Brian_Reid_(computer_scientist)	44	54	/award/award_winner,/computer/computer_scientist,/people/person
W was originally developed at Stanford University by Paul Asente and Brian Reid for the V operating system. In 1983, Paul Asente and Chris Kent ported the system to UNIX on the VS100, giving a copy to those working at MIT's Laboratory for Computer Science.	W was originally developed at Stanford University by Paul Asente and Brian Reid for the V operating system.	/m/09zrvk	Brian_Reid_(computer_scientist)	69	79	/award/award_winner,/computer/computer_scientist,/people/person
Texinfo is "loosely based on Brian Reid's Scribe and other formatting languages of the time".	Texinfo is "loosely based on Brian Reid's Scribe and other formatting languages of the time".	/m/09zrvk	Brian_Reid_(computer_scientist)	29	39	/award/award_winner,/computer/computer_scientist,/people/person
The newsgroup was created by Gary D. Duzan during the third week of March 1990, four months after the first airing of a regular episode of the program, which was the episode "Simpsons Roasting on an Open Fire" ‚Äì a Christmas special that aired on December 17, 1989. The newsgroup was created before there was a world wide web, which emerged in 1993, so those earliest discussions were held on text-only platforms. According to Chris Turner, a Canadian journalist and writer of the book Planet Simpson, the newsgroup was among the most trafficked newsgroups of the early 1990s. In that period it became a popular community on the Internet. According to Brian Reid, a computer scientist who has been tracking newsgroup traffic since 1985, alt.tv.simpsons was the most popular television newsgroup in May 1994, ahead of a discussion newsgroups about general television newsgroup (rec.arts.tv), Monty Python (alt.fan.monty-python), the Late Show with David Letterman (alt.fan.letterman) and soap operas (rec.arts.tv.soaps). Since there is no official method for measuring newsgroup traffic, the list is considered unofficial.	According to Brian Reid, a computer scientist who has been tracking newsgroup traffic since 1985, alt.tv.simpsons was the most popular television newsgroup in May 1994, ahead of a discussion newsgroups about general television newsgroup (rec.arts.tv), Monty Python (alt.fan.monty-python), the Late Show with David Letterman (alt.fan.letterman) and soap operas (rec.arts.tv.soaps).	/m/09zrvk	Brian_Reid_(computer_scientist)	13	23	/award/award_winner,/computer/computer_scientist,/people/person
When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity." He clarified, years later, that it is blocking the user's freedom that he believes is a crime, not the issue of charging for the software.	When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity.	/m/09zrvk	Brian_Reid_(computer_scientist)	5	15	/award/award_winner,/computer/computer_scientist,/people/person
Bentley received a B.S. in mathematical sciences from Stanford University in 1974, and M.S. and Ph.D in 1976 from the University of North Carolina at Chapel Hill; while a student, he also held internships at the Xerox Palo Alto Research Center and Stanford Linear Accelerator Center. After receiving his Ph.D., he joined the faculty at Carnegie Mellon University as an assistant professor of computer science and mathematics. At CMU, his students included Brian Reid, John Ousterhout, Jeff Eppinger, Joshua Bloch, and James Gosling, and he was one of Charles Leiserson's advisors. Later, Bentley moved to Bell Laboratories.	At CMU, his students included Brian Reid, John Ousterhout, Jeff Eppinger, Joshua Bloch, and James Gosling, and he was one of Charles Leiserson's advisors.	/m/09zrvk	Brian_Reid_(computer_scientist)	30	40	/award/award_winner,/computer/computer_scientist,/people/person
He was also Brian Reid's manager at Google and mentioned in a lawsuit by Reid charging age-discrimination.	He was also Brian Reid's manager at Google and mentioned in a lawsuit by Reid charging age-discrimination.	/m/09zrvk	Brian_Reid_(computer_scientist)	12	22	/award/award_winner,/computer/computer_scientist,/people/person
The first use of a time bomb in software may have been with the Scribe markup language and word processing system, developed by Brian Reid. Reid sold Scribe to a software company called Unilogic, and agreed to insert a set of time-dependent functions (called "time bombs") that would deactivate freely copied versions of the program after a 90-day expiration date. To avoid deactivation, users paid the software company, which then issued a code that defused the internal time bomb feature.	The first use of a time bomb in software may have been with the Scribe markup language and word processing system, developed by Brian Reid.	/m/09zrvk	Brian_Reid_(computer_scientist)	128	138	/award/award_winner,/computer/computer_scientist,/people/person
The USENET Cookbook was an experiment in electronic publishing conducted by Brian Reid in 1985-1987, several years before the Web. Reid distinguishes between electronic printing (the production of individual documents) and electronic publishing (the full process including dissemination).	The USENET Cookbook was an experiment in electronic publishing conducted by Brian Reid in 1985-1987, several years before the Web.	/m/09zrvk	Brian_Reid_(computer_scientist)	76	86	/award/award_winner,/computer/computer_scientist,/people/person
Scribe was designed and developed by Brian Reid of Carnegie Mellon University. It formed the subject of his 1980 doctoral dissertation, for which he received the Association for Computing Machinery's Grace Murray Hopper Award in 1982.	Scribe was designed and developed by Brian Reid of Carnegie Mellon University.	/m/09zrvk	Brian_Reid_(computer_scientist)	37	47	/award/award_winner,/computer/computer_scientist,/people/person
Noted alumni include: Mark Lipshultz, the Phone Guy, Dr. David Anderson, photographer, videographer and science fiction author Robert Betz, former basketball star Vernon Butler, scientist, author, and attorney A. Jamie Cuticchia, Political Activist R. Cecil Dennis, Raheem DeVaughn, LTC. Michael C. Griffin, Elijah Joy, Council Nedd II, computer scientist Brian Reid, William Spencer, Pulitzer laureate Paula Vogel, and Eric Wolfe, songwriter.	Michael C. Griffin, Elijah Joy, Council Nedd II, computer scientist Brian Reid, William Spencer, Pulitzer laureate Paula Vogel, and Eric Wolfe, songwriter.	/m/09zrvk	Brian_Reid_(computer_scientist)	68	78	/award/award_winner,/computer/computer_scientist,/people/person
Brian Reid (1966), innovator of the early internet, including email, routers, firewalls, and the idea of ‚Äúvirtual communities‚Äù; also worked on NASA's Apollo program, the NASDAQ stock exchange computer network, Bell Labs, and was Director of Operations at Google.	Brian Reid (1966), innovator of the early internet, including email, routers, firewalls, and the idea of ‚Äúvirtual communities‚Äù; also worked on NASA's Apollo program, the NASDAQ stock exchange computer network, Bell Labs, and was Director of Operations at Google.	/m/09zrvk	Brian_Reid_(computer_scientist)	0	10	/award/award_winner,/computer/computer_scientist,/people/person
On September 21, 2008, he issued a summary judgment finding for Google in a closely watched age discrimination lawsuit, concluding that former director of operations, Brian Reid, had not supplied to the court sufficient evidence supporting the claims that he was fired on February 2004 because of his age. Reid alleged he was fired because he "didn't fit in with the company's youthful culture."	On September 21, 2008, he issued a summary judgment finding for Google in a closely watched age discrimination lawsuit, concluding that former director of operations, Brian Reid, had not supplied to the court sufficient evidence supporting the claims that he was fired on February 2004 because of his age.	/m/09zrvk	Brian_Reid_(computer_scientist)	167	177	/award/award_winner,/computer/computer_scientist,/people/person
Other faculty members who did research using SUN workstations included David Cheriton, Brian Reid, and John Hennessy.	Other faculty members who did research using SUN workstations included David Cheriton, Brian Reid, and John Hennessy.	/m/09zrvk	Brian_Reid_(computer_scientist)	87	97	/award/award_winner,/computer/computer_scientist,/people/person
Together with Bob Braden, she received the 2006 Postel Award in recognition of her services to the Internet. She is mentioned, along with a brief biography, in RFC 1336, Who's Who in the Internet (1992).	Together with Bob Braden, she received the 2006 Postel Award in recognition of her services to the Internet.	/m/07xdsc	Bob_Braden	14	24	/computer/computer_scientist,/people/person
Following the expiration of the original ARPANET contract with the U.S. federal government, the Internet Society, acting on behalf of the IETF, contracted with the Networking Division of the University of Southern California (USC) Information Sciences Institute (ISI) to assume the editorship and publishing responsibilities under the direction of the IAB. Sandy Ginoza joined USC/ISI in 1999 to work on RFC editing, and Alice Hagens in 2005. Bob Braden took over the role of RFC project lead, while Joyce K. Reynolds continued to be part of the team until October 13, 2006.	Bob Braden took over the role of RFC project lead, while Joyce K. Reynolds continued to be part of the team until October 13, 2006.	/m/07xdsc	Bob_Braden	0	10	/computer/computer_scientist,/people/person
T/TCP (Transactional Transmission Control Protocol) is a variant of the Transmission Control Protocol (TCP). It is an experimental TCP extension for efficient transaction-oriented (request/response) service. It was developed to fill the gap between TCP and UDP, by Bob Braden in 1994. Its definition can be found in RFC 1644 (that obsoletes RFC 1379).	It was developed to fill the gap between TCP and UDP, by Bob Braden in 1994.	/m/07xdsc	Bob_Braden	57	67	/computer/computer_scientist,/people/person
Joyce K. Reynolds of USC's Information Sciences Institute (ISI) served as RFC Editor, together with Bob Braden, from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001. She was IETF User Services Area Director and a member of the Internet Engineering Steering Group (IESG) from 1990 to 1998. She has authored or co-authored many RFCs. In 2006, together with Bob Braden, she received the Internet Society's Postel Award in recognition of her services to the Internet.	Joyce K. Reynolds of USC's Information Sciences Institute (ISI) served as RFC Editor, together with Bob Braden, from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001.	/m/07xdsc	Bob_Braden	100	110	/computer/computer_scientist,/people/person
Joyce K. Reynolds of USC's Information Sciences Institute (ISI) served as RFC Editor, together with Bob Braden, from 1987 to 2006, and also performed the IANA function with Jon Postel until this was transferred to ICANN, and worked with ICANN in this role until 2001. She was IETF User Services Area Director and a member of the Internet Engineering Steering Group (IESG) from 1990 to 1998. She has authored or co-authored many RFCs. In 2006, together with Bob Braden, she received the Internet Society's Postel Award in recognition of her services to the Internet.	In 2006, together with Bob Braden, she received the Internet Society's Postel Award in recognition of her services to the Internet.	/m/07xdsc	Bob_Braden	23	33	/computer/computer_scientist,/people/person
The minimum instruction set of a Universal Turing machine requires approximately the same length description across different formulations, and is small compared to the Kolmogorov complexity of most practical theories. Marcus Hutter has used this consistency to define a "natural" Turing machine of small size as the proper basis for excluding arbitrarily complex instruction sets in the formulation of razors. Describing the program for the universal program as the "hypothesis", and the representation of the evidence as program data, it has been formally proven under ZF that "the sum of the log universal probability of the model plus the log of the probability of the data given the model should be minimized." Interpreting this as minimising the total length of a two-part message encoding model followed by data given model gives us the Minimum Message Length (MML) principle	Marcus Hutter has used this consistency to define a "natural" Turing machine of small size as the proper basis for excluding arbitrarily complex instruction sets in the formulation of razors.	/m/0c1chs	Marcus_Hutter	0	13	/book/author,/computer/computer_scientist,/people/person
Important research topics of his group include universal learning algorithms and universal AI (see G√∂del machine). Contributions include the first theoretically optimal decision makers living in environments obeying arbitrary unknown but computable probabilistic laws, and mathematically sound general problem solvers such as the remarkable asymptotically fastest algorithm for all well-defined problems, by his former postdoc Marcus Hutter. Based on the theoretical results obtained in the early 2000s, Schmidhuber is actively promoting the view that in the new millennium the field of general AI has matured and become a real formal science.	Contributions include the first theoretically optimal decision makers living in environments obeying arbitrary unknown but computable probabilistic laws, and mathematically sound general problem solvers such as the remarkable asymptotically fastest algorithm for all well-defined problems, by his former postdoc Marcus Hutter.	/m/0c1chs	Marcus_Hutter	312	325	/book/author,/computer/computer_scientist,/people/person
The theory is based in philosophical foundations. It is a mathematically formalized Occam's razor. Shorter computable theories have more weight when calculating the probability of the next observation, using all computable theories which perfectly describe previous observations. Marcus Hutter's universal artificial intelligence builds upon this to calculate the expected value of an action.	Marcus Hutter's universal artificial intelligence builds upon this to calculate the expected value of an action.	/m/0c1chs	Marcus_Hutter	0	13	/book/author,/computer/computer_scientist,/people/person
Other major research topics in the group of IDSIA's co-director Juergen Schmidhuber (since 1995) include machine learning algorithms for brain-inspired artificial recurrent neural networks, reinforcement learning, evolutionary algorithms and adaptive robotics, complexity theory, in particular the theory of Kolmogorov complexity, theoretically optimal universal decision makers living in environments obeying arbitrary unknown but computable probabilistic laws, and mathematically sound general problem solvers such as Marcus Hutter's asymptotically fastest algorithm for all well-defined problems.	Other major research topics in the group of IDSIA's co-director Juergen Schmidhuber (since 1995) include machine learning algorithms for brain-inspired artificial recurrent neural networks, reinforcement learning, evolutionary algorithms and adaptive robotics, complexity theory, in particular the theory of Kolmogorov complexity, theoretically optimal universal decision makers living in environments obeying arbitrary unknown but computable probabilistic laws, and mathematically sound general problem solvers such as Marcus Hutter's asymptotically fastest algorithm for all well-defined problems.	/m/0c1chs	Marcus_Hutter	520	533	/book/author,/computer/computer_scientist,/people/person
The Hutter Prize is a cash prize funded by Marcus Hutter which rewards data compression improvements on a specific 100 MB English text file. Specifically, the prize awards 500 euros for each one percent improvement (with 50,000 euros total funding) in the compressed size of the file enwik8, which is the smaller of two files used in the Large Text Compression Benchmark; enwik8 is the first 100,000,000 characters of a specific version of English Wikipedia. The ongoing competition is organized by Hutter, Matt Mahoney, and Jim Bowery.	The Hutter Prize is a cash prize funded by Marcus Hutter which rewards data compression improvements on a specific 100 MB English text file.	/m/0c1chs	Marcus_Hutter	43	56	/book/author,/computer/computer_scientist,/people/person
There has also been spinoff conferences in Melbourne, Australia in 2010, 2011 and 2012. Previous speakers include David Chalmers, Lawrence Krauss, Gregory Benford, Ben Goertzel, Steve Omohundro, Hugo de Garis, Marcus Hutter, Mark Pesce, Stelarc and Randal A. Koene.	Previous speakers include David Chalmers, Lawrence Krauss, Gregory Benford, Ben Goertzel, Steve Omohundro, Hugo de Garis, Marcus Hutter, Mark Pesce, Stelarc and Randal A. Koene.	/m/0c1chs	Marcus_Hutter	122	135	/book/author,/computer/computer_scientist,/people/person
The conference has atracted many speakers over the years including Joscha Bach, John L. Pollock, Nicholas L. Cassimatis, Bill Hibbard, Hugo de Garis, Stan Franklin, Steve Omohundro, Ben Goertzel, Itamar Arel, Eric Baum, Marcus Hutter, John E. Laird, Stephen R. Reed, J√ºrgen Schmidhuber, Richard S. Sutton, Randal A. Koene, Ernst Dickmanns, Peter Norvig, Zhongzhi Shi, Margaret Boden, David Hanson, Angelo Cangelosi, and Nick Bostrom.	The conference has atracted many speakers over the years including Joscha Bach, John L. Pollock, Nicholas L. Cassimatis, Bill Hibbard, Hugo de Garis, Stan Franklin, Steve Omohundro, Ben Goertzel, Itamar Arel, Eric Baum, Marcus Hutter, John E. Laird, Stephen R. Reed, J√ºrgen Schmidhuber, Richard S. Sutton, Randal A. Koene, Ernst Dickmanns, Peter Norvig, Zhongzhi Shi, Margaret Boden, David Hanson, Angelo Cangelosi, and Nick Bostrom.	/m/0c1chs	Marcus_Hutter	220	233	/book/author,/computer/computer_scientist,/people/person
He is currently the Bruce Nelson Professor of Computer Science at Carnegie Mellon University, where his wife, Lenore Blum, and son, Avrim Blum, are also professors of Computer Science.	He is currently the Bruce Nelson Professor of Computer Science at Carnegie Mellon University, where his wife, Lenore Blum, and son, Avrim Blum, are also professors of Computer Science.	/m/03d8pj7	Avrim_Blum	132	142	/education/academic,/people/person
Lenore Blum is married to Manuel Blum and mother of Avrim Blum. All three are MIT alumni and professors of Computer Science at Carnegie Mellon.	Lenore Blum is married to Manuel Blum and mother of Avrim Blum.	/m/03d8pj7	Avrim_Blum	52	62	/education/academic,/people/person
Graphplan is an algorithm for automated planning developed by Avrim Blum and Merrick Furst in 1995. Graphplan takes as input a planning problem expressed in STRIPS and produces, if one is possible, a sequence of operations for reaching a goal state.	Graphplan is an algorithm for automated planning developed by Avrim Blum and Merrick Furst in 1995.	/m/03d8pj7	Avrim_Blum	62	72	/education/academic,/people/person
Co-training is a machine learning algorithm used when there are only small amounts of labeled data and large amounts of unlabeled data. One of its uses is in text mining for search engines. It was introduced by Avrim Blum and Tom Mitchell in 1998.	It was introduced by Avrim Blum and Tom Mitchell in 1998.	/m/03d8pj7	Avrim_Blum	21	31	/education/academic,/people/person
Vempala attended Carnegie Mellon University, where he received his Ph.D. in 1997 under professor Avrim Blum.	Vempala attended Carnegie Mellon University, where he received his Ph.D. in 1997 under professor Avrim Blum.	/m/03d8pj7	Avrim_Blum	97	107	/education/academic,/people/person
In 2000‚Äì2002 Raymond wrote a number of HOWTOs still included in the Linux Documentation Project. His personal archive also lists a number of non-technical and very early non-Linux FAQs. His books, The Cathedral and the Bazaar and The Art of Unix Programming, discuss Unix and Linux history and culture, and user tools for programming and other tasks. In 1998 he received and published a Microsoft document expressing worry about the quality of rival open-source software. This, along with other documents subsequently leaked, became known as the Halloween Documents. Noting that the Jargon File had not been maintained since about 1983, he adopted it in 1990 and currently has a third edition in print. Paul Dourish maintains an archived original version of the Jargon File, because, he says, Raymond's updates "essentially destroyed what held it together."	Paul Dourish maintains an archived original version of the Jargon File, because, he says, Raymond's updates "essentially destroyed what held it together.	/m/0g833w	Paul_Dourish	0	12	/book/author,/computer/computer_scientist,/people/person
People whose work contributes to the critical technical practice agenda include Phil Agre, Paul Dourish, Natalie Jeremijenko, Michael Mateas, Simon Penny, Warren Sack, Garnet Hertz, and Phoebe Sengers.	People whose work contributes to the critical technical practice agenda include Phil Agre, Paul Dourish, Natalie Jeremijenko, Michael Mateas, Simon Penny, Warren Sack, Garnet Hertz, and Phoebe Sengers.	/m/0g833w	Paul_Dourish	91	103	/book/author,/computer/computer_scientist,/people/person
His research collaborators include Paul Dourish, Wanda Pratt, John King, Mark Ackerman, Jonathan Grudin, Gloria Mark, John Yen, etc.	His research collaborators include Paul Dourish, Wanda Pratt, John King, Mark Ackerman, Jonathan Grudin, Gloria Mark, John Yen, etc.	/m/0g833w	Paul_Dourish	35	47	/book/author,/computer/computer_scientist,/people/person
Ream is a textual, screen-based email client developed by Paul Dourish at the Center for Speech Technology Research at the University of Edinburgh. Initially developed in 1986, it was one of the standard email clients for the university and was in use throughout the campus for around ten years. Freely available on the internet, it was ported to a large number of UNIX-based operating systems including OSF/1, BSD 2.10, Unicos, Ultrix, HP-UX, and Dynix, and was made compatible with email infrastructures based on sendmail, MMDF, and PP.	Ream is a textual, screen-based email client developed by Paul Dourish at the Center for Speech Technology Research at the University of Edinburgh.	/m/0g833w	Paul_Dourish	58	70	/book/author,/computer/computer_scientist,/people/person
Her book, "Divining a Digital Future: Mess and Mythology in Ubiquitous Computing," written in collaboration with Paul Dourish, is an exploration of the social and cultural aspects of ubiquitous computing, with a particular focus on the disciplinary and methodological issues that have shaped the ubiquitous computing research agenda. The book was published by MIT Press in 2011.	Her book, "Divining a Digital Future: Mess and Mythology in Ubiquitous Computing," written in collaboration with Paul Dourish, is an exploration of the social and cultural aspects of ubiquitous computing, with a particular focus on the disciplinary and methodological issues that have shaped the ubiquitous computing research agenda.	/m/0g833w	Paul_Dourish	113	125	/book/author,/computer/computer_scientist,/people/person
TCP Vegas is a TCP congestion avoidance algorithm that emphasizes packet delay, rather than packet loss, as a signal to help determine the rate at which to send packets. It was developed at the University of Arizona by Lawrence Brakmo and Larry L. Peterson.	It was developed at the University of Arizona by Lawrence Brakmo and Larry L. Peterson.	/m/076y90w	Larry_L._Peterson	69	86	/people/person
PlanetLab is a group of computers available as a testbed for computer networking and distributed systems research. It was established in 2002 by Prof. Larry L. Peterson, and as of June 2010 was composed of 1090 nodes at 507 sites worldwide. Each research project has a "slice", or virtual machine access to a subset of the nodes.	It was established in 2002 by Prof. Larry L. Peterson, and as of June 2010 was composed of 1090 nodes at 507 sites worldwide.	/m/076y90w	Larry_L._Peterson	36	53	/people/person
Lawrence Brakmo is currently a member of technical staff at Google. Previously Brakmo was a researcher and project manager at NTT DoCoMo USA Labs. Before that he was affiliated with the Western Research Lab of Digital Equipment Corporation/Compaq/Hewlett-Packard. Brakmo received his Ph.D. in Computer Science from The University of Arizona, where he worked on computer systems and computer networks research that included x-Sim and TCP Vegas. His adviser was Larry L. Peterson.	His adviser was Larry L. Peterson.	/m/076y90w	Larry_L._Peterson	16	33	/people/person
The research paper by Bickle et al. concluded that women tended to apply to competitive departments with low rates of admission even among qualified applicants (such as in the English Department), whereas men tended to apply to less-competitive departments with high rates of admission among the qualified applicants (such as in engineering and chemistry). The conditions under which the admissions' frequency data from specific departments constitute a proper defense against charges of discrimination are formulated in the book Causality by Pearl.	The conditions under which the admissions' frequency data from specific departments constitute a proper defense against charges of discrimination are formulated in the book Causality by Pearl.	/m/033w0f	Judea_Pearl	186	191	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl described best-first search as estimating the promise of node n by a "heuristic evaluation function  which, in general, may depend on the description of n, the description of the goal, the information gathered by the search up to that point, and most important, on any extra knowledge about the problem domain."	Judea Pearl described best-first search as estimating the promise of node n by a "heuristic evaluation function  which, in general, may depend on the description of n, the description of the goal, the information gathered by the search up to that point, and most important, on any extra knowledge about the problem domain.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Allen Newell and Herbert A. Simon who used what John McCarthy calls an "approximation" in 1958 wrote that alpha‚Äìbeta "appears to have been reinvented a number of times". Arthur Samuel had an early version and Richards, Hart, Levine and/or Edwards found alpha‚Äìbeta independently in the United States. McCarthy proposed similar ideas during the Dartmouth Conference in 1956 and suggested it to a group of his students including Alan Kotok at MIT in 1961. Alexander Brudno independently discovered the alpha‚Äìbeta algorithm, publishing his results in 1963. Donald Knuth and Ronald W. Moore refined the algorithm in 1975 and Judea Pearl proved its optimality in 1982.	Donald Knuth and Ronald W. Moore refined the algorithm in 1975 and Judea Pearl proved its optimality in 1982.	/m/033w0f	Judea_Pearl	67	78	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Daniel Pearl was born in Princeton, New Jersey, and grew up in the upscale Encino district of Los Angeles, California, where he attended Portola Middle School and Birmingham High School. His father, Judea Pearl, is currently a professor of Computer Science and Statistics, director of the Cognitive Systems Laboratory at UCLA, and a Turing Award recipient. His mother Ruth is of Iraqi Jewish descent. The history of the family and its connections to Israel are described by Judea Pearl in the LA Times article, "Roots in the Holy Land".	His father, Judea Pearl, is currently a professor of Computer Science and Statistics, director of the Cognitive Systems Laboratory at UCLA, and a Turing Award recipient.	/m/033w0f	Judea_Pearl	12	23	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Daniel Pearl was born in Princeton, New Jersey, and grew up in the upscale Encino district of Los Angeles, California, where he attended Portola Middle School and Birmingham High School. His father, Judea Pearl, is currently a professor of Computer Science and Statistics, director of the Cognitive Systems Laboratory at UCLA, and a Turing Award recipient. His mother Ruth is of Iraqi Jewish descent. The history of the family and its connections to Israel are described by Judea Pearl in the LA Times article, "Roots in the Holy Land".	The history of the family and its connections to Israel are described by Judea Pearl in the LA Times article, "Roots in the Holy Land".	/m/033w0f	Judea_Pearl	73	84	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The term "Bayesian networks" was coined by Judea Pearl in 1985 to emphasize three aspects:	The term "Bayesian networks" was coined by Judea Pearl in 1985 to emphasize three aspects:	/m/033w0f	Judea_Pearl	43	54	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl (1988a, chapter 9; 1988b and 1990) has argued that it is misleading to interpret belief functions as representing either ‚Äúprobabilities of an event,‚Äù or ‚Äúthe confidence one has in the probabilities assigned to various outcomes,‚Äù or ‚Äúdegrees of belief (or confidence, or trust) in a proposition,‚Äù or ‚Äúdegree of ignorance in a situation.‚Äù Instead, belief functions represent the probability that a given proposition is provable from a set of other propositions, to which probabilities are assigned. Confusing probabilities of truth with probabilities of provability may lead to counterintuitive results in reasoning tasks such as (1) representing incomplete knowledge, (2) belief-updating and (3) evidence pooling. He further demonstrated that, if partial knowledge is encoded and updated by belief function methods, the resulting beliefs cannot serve as a basis for rational decisions.	Judea Pearl (1988a, chapter 9; 1988b and 1990) has argued that it is misleading to interpret belief functions as representing either ‚Äúprobabilities of an event,‚Äù or ‚Äúthe confidence one has in the probabilities assigned to various outcomes,‚Äù or ‚Äúdegrees of belief (or confidence, or trust) in a proposition,‚Äù or ‚Äúdegree of ignorance in a situation.‚Äù Instead, belief functions represent the probability that a given proposition is provable from a set of other propositions, to which probabilities are assigned.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Daniel Pearl Foundation is a foundation based in the United States. The foundation was formed by his parents Ruth and Judea Pearl after musician and Wall Street Journal reporter Daniel Pearl was kidnapped and murdered by terrorists in 2002. The organization's mission is to promote cross-cultural understanding through journalism, music, and innovative communications.	The foundation was formed by his parents Ruth and Judea Pearl after musician and Wall Street Journal reporter Daniel Pearl was kidnapped and murdered by terrorists in 2002.	/m/033w0f	Judea_Pearl	50	61	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Computational learning theory has led to several practical algorithms. For example, PAC theory inspired boosting, VC theory led to support vector machines, and Bayesian inference led to belief networks (by Judea Pearl).	For example, PAC theory inspired boosting, VC theory led to support vector machines, and Bayesian inference led to belief networks (by Judea Pearl).	/m/033w0f	Judea_Pearl	135	146	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In mathematical statistics, Wold contributed the Cram√©r‚ÄìWold theorem characterizing the normal distribution and developed the Wold decomposition in time series analysis. In microeconomics, Wold advanced utility theory and the theory of consumer demand. In multivariate statistics, Wold contributed the methods of partial least squares (PLS) and graphical models. Wold's work on causal inference from observational studies was decades ahead of its time, according to Judea Pearl.	Wold's work on causal inference from observational studies was decades ahead of its time, according to Judea Pearl.	/m/033w0f	Judea_Pearl	103	114	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the years 1945-65, Wold proposed and elaborated on his "recursive causal chain" model, which was more appropriate for many applications, according to Wold: For such "recursive causal chain" models, the least squares method was computationally efficient and enjoyed superior theoretical properties, which it lacked for general time-series models. Wold's writings on causality and recursive-chain models have been recognized as scientific inventions by recent work on causality and graphical models in statistics, especially by Judea Pearl and Nanny Wermuth.	Wold's writings on causality and recursive-chain models have been recognized as scientific inventions by recent work on causality and graphical models in statistics, especially by Judea Pearl and Nanny Wermuth.	/m/033w0f	Judea_Pearl	180	191	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The tight connection between causal and counterfactual relations has prompted Judea Pearl (2000) to reject both the possible world semantics and those of Ramsey and Ginsberg. The latter was rejected because causal information cannot be encoded as a set of beliefs, and the former because it is difficult to fine-tune Lewis's similarity measure to match causal intuition. Pearl defines counterfactuals directly in terms of a "structural equation model" -- a set of equations, in which each variable is assigned a value that is an explicit function of other variables in the system. Given such a model, the sentence "Y would be y had X been x" (formally, X = x > Y = y ) is defined as the assertion: If we replace the equation currently determining X with a constant X = x, and solve the set of equations for variable Y, the solution obtained will be Y = y. This definition has been shown to be compatible with the axioms of possible world semantics and forms the basis for causal inference in the natural and social sciences, since each structural equation in those domains corresponds to a familiar causal mechanism that can be meaningfully reasoned about by investigators.	The tight connection between causal and counterfactual relations has prompted Judea Pearl (2000) to reject both the possible world semantics and those of Ramsey and Ginsberg.	/m/033w0f	Judea_Pearl	78	89	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The algorithm was first proposed by Judea Pearl in 1982, who formulated this algorithm on trees, and was later extended to polytrees. It has since been shown to be a useful approximate algorithm on general graphs.	The algorithm was first proposed by Judea Pearl in 1982, who formulated this algorithm on trees, and was later extended to polytrees.	/m/033w0f	Judea_Pearl	36	47	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The Markov blanket of a node contains all the variables that shield the node from the rest of the network. This means that the Markov blanket of a node is the only knowledge needed to predict the behavior of that node. The term was coined by Pearl in 1988.	The term was coined by Pearl in 1988.	/m/033w0f	Judea_Pearl	23	28	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Darwiche and Pearl formulated the following postulates for iterated revision.	Darwiche and Pearl formulated the following postulates for iterated revision.	/m/033w0f	Judea_Pearl	13	18	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Chapman University's Holocaust education programs have seen increasing prominence, and the Rodgers Center for Holocaust Education was founded in February 2000 with the mission of "preparing young people to become witnesses to the future". It sponsors an annual Holocaust remembrance writing competition for area public school students, and a regular lecture series, which has included Elie Wiesel and Judea Pearl, father of slain journalist Daniel Pearl. In addition, the Samueli Holocaust Memorial Library, funded by Henry Samueli, is located on the fourth floor of the University's Leatherby Libraries, and provides a dedicated space where scholars and visitors may learn from survivors, visual testimonies and printed resources.	It sponsors an annual Holocaust remembrance writing competition for area public school students, and a regular lecture series, which has included Elie Wiesel and Judea Pearl, father of slain journalist Daniel Pearl.	/m/033w0f	Judea_Pearl	162	173	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Formal definitions of instrumental variables, using counterfactuals and graphical criteria, are given by Pearl (2000). Notions of causality in econometrics, and their relationship with instrumental variables and other methods, are discussed by Heckman (2008).	Formal definitions of instrumental variables, using counterfactuals and graphical criteria, are given by Pearl (2000).	/m/033w0f	Judea_Pearl	105	110	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Structural equation modelling (SEM) is a statistical technique for testing and estimating causal relations using a combination of statistical data and qualitative causal assumptions. This definition of SEM was articulated by the geneticist Sewall Wright (1921), the economist Trygve Haavelmo (1943) and the cognitive scientist Herbert A. Simon (1953), and formally defined by Judea Pearl (2000) using a calculus of counterfactuals.	This definition of SEM was articulated by the geneticist Sewall Wright (1921), the economist Trygve Haavelmo (1943) and the cognitive scientist Herbert A. Simon (1953), and formally defined by Judea Pearl (2000) using a calculus of counterfactuals.	/m/033w0f	Judea_Pearl	193	204	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Negascout takes after SCOUT, invented by Judea Pearl in 1980, which was the first algorithm to outperform alpha-beta and to be proven asymptotically optimal. Null windows, with Œ≤=Œ±+1 in a negamax setting, were invented independently by J.P. Fishburn and used in an algorithm similar to SCOUT in an appendix to his Ph.D. thesis, in a parallel alpha-beta algorithm, and on the last subtree of a search tree root node	Negascout takes after SCOUT, invented by Judea Pearl in 1980, which was the first algorithm to outperform alpha-beta and to be proven asymptotically optimal.	/m/033w0f	Judea_Pearl	41	52	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The name MTD(f) stands for Memory-enhanced Test Driver, referencing Judea Pearl's Test algorithm, which performs Zero Window Searches. MTD(f) is described in depth in Aske Plaat's 1996 PhD thesis.	The name MTD(f) stands for Memory-enhanced Test Driver, referencing Judea Pearl's Test algorithm, which performs Zero Window Searches.	/m/033w0f	Judea_Pearl	68	79	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Three research awards are given at each IJCAI conference. The Computers & Thought Award is given to a relatively young (less than 35 years) researcher having already made a significant contribution to the field. The Donald E. Walker Distinguished Service Award is given to someone who has been doing a lot of the grunt work the last years. The IJCAI Award for Research Excellence is given to someone relatively old who had made a significant impact on the field. Previous recipients of the latter award include Alan Bundy, John McCarthy, Marvin Minsky, Allen Newell, Ray Reiter, and Judea Pearl. Additionally, IJCAI presents one or more Best Paper Awards  at the conference to recognize the highest quality papers.	Previous recipients of the latter award include Alan Bundy, John McCarthy, Marvin Minsky, Allen Newell, Ray Reiter, and Judea Pearl.	/m/033w0f	Judea_Pearl	120	131	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A new paradigm called "intelligent agents" became widely accepted during the 90s. Although earlier researchers had proposed modular "divide and conquer" approaches to AI, the intelligent agent did not reach its modern form until Judea Pearl, Allen Newell and others brought concepts from decision theory and economics into the study of AI. When the economist's definition of a rational agent was married to computer science's definition of an object or module, the intelligent agent paradigm was complete.	Although earlier researchers had proposed modular "divide and conquer" approaches to AI, the intelligent agent did not reach its modern form until Judea Pearl, Allen Newell and others brought concepts from decision theory and economics into the study of AI.	/m/033w0f	Judea_Pearl	147	158	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl's highly influential 1988 book brought probability and decision theory into AI. Among the many new tools in use were Bayesian networks, hidden Markov models, information theory, stochastic modeling and classical optimization. Precise mathematical descriptions were also developed for "computational intelligence" paradigms like neural networks and evolutionary algorithms.	Judea Pearl's highly influential 1988 book brought probability and decision theory into AI.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Each year the Jewish Book Council sponsors a conference for all Jewish Book NETWORK members and their lay leaders in conjunction with the annual BookExpo America. This conference begins the new season of book festival planning. In addition to workshops and networking among the NETWORK members, the annual conference includes a program called Meet the Author. Through this event, authors are invited to speak to the members of the Jewish Book NETWORK in the hopes of touring and visiting with the Jewish book programs that are represented. Among the authors who were sponsored in the past are Warren Bass, Rich Cohen, Nathan Englander, Samuel G. Freedman, Jonathan Safran Foer, Myla Goldberg, Ari L. Goldman, Rabbi Irving Greenberg, Dara Horn, David Horowitz, Dr. Eric Kandel, Nicole Krauss, Rabbi Harold Kushner, Aaron Lansky, Daniel Libeskind, Tova Mirvis, Dr. Deborah Dash Moore, Judea Pearl, Naomi Ragen, Nessa Rapoport, Shulamit Reinharz, Steven V. Roberts, Jonathan Rosen, Ambassador Dennis Ross, and Dr. Jonathan Sarna.	Among the authors who were sponsored in the past are Warren Bass, Rich Cohen, Nathan Englander, Samuel G. Freedman, Jonathan Safran Foer, Myla Goldberg, Ari L. Goldman, Rabbi Irving Greenberg, Dara Horn, David Horowitz, Dr. Eric Kandel, Nicole Krauss, Rabbi Harold Kushner, Aaron Lansky, Daniel Libeskind, Tova Mirvis, Dr. Deborah Dash Moore, Judea Pearl, Naomi Ragen, Nessa Rapoport, Shulamit Reinharz, Steven V. Roberts, Jonathan Rosen, Ambassador Dennis Ross, and Dr. Jonathan Sarna.	/m/033w0f	Judea_Pearl	343	354	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl (1988) used a variant of this example to demonstrate that belief updates must depend not merely on the facts observed but also on the experiment (i.e., query) that led to those facts.	Judea Pearl (1988) used a variant of this example to demonstrate that belief updates must depend not merely on the facts observed but also on the experiment (i.e., query) that led to those facts.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the view of Pearl (2000), the Rubin Causal Model (RCM) is subsumed by the Structural Equation Model (SEM) used in econometrics and the social sciences, in its extended nonparametric form. That view, which has long been argued by Heckman (2005) is presented formally in Pearl (2000). The key connection between the RCM and SEM rests on interpreting the "potential outcome" variable Yx(u) to be the solution for variable Y in a modified structural model, in which the external intervention X=x is emulated by replacing the equation that determines X by the constant equation X=x. The variable u, which in the RCM stands for the identity of each experimental unit (e.g., a patient or an agricultural lot,) is represented in the SEM formulation by a vector of exogeneous variables (usually unobserved) that characterize that unit. With this interpretation, every theorem in RCM can be shown to be a theorem in SEM and vice versa. This interpretation has led to a complete axiomatization of RCM and, based on the derivations of Shpitser-Pearl (2006), a complete solution to the identification of causal effects, using graphs. Complete solution means that, for any subset X of variables and a set A of causal assumptions encoded in a graph G, it is possible to determine algorithmically whether the causal effect P(Yx = y) can be estimated consistently from non-experimental data and, if so, what form the estimand of P(Yx = y) should have. Using that estimand, it is possible then to estimate, from observational study, the average causal effect over the population:	In the view of Pearl (2000), the Rubin Causal Model (RCM) is subsumed by the Structural Equation Model (SEM) used in econometrics and the social sciences, in its extended nonparametric form.	/m/033w0f	Judea_Pearl	15	20	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the view of Pearl (2000), the Rubin Causal Model (RCM) is subsumed by the Structural Equation Model (SEM) used in econometrics and the social sciences, in its extended nonparametric form. That view, which has long been argued by Heckman (2005) is presented formally in Pearl (2000). The key connection between the RCM and SEM rests on interpreting the "potential outcome" variable Yx(u) to be the solution for variable Y in a modified structural model, in which the external intervention X=x is emulated by replacing the equation that determines X by the constant equation X=x. The variable u, which in the RCM stands for the identity of each experimental unit (e.g., a patient or an agricultural lot,) is represented in the SEM formulation by a vector of exogeneous variables (usually unobserved) that characterize that unit. With this interpretation, every theorem in RCM can be shown to be a theorem in SEM and vice versa. This interpretation has led to a complete axiomatization of RCM and, based on the derivations of Shpitser-Pearl (2006), a complete solution to the identification of causal effects, using graphs. Complete solution means that, for any subset X of variables and a set A of causal assumptions encoded in a graph G, it is possible to determine algorithmically whether the causal effect P(Yx = y) can be estimated consistently from non-experimental data and, if so, what form the estimand of P(Yx = y) should have. Using that estimand, it is possible then to estimate, from observational study, the average causal effect over the population:	That view, which has long been argued by Heckman (2005) is presented formally in Pearl (2000).	/m/033w0f	Judea_Pearl	81	86	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In the view of Pearl (2000), the Rubin Causal Model (RCM) is subsumed by the Structural Equation Model (SEM) used in econometrics and the social sciences, in its extended nonparametric form. That view, which has long been argued by Heckman (2005) is presented formally in Pearl (2000). The key connection between the RCM and SEM rests on interpreting the "potential outcome" variable Yx(u) to be the solution for variable Y in a modified structural model, in which the external intervention X=x is emulated by replacing the equation that determines X by the constant equation X=x. The variable u, which in the RCM stands for the identity of each experimental unit (e.g., a patient or an agricultural lot,) is represented in the SEM formulation by a vector of exogeneous variables (usually unobserved) that characterize that unit. With this interpretation, every theorem in RCM can be shown to be a theorem in SEM and vice versa. This interpretation has led to a complete axiomatization of RCM and, based on the derivations of Shpitser-Pearl (2006), a complete solution to the identification of causal effects, using graphs. Complete solution means that, for any subset X of variables and a set A of causal assumptions encoded in a graph G, it is possible to determine algorithmically whether the causal effect P(Yx = y) can be estimated consistently from non-experimental data and, if so, what form the estimand of P(Yx = y) should have. Using that estimand, it is possible then to estimate, from observational study, the average causal effect over the population:	This interpretation has led to a complete axiomatization of RCM and, based on the derivations of Shpitser-Pearl (2006), a complete solution to the identification of causal effects, using graphs.	/m/033w0f	Judea_Pearl	106	111	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl, Rodney Brooks	Judea Pearl, Rodney Brooks	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl defines a causal model as an ordered triple , where U is a set of exogenous variables whose values are determined by factors outside the model; V is a set of endogenous variables whose values are determined by factors within the model; and E is a set of structural equations that express the value of each endogenous variable as a function of the values of the other variables in U and V.	Judea Pearl defines a causal model as an ordered triple , where U is a set of exogenous variables whose values are determined by factors outside the model; V is a set of endogenous variables whose values are determined by factors within the model; and E is a set of structural equations that express the value of each endogenous variable as a function of the values of the other variables in U and V.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl (1988 ¬ß3.2.4) indicates that an expression of this type can be exact in the case of a decomposable model, that is, a probability distribution that admits a graph structure whose cliques form a tree. In such cases, the numerator contains the product of the intra-clique joint distributions and the denominator contains the product of the clique intersection distributions.	Judea Pearl (1988 ¬ß3.2.4) indicates that an expression of this type can be exact in the case of a decomposable model, that is, a probability distribution that admits a graph structure whose cliques form a tree.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Pearl is a member of the honorary board of the Daniel Pearl Foundation which was founded by Daniel Pearl's parents, Ruth and Judea Pearl. Honorary board members include international correspondent Christiane Amanpour; former American President Bill Clinton; Pakistani philanthropist Abdul Sattar Edhi; president of Stanford University John L. Hennessy; founding Nightline anchorman Ted Koppel, Queen Noor of Jordan; Palestinian professor and president of Al-Quds University Sari Nusseibeh; violinist Itzhak Perlman; Nobel Peace Prize winning author Elie Wiesel, and others.	Pearl is a member of the honorary board of the Daniel Pearl Foundation which was founded by Daniel Pearl's parents, Ruth and Judea Pearl.	/m/033w0f	Judea_Pearl	125	136	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
SSS* is based on the notion of solution trees. Informally, a solution tree can be formed from any arbitrary game tree by pruning the number of branches at each MAX node to one. Such a tree represents a complete strategy for MAX, since it specifies exactly one MAX action for every possible sequence of moves might be made by the opponent. Given a game tree, SSS* searches through the space of partial solution trees, gradually analyzing larger and larger subtrees, eventually producing a single solution tree with the same root and Minimax value as the original game tree. SSS* never examines a node that alpha-beta pruning would prune, and may prune some branches that alpha-beta would not. Stockman speculated that SSS* may therefore be a better general algorithm than alpha-beta. However, Igor Roizen and Judea Pearl have shown that the savings in the number of positions that SSS* evaluates relative to alpha/beta is limited and generally not enough to compensate for the increase in other resources (e.g., the storing and sorting of a list of nodes made necessary by the best-first nature of the algorithm). However, Aske Plaat, Jonathan Schaeffer, Wim Pijls and Arie de Bruin have shown that a sequence of null-window alpha-beta calls is equivalent to SSS* (i.e., it expands the same nodes in the same order) when alpha-beta is used with a transposition table, as is the case in all game-playing programs for chess, checkers, etc. Now the storing and sorting of the OPEN list were no longer necessary. This allowed the implementation of (an algorithm equivalent to) SSS* in tournament quality game-playing programs. Experiments showed that it did indeed perform better than Alpha-Beta in practice, but that it did not beat NegaScout.	However, Igor Roizen and Judea Pearl have shown that the savings in the number of positions that SSS* evaluates relative to alpha/beta is limited and generally not enough to compensate for the increase in other resources (e.g., the storing and sorting of a list of nodes made necessary by the best-first nature of the algorithm).	/m/033w0f	Judea_Pearl	9	20	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
SSS* is based on the notion of solution trees. Informally, a solution tree can be formed from any arbitrary game tree by pruning the number of branches at each MAX node to one. Such a tree represents a complete strategy for MAX, since it specifies exactly one MAX action for every possible sequence of moves might be made by the opponent. Given a game tree, SSS* searches through the space of partial solution trees, gradually analyzing larger and larger subtrees, eventually producing a single solution tree with the same root and Minimax value as the original game tree. SSS* never examines a node that alpha-beta pruning would prune, and may prune some branches that alpha-beta would not. Stockman speculated that SSS* may therefore be a better general algorithm than alpha-beta. However, Igor Roizen and Judea Pearl have shown that the savings in the number of positions that SSS* evaluates relative to alpha/beta is limited and generally not enough to compensate for the increase in other resources (e.g., the storing and sorting of a list of nodes made necessary by the best-first nature of the algorithm). However, Aske Plaat, Jonathan Schaeffer, Wim Pijls and Arie de Bruin have shown that a sequence of null-window alpha-beta calls is equivalent to SSS* (i.e., it expands the same nodes in the same order) when alpha-beta is used with a transposition table, as is the case in all game-playing programs for chess, checkers, etc. Now the storing and sorting of the OPEN list were no longer necessary. This allowed the implementation of (an algorithm equivalent to) SSS* in tournament quality game-playing programs. Experiments showed that it did indeed perform better than Alpha-Beta in practice, but that it did not beat NegaScout.	However, Igor Roizen and Judea Pearl have shown that the savings in the number of positions that SSS* evaluates relative to alpha/beta is limited and generally not enough to compensate for the increase in other resources (e.g., the storing and sorting of a list of nodes made necessary by the best-first nature of the algorithm).	/m/033w0f	Judea_Pearl	25	36	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Past JLI Courses have been endorsed by prominent scholars, Jewish and world leaders, authors, professional athletes, and celebrities, including: Simon Wiesenthal, Alan Dershowitz, Jack Wertheimer, Paula Abdul, Mayim Bialik, PhD, Rabbi Dr. Abraham J. Twerski, Michael E. Gerber, Dmitriy Salita, Alan Veingrad, George Pfeifer, Jonathan Sarna, Natan Sharansky, Sir Martin Gilbert, Bernie Siegel, MD, Dennis Prager, Ambassador Dan Gillerman, Elyakim Rubinstein, Tal Ben-Shahar, PhD, Professor Judea Pearl (Father of Daniel Pearl), Nathan Lewin, Dr. Celso Lafer, Professor Roald Hoffman, Robert Biswas-Diener, PhD.	Past JLI Courses have been endorsed by prominent scholars, Jewish and world leaders, authors, professional athletes, and celebrities, including: Simon Wiesenthal, Alan Dershowitz, Jack Wertheimer, Paula Abdul, Mayim Bialik, PhD, Rabbi Dr. Abraham J. Twerski, Michael E. Gerber, Dmitriy Salita, Alan Veingrad, George Pfeifer, Jonathan Sarna, Natan Sharansky, Sir Martin Gilbert, Bernie Siegel, MD, Dennis Prager, Ambassador Dan Gillerman, Elyakim Rubinstein, Tal Ben-Shahar, PhD, Professor Judea Pearl (Father of Daniel Pearl), Nathan Lewin, Dr. Celso Lafer, Professor Roald Hoffman, Robert Biswas-Diener, PhD.	/m/033w0f	Judea_Pearl	489	500	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
General concerns with matching have also been raised by Judea Pearl, who has argued that hidden bias may actually increase because matching on observed variables may unleash bias due to dormant unobserved confounders. Similarly, Pearl has argued that bias reduction can only be assured (asymptotically) by modeling the qualitative causal relationships between treatment, outcome, observed and unobserved covariates. Confounding occurs when the experimental controls do not allow the experimenter to reasonably eliminate plausible alternative explanations for an observed relationship between independent and dependent variables.	General concerns with matching have also been raised by Judea Pearl, who has argued that hidden bias may actually increase because matching on observed variables may unleash bias due to dormant unobserved confounders.	/m/033w0f	Judea_Pearl	56	67	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Daniel Variations was commissioned by Daniel's father, Judea Pearl and the Daniel Pearl Foundation, along with the Barbican Centre, where it received its premiere in 2006 as part of the composer's 70th birthday retrospective.	Daniel Variations was commissioned by Daniel's father, Judea Pearl and the Daniel Pearl Foundation, along with the Barbican Centre, where it received its premiere in 2006 as part of the composer's 70th birthday retrospective.	/m/033w0f	Judea_Pearl	55	66	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Judea Pearl, developer of Bayesian networks, says Gopnik was one of the first psychologists to note that the mathematical models also resemble how children learn. Gopnik's work at Berkeley's Child Study Center seeks to develop mathematical models of how children learn. These models could be used to develop better algorithms for artificial intelligence.	Judea Pearl, developer of Bayesian networks, says Gopnik was one of the first psychologists to note that the mathematical models also resemble how children learn.	/m/033w0f	Judea_Pearl	0	11	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In 2007, President George W. Bush and Laura Bush invited Ruth and Judea Pearl, parents of slain Wall Street Journal correspondent Daniel Pearl, to light the menorah that once belonged to Daniel's great grandparents, Chaim and Rosa Pearl, who brought it with them when they moved from Poland to Israel in 1924 to establish the town of Bnei Brak.	In 2007, President George W. Bush and Laura Bush invited Ruth and Judea Pearl, parents of slain Wall Street Journal correspondent Daniel Pearl, to light the menorah that once belonged to Daniel's great grandparents, Chaim and Rosa Pearl, who brought it with them when they moved from Poland to Israel in 1924 to establish the town of Bnei Brak.	/m/033w0f	Judea_Pearl	66	77	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In Los Angeles about 1000 demonstrators were protesting in front of the Turkish Consulate on 1 June in support of Israel. A Jewish high school student was seen walking through a crowd of anti-Israeli protesters alone, carrying a large Israeli flag. Police officers feared for his safety, and escorted him to protect him from potential attacks. On 6 June, demonstrators rallied to show solidarity with Israel at the Israeli consulate in Los Angeles. Notable attendees included Governor Arnold Schwarzenegger, Republican gubernatorial candidate Steve Poizner, actor Jon Voight, Republican Senate contender Chuck DeVore, Representative Brad Sherman and Rabbi Marvin Hier of the Simon Wiesenthal Center, Los Angeles City Controller Wendy Greuel, City Council members Paul Koretz and Janice Hahn, Judea Pearl, and David Pine of Americans for Peace Now. Several Christian groups were also represented. In New York City, a number of pro-Israel Jews gathered to show their support for Israel. While in Baltimore a pro-Israel rally, organized by the Baltimore Zionist District sough to raise awareness of what supporters called an act of self-defense by Israel against Hamas. As many as 600 people gathered on 6 June at the Torch of Friendship in downtown Miami's Bayfront Park. North Miami Beach City Council member Frantz Pierre led the crowd in a chant of "Peace, peace, peace." Jewish and Christian religious leaders were present. Mohammad S. Shakir, a Muslim and director of the Asian American Advisory Board in the Miami-Dade County Office of Community Advocacy, made a speech.	Notable attendees included Governor Arnold Schwarzenegger, Republican gubernatorial candidate Steve Poizner, actor Jon Voight, Republican Senate contender Chuck DeVore, Representative Brad Sherman and Rabbi Marvin Hier of the Simon Wiesenthal Center, Los Angeles City Controller Wendy Greuel, City Council members Paul Koretz and Janice Hahn, Judea Pearl, and David Pine of Americans for Peace Now.	/m/033w0f	Judea_Pearl	343	354	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In superconductivity, a Pearl vortex is a vortex of supercurrent in a thin film of type-II superconductor, first described in 1964 by Judea Pearl. A Pearl vortex is similar to Abrikosov vortex except for its magnetic field profile which, due to the dominant air-metal interface, diverges sharply as 1/ at short distances from the center, and decays slowly, like 1/ at long distances. Abrikosov's vortices, in comparison, have very short range interaction and diverge as  near the center.	In superconductivity, a Pearl vortex is a vortex of supercurrent in a thin film of type-II superconductor, first described in 1964 by Judea Pearl.	/m/033w0f	Judea_Pearl	134	145	/award/award_winner,/book/author,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
The treap was first described by Cecilia R. Aragon and Raimund Seidel in 1989; its name is a portmanteau of tree and heap. It is a Cartesian tree in which each key is given a (randomly chosen) numeric priority. As with any binary search tree, the inorder traversal order of the nodes is the same as the sorted order of the keys. The structure of the tree is determined by the requirement that it be heap-ordered: that is, the priority number for any non-leaf node must be greater than or equal to the priority of its children. Thus, as with Cartesian trees more generally, the root node is the maximum-priority node, and its left and right subtrees are formed in the same manner from the subsequences of the sorted order to the left and right of that node.	The treap was first described by Cecilia R. Aragon and Raimund Seidel in 1989; its name is a portmanteau of tree and heap.	/m/02wb4v_	Cecilia_R._Aragon	33	50	/book/author,/computer/computer_scientist,/education/academic,/people/person
Seidel invented backwards analysis of randomized algorithms and used it to analyze a simple linear programming algorithm that runs in linear time for problems of bounded dimension. With his student Cecilia R. Aragon in 1989 he devised the treap data structure, and he is also known for the Kirkpatrick‚ÄìSeidel algorithm for computing two-dimensional convex hulls.	With his student Cecilia R. Aragon in 1989 he devised the treap data structure, and he is also known for the Kirkpatrick‚ÄìSeidel algorithm for computing two-dimensional convex hulls.	/m/02wb4v_	Cecilia_R._Aragon	17	34	/book/author,/computer/computer_scientist,/education/academic,/people/person
A simple but important optimization of Boyer-Moore was put forth by Galil in 1979. As opposed to shifting, the Galil rule deals with speeding up the actual comparisons done at each alignment by skipping sections that are known to match. Suppose that at an alignment k1, P is compared with T down to character c of T. Then if P is shifted to k2 such that its left end is between c and k1, in the next comparison phase a prefix of P must match the substring T. Thus if the comparisons get down to position k1 of T, an occurrence of P can be recorded without explicitly comparing past k1. In addition to increasing the efficiency of Boyer-Moore, the Galil rule is required for proving linear-time execution in the worst case.	A simple but important optimization of Boyer-Moore was put forth by Galil in 1979.	/m/026jsv7	Zvi_Galil	68	73	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A simple but important optimization of Boyer-Moore was put forth by Galil in 1979. As opposed to shifting, the Galil rule deals with speeding up the actual comparisons done at each alignment by skipping sections that are known to match. Suppose that at an alignment k1, P is compared with T down to character c of T. Then if P is shifted to k2 such that its left end is between c and k1, in the next comparison phase a prefix of P must match the substring T. Thus if the comparisons get down to position k1 of T, an occurrence of P can be recorded without explicitly comparing past k1. In addition to increasing the efficiency of Boyer-Moore, the Galil rule is required for proving linear-time execution in the worst case.	As opposed to shifting, the Galil rule deals with speeding up the actual comparisons done at each alignment by skipping sections that are known to match.	/m/026jsv7	Zvi_Galil	28	33	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
A simple but important optimization of Boyer-Moore was put forth by Galil in 1979. As opposed to shifting, the Galil rule deals with speeding up the actual comparisons done at each alignment by skipping sections that are known to match. Suppose that at an alignment k1, P is compared with T down to character c of T. Then if P is shifted to k2 such that its left end is between c and k1, in the next comparison phase a prefix of P must match the substring T. Thus if the comparisons get down to position k1 of T, an occurrence of P can be recorded without explicitly comparing past k1. In addition to increasing the efficiency of Boyer-Moore, the Galil rule is required for proving linear-time execution in the worst case.	In addition to increasing the efficiency of Boyer-Moore, the Galil rule is required for proving linear-time execution in the worst case.	/m/026jsv7	Zvi_Galil	61	66	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In June 2008, College of Computing Dean Richard DeMillo announced plans for his resignation, citing conflicts with Georgia Tech provost and interim president Gary Schuster. DeMillo was temporarily replaced by James D. Foley, a professor in the School of Interactive Computing, until a permanent replacement could be found. On April 9, 2010, Zvi Galil was named the college's new dean.	On April 9, 2010, Zvi Galil was named the college's new dean.	/m/026jsv7	Zvi_Galil	18	27	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Following the resignation of Richard DeMillo as dean of the Georgia Tech College of Computing, Foley was appointed interim dean, effective July 1, 2008. Foley stepped down when Zvi Galil was appointed the new dean on July 1, 2010.	Foley stepped down when Zvi Galil was appointed the new dean on July 1, 2010.	/m/026jsv7	Zvi_Galil	24	33	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
In formal languages, which are used in mathematical logic and theoretical computer science, stringology deals with algorithms and data structures used for string processing. The name was coined in 1984 by computer scientist Zvi Galil.	The name was coined in 1984 by computer scientist Zvi Galil.	/m/026jsv7	Zvi_Galil	50	59	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Yung earned his Ph.D. from Columbia University in 1988 under the supervision of Zvi Galil. He has worked at the IBM Thomas J. Watson Research Center, been vice president and chief scientist at CertCo and been director of Advanced Authentication Research at RSA Laboratories, He has also held adjunct and visiting faculty appointments at Columbia, through which he has advised several Ph.D. students including G√∂del Prize winner Matthew K. Franklin.	Yung earned his Ph.D. from Columbia University in 1988 under the supervision of Zvi Galil.	/m/026jsv7	Zvi_Galil	80	89	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Franklin did his undergraduate studies at Pomona College, graduating in 1983 with a degree in mathematics, and was awarded a masters degree in mathematics in 1985 by the University of California, Berkeley. He earned his Ph.D. in computer science from Columbia University in 1994, under the joint supervision of Zvi Galil and Moti Yung. Prior to joining the UC Davis faculty in 2000, he worked at Xerox PARC, Bell Labs, and AT&T Labs.	He earned his Ph.D. in computer science from Columbia University in 1994, under the joint supervision of Zvi Galil and Moti Yung.	/m/026jsv7	Zvi_Galil	105	114	/business/board_member,/computer/computer_scientist,/education/academic,/influence/influence_node,/people/person
Stroustrup has a master's degree in mathematics and computer science (1975) from Aarhus University, Denmark, and a Ph.D. in computer science (1979) from the University of Cambridge, England, where he was a student at Churchill College. His thesis advisor in Cambridge was David Wheeler.	His thesis advisor in Cambridge was David Wheeler.	/m/02mbrr	David_Wheeler_(computer_scientist)	36	49	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
Initially registers were limited to an accumulator and a multiplier register. In 1953, David Wheeler, returning from a stay at the University of Illinois, designed an index register as an extension to the original EDSAC hardware.	In 1953, David Wheeler, returning from a stay at the University of Illinois, designed an index register as an extension to the original EDSAC hardware.	/m/02mbrr	David_Wheeler_(computer_scientist)	9	22	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
David Wheeler, who earned the world's first Computer Science PhD working on the project, is credited with inventing the concept of a subroutine. A user wrote a program that called a routine by jumping to the start of the subroutine with the address of the program counter plus one in the single register (a Wheeler jump). By convention the subroutine expected this and the first thing it did was to overwrite its final jump instruction with that address so that it returned. Multiple and nested subroutines could be called so long as the user knew the length of each one in order to calculate the location to jump to. The user then copied the code for the subroutine from a master tape onto their own tape following the end of their own program.	David Wheeler, who earned the world's first Computer Science PhD working on the project, is credited with inventing the concept of a subroutine.	/m/02mbrr	David_Wheeler_(computer_scientist)	0	13	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
Again, while loosely coupled layering is generally desirable in a program's architecture because it makes objects at each layer more interchangeable with existing or possible future implementations, other types of changes to the code will actually increase in complexity as more layers are added and so an extensively layered architecture can be seen as an anti-pattern as well. Adding a new field to a UI view, for example, requires changing every object at every layer in the architecture that is required to have knowledge about this new field (generally the view itself, any underlying controller/presenter class, data transfer objects, SOA layers, data access objects or mappings, and the database schema itself). A quote usually attributed either to David Wheeler or Butler Lampson reads, "There is no problem in computer science that cannot be solved by adding another layer of indirection, except having too many layers of indirection".	A quote usually attributed either to David Wheeler or Butler Lampson reads, "There is no problem in computer science that cannot be solved by adding another layer of indirection, except having too many layers of indirection".	/m/02mbrr	David_Wheeler_(computer_scientist)	37	50	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
The Burrows‚ÄìWheeler transform (BWT, also called block-sorting compression), is an algorithm used in data compression techniques such as bzip2. It was invented by Michael Burrows and David Wheeler in 1994 while working at DEC Systems Research Center in Palo Alto, California. It is based on a previously unpublished transformation discovered by Wheeler in 1983.	It was invented by Michael Burrows and David Wheeler in 1994 while working at DEC Systems Research Center in Palo Alto, California.	/m/02mbrr	David_Wheeler_(computer_scientist)	39	52	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
Lampson is often quoted as saying, "Any problem in computer science can be solved with another level of indirection," but in his Turing Award Lecture in 1993, Lampson himself attributes this saying to David Wheeler.	Lampson is often quoted as saying, "Any problem in computer science can be solved with another level of indirection," but in his Turing Award Lecture in 1993, Lampson himself attributes this saying to David Wheeler.	/m/02mbrr	David_Wheeler_(computer_scientist)	201	214	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
A famous aphorism of David Wheeler goes: "All problems in computer science can be solved by another level of indirection"; this is often deliberately mis-quoted with "abstraction layer" substituted for "level of indirection". Kevlin Henney's corollary to this is, "...except for the problem of too many layers of indirection."	A famous aphorism of David Wheeler goes: "All problems in computer science can be solved by another level of indirection"; this is often deliberately mis-quoted with "abstraction layer" substituted for "level of indirection".	/m/02mbrr	David_Wheeler_(computer_scientist)	21	34	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
D'Agapeyeff cipher  ‚Ä¢ Daniel J. Bernstein  ‚Ä¢ Data Authentication Algorithm  ‚Ä¢ Data Encryption Standard  ‚Ä¢ Datagram Transport Layer Security  ‚Ä¢ David Chaum  ‚Ä¢ David Kahn  ‚Ä¢ David Naccache  ‚Ä¢ David Wagner  ‚Ä¢ David Wheeler (computer scientist)  ‚Ä¢ Davies' attack  ‚Ä¢ Davies‚ÄìMeyer hash  ‚Ä¢ DEAL  ‚Ä¢ Decimal sequences for cryptography  ‚Ä¢ Decipherment  ‚Ä¢ Decisional Diffie‚ÄìHellman assumption  ‚Ä¢ Decorrelation theory  ‚Ä¢ Decrypt  ‚Ä¢ DeCSS  ‚Ä¢ Defence Signals Directorate  ‚Ä¢ Degree of anonymity  ‚Ä¢ Delegated Path Discovery  ‚Ä¢ Delegated Path Validation  ‚Ä¢ Deniable encryption  ‚Ä¢ Derek Taunt  ‚Ä¢ Derived unique key per transaction  ‚Ä¢ DES Challenges  ‚Ä¢ DES supplementary material  ‚Ä¢ DES-X  ‚Ä¢ Deterministic encryption  ‚Ä¢ DFC (cipher)  ‚Ä¢ Dictionary attack  ‚Ä¢ Differential cryptanalysis  ‚Ä¢ Differential-linear attack  ‚Ä¢ Differential power analysis  ‚Ä¢ Diffie‚ÄìHellman key exchange  ‚Ä¢ Diffie‚ÄìHellman problem  ‚Ä¢ DigiCipher 2  ‚Ä¢ Digital Fortress  ‚Ä¢ Digital rights management  ‚Ä¢ Digital signature  ‚Ä¢ Digital Signature Algorithm  ‚Ä¢ Digital timestamping  ‚Ä¢ Digital watermarking  ‚Ä¢ Dilly Knox  ‚Ä¢ Dining cryptographers problem  ‚Ä¢ Diplomatic bag  ‚Ä¢ Direct anonymous attestation  ‚Ä¢ Discrete logarithm  ‚Ä¢ Disk encryption  ‚Ä¢ Disk encryption hardware  ‚Ä¢ Disk encryption software  ‚Ä¢ Distance-bounding protocol  ‚Ä¢ Distinguishing attack  ‚Ä¢ Distributed.net  ‚Ä¢ DMA attack  ‚Ä¢ dm-crypt  ‚Ä¢ Dmitry Sklyarov  ‚Ä¢ DomainKeys  ‚Ä¢ Don Coppersmith  ‚Ä¢ Dorabella Cipher  ‚Ä¢ Doug Stinson  ‚Ä¢ Dragon (cipher)  ‚Ä¢ DRYAD  ‚Ä¢ Dvorak encoding  ‚Ä¢	D'Agapeyeff cipher  ‚Ä¢ Daniel J. Bernstein  ‚Ä¢ Data Authentication Algorithm  ‚Ä¢ Data Encryption Standard  ‚Ä¢ Datagram Transport Layer Security  ‚Ä¢ David Chaum  ‚Ä¢ David Kahn  ‚Ä¢ David Naccache  ‚Ä¢ David Wagner  ‚Ä¢ David Wheeler (computer scientist)  ‚Ä¢ Davies' attack  ‚Ä¢ Davies‚ÄìMeyer hash  ‚Ä¢ DEAL  ‚Ä¢ Decimal sequences for cryptography  ‚Ä¢ Decipherment  ‚Ä¢ Decisional Diffie‚ÄìHellman assumption  ‚Ä¢ Decorrelation theory  ‚Ä¢ Decrypt  ‚Ä¢ DeCSS  ‚Ä¢ Defence Signals Directorate  ‚Ä¢ Degree of anonymity  ‚Ä¢ Delegated Path Discovery  ‚Ä¢ Delegated Path Validation  ‚Ä¢ Deniable encryption  ‚Ä¢ Derek Taunt  ‚Ä¢ Derived unique key per transaction  ‚Ä¢ DES Challenges  ‚Ä¢ DES supplementary material  ‚Ä¢ DES-X  ‚Ä¢ Deterministic encryption  ‚Ä¢ DFC (cipher)  ‚Ä¢ Dictionary attack  ‚Ä¢ Differential cryptanalysis  ‚Ä¢ Differential-linear attack  ‚Ä¢ Differential power analysis  ‚Ä¢ Diffie‚ÄìHellman key exchange  ‚Ä¢ Diffie‚ÄìHellman problem  ‚Ä¢ DigiCipher 2  ‚Ä¢ Digital Fortress  ‚Ä¢ Digital rights management  ‚Ä¢ Digital signature  ‚Ä¢ Digital Signature Algorithm  ‚Ä¢ Digital timestamping  ‚Ä¢ Digital watermarking  ‚Ä¢ Dilly Knox  ‚Ä¢ Dining cryptographers problem  ‚Ä¢ Diplomatic bag  ‚Ä¢ Direct anonymous attestation  ‚Ä¢ Discrete logarithm  ‚Ä¢ Disk encryption  ‚Ä¢ Disk encryption hardware  ‚Ä¢ Disk encryption software  ‚Ä¢ Distance-bounding protocol  ‚Ä¢ Distinguishing attack  ‚Ä¢ Distributed.net  ‚Ä¢ DMA attack  ‚Ä¢ dm-crypt  ‚Ä¢ Dmitry Sklyarov  ‚Ä¢ DomainKeys  ‚Ä¢ Don Coppersmith  ‚Ä¢ Dorabella Cipher  ‚Ä¢ Doug Stinson  ‚Ä¢ Dragon (cipher)  ‚Ä¢ DRYAD  ‚Ä¢ Dvorak encoding  ‚Ä¢	/m/02mbrr	David_Wheeler_(computer_scientist)	206	240	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
People associated with the project include Andy Hopper, David Wheeler, Maurice Wilkes, and Roger Needham.	People associated with the project include Andy Hopper, David Wheeler, Maurice Wilkes, and Roger Needham.	/m/02mbrr	David_Wheeler_(computer_scientist)	56	69	/computer/computer_scientist,/education/academic,/law/inventor,/people/deceased_person,/people/person
